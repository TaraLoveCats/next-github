{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport axios from 'axios';\nvar userInitialState = {};\nvar LOGOUT = 'LOGOUT'; //thunk\n\nexport function logout() {\n  return function (dispatch) {\n    axios.post('/logout').then(function (resp) {\n      if (resp.staus === 200) {\n        dispatch({\n          type: LOGOUT\n        });\n      } else {\n        console.log('logout failed', resp);\n      }\n    })[\"catch\"](function (err) {\n      console.log('logout failed', err);\n    });\n  };\n}\n\nfunction userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : userInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGOUT:\n      return {};\n\n    default:\n      return state;\n  }\n}\n\nvar allReducers = combineReducers({\n  user: userReducer\n}); //export一个创建store的函数，每次生成的store都是新的\n\nexport default function initializeStore(state) {\n  var store = createStore(allReducers, _objectSpread({\n    user: userInitialState\n  }, state), composeWithDevTools(applyMiddleware(ReduxThunk)));\n  return store;\n}","map":{"version":3,"sources":["D:/编程/项目/next项目/next-github/store/store.js"],"names":["createStore","combineReducers","applyMiddleware","ReduxThunk","composeWithDevTools","axios","userInitialState","LOGOUT","logout","dispatch","post","then","resp","staus","type","console","log","err","userReducer","state","action","allReducers","user","initializeStore","store"],"mappings":";;;;;;;;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,gBAAgB,GAAG,EAAzB;AACA,IAAMC,MAAM,GAAG,QAAf,C,CAEA;;AACA,OAAO,SAASC,MAAT,GAAkB;AACxB,SAAO,UAAAC,QAAQ,EAAI;AAClBJ,IAAAA,KAAK,CAACK,IAAN,CAAW,SAAX,EACEC,IADF,CACO,UAAAC,IAAI,EAAI;AACb,UAAIA,IAAI,CAACC,KAAL,KAAe,GAAnB,EAAwB;AACvBJ,QAAAA,QAAQ,CAAC;AAAEK,UAAAA,IAAI,EAAEP;AAAR,SAAD,CAAR;AACA,OAFD,MAEO;AACNQ,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,IAA7B;AACA;AACD,KAPF,WAQQ,UAAAK,GAAG,EAAI;AACbF,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,GAA7B;AACA,KAVF;AAYA,GAbD;AAcA;;AAED,SAASC,WAAT,GAAuD;AAAA,MAAlCC,KAAkC,uEAA1Bb,gBAA0B;AAAA,MAARc,MAAQ;;AACtD,UAAQA,MAAM,CAACN,IAAf;AACC,SAAKP,MAAL;AACC,aAAO,EAAP;;AACD;AACC,aAAOY,KAAP;AAJF;AAMA;;AAED,IAAME,WAAW,GAAGpB,eAAe,CAAC;AACnCqB,EAAAA,IAAI,EAAEJ;AAD6B,CAAD,CAAnC,C,CAIA;;AACA,eAAe,SAASK,eAAT,CAAyBJ,KAAzB,EAAgC;AAC9C,MAAMK,KAAK,GAAGxB,WAAW,CACxBqB,WADwB;AAEtBC,IAAAA,IAAI,EAAEhB;AAFgB,KAEKa,KAFL,GAGxBf,mBAAmB,CAACF,eAAe,CAACC,UAAD,CAAhB,CAHK,CAAzB;AAMA,SAAOqB,KAAP;AACA","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport ReduxThunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport axios from 'axios'\r\n\r\nconst userInitialState = {}\r\nconst LOGOUT = 'LOGOUT'\r\n\r\n//thunk\r\nexport function logout() {\r\n\treturn dispatch => {\r\n\t\taxios.post('/logout')\r\n\t\t\t.then(resp => {\r\n\t\t\t\tif (resp.staus === 200) {\r\n\t\t\t\t\tdispatch({ type: LOGOUT })\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('logout failed', resp)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log('logout failed', err)\r\n\t\t\t})\r\n\t\t\t\r\n\t}\r\n}\r\n\r\nfunction userReducer(state = userInitialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase LOGOUT:\r\n\t\t\treturn {}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nconst allReducers = combineReducers({\r\n\tuser: userReducer,\r\n})\r\n\r\n//export一个创建store的函数，每次生成的store都是新的\r\nexport default function initializeStore(state) {\r\n\tconst store = createStore(\r\n\t\tallReducers,\r\n\t\t{ user: userInitialState, ...state },\r\n\t\tcomposeWithDevTools(applyMiddleware(ReduxThunk)),\r\n\t)\r\n\r\n\treturn store\r\n}"]},"metadata":{},"sourceType":"module"}