{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u7F16\\u7A0B\\\\\\u9879\\u76EE\\\\next\\u9879\\u76EE\\\\next-github\\\\components\\\\Container.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { cloneElement } from 'react';\nconst style = {\n  width: '100%',\n  maxWidth: 1200,\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  paddingLeft: 20,\n  paddingRight: 20\n}; // export default ({ children, comp: Comp = \"div\" }) => {\n//     return <Comp style={style}>{children}</Comp>\n// }\n\nexport default (({\n  children,\n  renderer = __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })\n}) => {\n  //在使用时改变renderer节点类型，以及对props进行扩展\n  const newElement = cloneElement(renderer, {\n    style: _objectSpread({}, style, {}, renderer.props.style),\n    children\n  });\n  return newElement;\n});","map":{"version":3,"sources":["D:/编程/项目/next项目/next-github/components/Container.jsx"],"names":["cloneElement","style","width","maxWidth","marginLeft","marginRight","paddingLeft","paddingRight","children","renderer","newElement","props"],"mappings":";;;;;;;;;;AAAA,SAASA,YAAT,QAA6B,OAA7B;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,KAAK,EAAE,MADG;AAEVC,EAAAA,QAAQ,EAAE,IAFA;AAGVC,EAAAA,UAAU,EAAE,MAHF;AAIVC,EAAAA,WAAW,EAAE,MAJH;AAKVC,EAAAA,WAAW,EAAE,EALH;AAMVC,EAAAA,YAAY,EAAE;AANJ,CAAd,C,CASA;AACA;AACA;;AAEA,gBAAe,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAQ,GAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArB,CAAD,KAAoC;AAC/C;AACA,QAAMC,UAAU,GAAGV,YAAY,CAACS,QAAD,EAAW;AACtCR,IAAAA,KAAK,oBAAMA,KAAN,MAAgBQ,QAAQ,CAACE,KAAT,CAAeV,KAA/B,CADiC;AAEtCO,IAAAA;AAFsC,GAAX,CAA/B;AAKA,SAAOE,UAAP;AACH,CARD","sourcesContent":["import { cloneElement } from 'react'\r\n\r\nconst style = {\r\n    width: '100%',\r\n    maxWidth: 1200,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n}\r\n\r\n// export default ({ children, comp: Comp = \"div\" }) => {\r\n//     return <Comp style={style}>{children}</Comp>\r\n// }\r\n\r\nexport default ({ children, renderer=<div /> }) => {\r\n    //在使用时改变renderer节点类型，以及对props进行扩展\r\n    const newElement = cloneElement(renderer, {\r\n        style: {...style, ...renderer.props.style},\r\n        children\r\n    })\r\n\r\n    return newElement\r\n}"]},"metadata":{},"sourceType":"module"}