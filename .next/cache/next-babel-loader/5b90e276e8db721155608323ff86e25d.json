{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport withRepoBasic from '../../components/with-repo-basic';\nimport api from '../../lib/api';\nimport MarkdownIt from 'markdown-it';\nimport 'github-markdown-css';\nvar md = new MarkdownIt(); //只用atob中文乱码\n\nfunction b642Utf8(str) {\n  return decodeURIComponent(escape(atob(str)));\n}\n\nfunction Detail(_ref) {\n  var readme = _ref.readme;\n  //readme.content base64解码 =》 转为html\n  var content = b642Utf8(readme.content);\n  var html = md.render(content);\n  return __jsx(\"div\", {\n    className: \"markdown-body\"\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: html\n    }\n  }));\n}\n\nDetail.getInitialProps = function _callee(_ref2) {\n  var query, req, res, owner, name, readmeResp;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref2.query, req = _ref2.req, res = _ref2.res;\n          owner = query.owner, name = query.name;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(api.request({\n            url: \"/repos/\".concat(owner, \"/\").concat(name, \"/readme\")\n          }, req, res));\n\n        case 4:\n          readmeResp = _context.sent;\n          return _context.abrupt(\"return\", {\n            readme: readmeResp.data\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withRepoBasic(Detail);","map":{"version":3,"sources":["D:/编程/项目/next项目/next-github/pages/detail/index.js"],"names":["withRepoBasic","api","MarkdownIt","md","b642Utf8","str","decodeURIComponent","escape","atob","Detail","readme","content","html","render","__html","getInitialProps","query","req","res","owner","name","request","url","readmeResp","data"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,kCAA1B;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,qBAAP;AAEA,IAAMC,EAAE,GAAG,IAAID,UAAJ,EAAX,C,CACA;;AACA,SAASE,QAAT,CAAkBC,GAAlB,EAAuB;AACnB,SAAOC,kBAAkB,CAACC,MAAM,CAACC,IAAI,CAACH,GAAD,CAAL,CAAP,CAAzB;AACH;;AAED,SAASI,MAAT,OAA4B;AAAA,MAAVC,MAAU,QAAVA,MAAU;AACxB;AACA,MAAMC,OAAO,GAAGP,QAAQ,CAACM,MAAM,CAACC,OAAR,CAAxB;AACA,MAAMC,IAAI,GAAGT,EAAE,CAACU,MAAH,CAAUF,OAAV,CAAb;AAEA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,uBAAuB,EAAE;AAAEG,MAAAA,MAAM,EAAEF;AAAV;AAA9B,IADJ,CADJ;AAKH;;AAEDH,MAAM,CAACM,eAAP,GAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,SAASA,KAAT,EAAgBC,GAAhB,SAAgBA,GAAhB,EAAqBC,GAArB,SAAqBA,GAArB;AACbC,UAAAA,KADa,GACGH,KADH,CACbG,KADa,EACNC,IADM,GACGJ,KADH,CACNI,IADM;AAAA;AAAA,2CAEInB,GAAG,CAACoB,OAAJ,CAAY;AACjCC,YAAAA,GAAG,mBAAYH,KAAZ,cAAqBC,IAArB;AAD8B,WAAZ,EAEtBH,GAFsB,EAEjBC,GAFiB,CAFJ;;AAAA;AAEfK,UAAAA,UAFe;AAAA,2CAMd;AACHb,YAAAA,MAAM,EAAEa,UAAU,CAACC;AADhB,WANc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAWA,eAAexB,aAAa,CAACS,MAAD,CAA5B","sourcesContent":["import withRepoBasic from '../../components/with-repo-basic'\r\nimport api from '../../lib/api'\r\nimport MarkdownIt from 'markdown-it'\r\nimport 'github-markdown-css'\r\n\r\nconst md = new MarkdownIt();\r\n//只用atob中文乱码\r\nfunction b642Utf8(str) {\r\n    return decodeURIComponent(escape(atob(str)))\r\n}\r\n\r\nfunction Detail({ readme }) {\r\n    //readme.content base64解码 =》 转为html\r\n    const content = b642Utf8(readme.content);\r\n    const html = md.render(content);\r\n\r\n    return (\r\n        <div className=\"markdown-body\">\r\n            <div dangerouslySetInnerHTML={{ __html: html }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nDetail.getInitialProps = async ({ query, req, res }) => {\r\n    const { owner, name } = query;\r\n    const readmeResp = await api.request({\r\n        url: `/repos/${owner}/${name}/readme`\r\n    }, req, res);\r\n\r\n    return {\r\n        readme: readmeResp.data,\r\n    }\r\n}\r\n\r\nexport default withRepoBasic(Detail)"]},"metadata":{},"sourceType":"module"}