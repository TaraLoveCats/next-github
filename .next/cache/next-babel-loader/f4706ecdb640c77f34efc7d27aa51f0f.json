{"ast":null,"code":"import _Result from \"antd/lib/result\";\nimport _Button from \"antd/lib/button\";\nimport _Icon from \"antd/lib/icon\";\nimport _Tabs from \"antd/lib/tabs\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport Repo from '../components/Repo';\nimport LRU from 'lru-cache';\nimport Router, { useRouter } from 'next/router';\nimport { cacheArray } from '../lib/repo-basic-cache';\nconst {\n  TabPane\n} = _Tabs;\nconst cache = new LRU({\n  maxAge: 1000 * 60 * 30 //30min\n\n});\nconst isServer = true;\nexport default function Index({\n  userRepos = [],\n  userStarredRepos = []\n}) {\n  const user = useSelector(state => state.user);\n  const router = useRouter();\n  const activeTabKey = router.query.key || 'repos';\n\n  const handleTabChange = activeTabKey => {\n    Router.push(`/?key=${activeTabKey}`);\n  }; //在Index页面不频繁请求repo信息\n\n\n  useEffect(() => {\n    if (!isServer) {\n      userRepos && cache.set('userRepos', userRepos);\n      userStarredRepos && cache.set('userStarredRepos', userStarredRepos);\n    }\n  }, [userRepos, userStarredRepos]); //跳转到/search页面不用重新请求repo信息\n\n  useEffect(() => {\n    if (!isServer) {\n      cacheArray(userRepos);\n      cacheArray(userStarredRepos);\n    }\n  });\n\n  const BeforeLogin = () => __jsx(React.Fragment, null, __jsx(_Result, {\n    icon: __jsx(_Icon, {\n      type: \"github\"\n    }),\n    title: \"Click the button to login into your Github account \",\n    extra: __jsx(_Button, {\n      type: \"primary\"\n    }, \"Log in\")\n  }), __jsx(_JSXStyle, {\n    id: \"400248131\"\n  }, \".ant-result-info.jsx-400248131 .ant-result-icon.jsx-400248131>.anticon.jsx-400248131{color:#001529;}.anticon.jsx-400248131 .anticon-github.jsx-400248131{color:#001529;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFznvJbnqItcXOmhueebrlxcbmV4dOmhueebrlxcbmV4dC1naXRodWJcXHBhZ2VzXFxpbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4Q3dCLEFBR21DLEFBR0EsY0FGbEIsQUFHQSIsImZpbGUiOiJEOlxc57yW56iLXFzpobnnm65cXG5leHTpobnnm65cXG5leHQtZ2l0aHViXFxwYWdlc1xcaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTZWxlY3RvciB9IGZyb20gJ3JlYWN0LXJlZHV4J1xyXG5pbXBvcnQgeyBCdXR0b24sIFRhYnMsIFJlc3VsdCwgSWNvbiB9IGZyb20gJ2FudGQnXHJcbmltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgUmVwbyBmcm9tICcuLi9jb21wb25lbnRzL1JlcG8nXHJcbmltcG9ydCBMUlUgZnJvbSAnbHJ1LWNhY2hlJ1xyXG5pbXBvcnQgIFJvdXRlciwgeyB1c2VSb3V0ZXIgfSBmcm9tICduZXh0L3JvdXRlcidcclxuaW1wb3J0IHsgY2FjaGVBcnJheSB9IGZyb20gJy4uL2xpYi9yZXBvLWJhc2ljLWNhY2hlJ1xyXG5cclxuY29uc3QgeyBUYWJQYW5lIH0gPSBUYWJzO1xyXG5jb25zdCBjYWNoZSA9IG5ldyBMUlUoe1xyXG4gICAgbWF4QWdlOiAxMDAwICogNjAgKiAzMCAvLzMwbWluXHJcbn0pXHJcbmNvbnN0IGlzU2VydmVyID0gdHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCdcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEluZGV4KHsgdXNlclJlcG9zID0gW10sIHVzZXJTdGFycmVkUmVwb3MgPSBbXSB9KSB7XHJcbiAgICBjb25zdCB1c2VyID0gdXNlU2VsZWN0b3Ioc3RhdGUgPT4gc3RhdGUudXNlcik7XHJcbiAgICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcclxuICAgIGNvbnN0IGFjdGl2ZVRhYktleSA9IHJvdXRlci5xdWVyeS5rZXkgfHwgJ3JlcG9zJztcclxuXHJcbiAgICBjb25zdCBoYW5kbGVUYWJDaGFuZ2UgPSAoYWN0aXZlVGFiS2V5KSA9PiB7XHJcbiAgICAgICAgUm91dGVyLnB1c2goYC8/a2V5PSR7YWN0aXZlVGFiS2V5fWApXHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8v5ZyoSW5kZXjpobXpnaLkuI3popHnuYHor7fmsYJyZXBv5L+h5oGvXHJcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgICAgIGlmICghaXNTZXJ2ZXIpIHsgXHJcbiAgICAgICAgICAgIHVzZXJSZXBvcyAmJiBjYWNoZS5zZXQoJ3VzZXJSZXBvcycsIHVzZXJSZXBvcylcclxuICAgICAgICAgICAgdXNlclN0YXJyZWRSZXBvcyAmJiAgY2FjaGUuc2V0KCd1c2VyU3RhcnJlZFJlcG9zJywgdXNlclN0YXJyZWRSZXBvcylcclxuICAgICAgICB9XHJcbiAgICB9LCBbdXNlclJlcG9zLCB1c2VyU3RhcnJlZFJlcG9zXSlcclxuXHJcbiAgICAvL+i3s+i9rOWIsC9zZWFyY2jpobXpnaLkuI3nlKjph43mlrDor7fmsYJyZXBv5L+h5oGvXHJcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgICAgIGlmICghaXNTZXJ2ZXIpIHtcclxuICAgICAgICAgICAgY2FjaGVBcnJheSh1c2VyUmVwb3MpXHJcbiAgICAgICAgICAgIGNhY2hlQXJyYXkodXNlclN0YXJyZWRSZXBvcylcclxuICAgICAgICB9XHJcbiAgICB9KVxyXG5cclxuXHRjb25zdCBCZWZvcmVMb2dpbiA9ICgpID0+IChcclxuXHRcdDw+XHJcbiAgICAgICAgICAgIDxSZXN1bHRcclxuICAgICAgICAgICAgICAgIGljb249ezxJY29uIHR5cGU9XCJnaXRodWJcIiAvPn1cclxuICAgICAgICAgICAgICAgIHRpdGxlPVwiQ2xpY2sgdGhlIGJ1dHRvbiB0byBsb2dpbiBpbnRvIHlvdXIgR2l0aHViIGFjY291bnQgXCJcclxuICAgICAgICAgICAgICAgIGV4dHJhPXs8QnV0dG9uIHR5cGU9XCJwcmltYXJ5XCI+TG9nIGluPC9CdXR0b24+fVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgICAgICAgICAuYW50LXJlc3VsdC1pbmZvIC5hbnQtcmVzdWx0LWljb24gPiAuYW50aWNvbiB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICMwMDE1Mjk7XHJcbiAgICAgICAgICAgICAgICB9ICAgIFxyXG4gICAgICAgICAgICAgICAgLmFudGljb24gLmFudGljb24tZ2l0aHViIHtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzAwMTUyOTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH08L3N0eWxlPlxyXG5cdFx0PC8+XHJcblx0KVxyXG5cdFxyXG5cdGlmICghdXNlciB8fCAhdXNlci5pZCkge1xyXG5cdFx0cmV0dXJuIDxCZWZvcmVMb2dpbiAvPlxyXG5cdH1cclxuXHJcblx0cmV0dXJuIChcclxuXHRcdDw+XHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lPVwicm9vdFwiPlxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwidXNlci1pbmZvXCI+XHJcblx0XHRcdFx0XHQ8aW1nIHNyYz17dXNlci5hdmF0YXJfdXJsfSBhbHQ9XCJ1c2VyIGF2YXRhclwiIGNsYXNzTmFtZT1cInVzZXItYXZhdGFyXCIvPlxyXG5cdFx0XHRcdFx0PHAgY2xhc3NOYW1lPVwidXNlci1uYW1lXCI+e3VzZXIubG9naW59PC9wPlxyXG5cdFx0XHRcdDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPFRhYnMgXHJcbiAgICAgICAgICAgICAgICAgICAgYWN0aXZlS2V5PXthY3RpdmVUYWJLZXl9IFxyXG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVUYWJDaGFuZ2V9IFxyXG4gICAgICAgICAgICAgICAgICAgIGFuaW1hdGVkPXtmYWxzZX1cclxuICAgICAgICAgICAgICAgICAgICBzaXplPVwibGFyZ2VcIlxyXG4gICAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgICAgIDxUYWJQYW5lIGtleT1cInJlcG9zXCIgdGFiPVwiUmVwb3NpdG9yaWVzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHt1c2VyUmVwb3MubWFwKHJlcG8gPT4gPFJlcG8ga2V5PXtyZXBvLmlkfSByZXBvPXtyZXBvfSAvPil9XHJcbiAgICAgICAgICAgICAgICAgICAgPC9UYWJQYW5lPlxyXG4gICAgICAgICAgICAgICAgICAgIDxUYWJQYW5lIGtleT1cInN0YXJzXCIgdGFiPVwiU3RhcnNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAge3VzZXJTdGFycmVkUmVwb3MubWFwKHJlcG8gPT4gPFJlcG8ga2V5PXtyZXBvLmlkfSByZXBvPXtyZXBvfSAvPil9XHJcbiAgICAgICAgICAgICAgICAgICAgPC9UYWJQYW5lPlxyXG4gICAgICAgICAgICAgICAgPC9UYWJzPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdFx0PHN0eWxlIGpzeD57YFxyXG5cdFx0XHRcdC5yb290IHtcclxuXHRcdFx0XHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRcdFx0XHRhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuXHRcdFx0XHRcdHBhZGRpbmc6IDIwcHggMDtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0LnVzZXItaW5mbyB7XHJcblx0XHRcdFx0XHR3aWR0aDogMjAwcHg7XHJcblx0XHRcdFx0XHRtYXJnaW4tcmlnaHQ6IDQwcHg7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdC51c2VyLW5hbWUge1xyXG5cdFx0XHRcdFx0Zm9udC1zaXplOiAyMHB4O1xyXG5cdFx0XHRcdFx0Zm9udC13ZWlnaHQ6IDMwMDtcclxuXHRcdFx0XHRcdG1hcmdpbi10b3A6IDEwcHg7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdC51c2VyLWF2YXRhciB7XHJcblx0XHRcdFx0XHR3aWR0aDogMTAwJTtcclxuXHRcdFx0XHRcdGJvcmRlci1yYWRpdXM6IDRweDtcclxuXHRcdFx0XHR9XHJcblx0XHRcdGB9PC9zdHlsZT5cclxuXHRcdDwvPlxyXG5cdClcclxufVxyXG5cclxuY29uc3QgYXBpID0gcmVxdWlyZSgnLi4vbGliL2FwaScpXHJcblxyXG4vL+iwg+eUqO+8miDmnI3liqHnq6/muLLmn5NpbmRleOaXtiAv5a6i5oi356uv5a+86Iiq5YiwaW5kZXjml7ZcclxuSW5kZXguZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgKHsgcmVxLCByZXMsIHJlZHV4U3RvcmUgfSkgPT4ge1xyXG4gICAgY29uc3QgdXNlciA9IHJlZHV4U3RvcmUuZ2V0U3RhdGUoKS51c2VyO1xyXG4gICAgaWYgKCF1c2VyIHx8ICF1c2VyLmlkICkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHVzZXJSZXBvczogbnVsbCxcclxuICAgICAgICAgICAgdXNlclN0YXJyZWRSZXBvczogbnVsbFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGlmICghaXNTZXJ2ZXIpIHsgLy/mnI3liqHnq6/njq/looPkuI3kvb/nlKjnvJPlrZhcclxuICAgICAgICBjb25zdCB1c2VyUmVwb3MgPSBjYWNoZS5nZXQoJ3VzZXJSZXBvcycpO1xyXG4gICAgICAgIGNvbnN0IHVzZXJTdGFycmVkUmVwb3MgPSBjYWNoZS5nZXQoJ3VzZXJTdGFycmVkUmVwb3MnKVxyXG4gICAgICAgIGlmICh1c2VyUmVwb3MgJiYgdXNlclN0YXJyZWRSZXBvcykge1xyXG4gICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgdXNlclJlcG9zLFxyXG4gICAgICAgICAgICAgICAgdXNlclN0YXJyZWRSZXBvcyAgICBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBjb25zdCB1c2VyUmVwb3NSZXNwID0gYXdhaXQgYXBpLnJlcXVlc3QoXHJcbiAgICAgICAgeyB1cmw6ICcvdXNlci9yZXBvcycgfSwgXHJcbiAgICAgICAgcmVxLCBcclxuICAgICAgICByZXNcclxuICAgICk7XHJcbiAgICBjb25zdCB1c2VyU3RhcnJlZFJlcG9zUmVzcCA9IGF3YWl0IGFwaS5yZXF1ZXN0KFxyXG4gICAgICAgIHsgdXJsOiAnL3VzZXIvc3RhcnJlZCd9LFxyXG4gICAgICAgIHJlcSxcclxuICAgICAgICByZXNcclxuICAgICk7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHVzZXJSZXBvczogdXNlclJlcG9zUmVzcC5kYXRhIHx8IFtdLFxyXG4gICAgICAgIHVzZXJTdGFycmVkUmVwb3M6IHVzZXJTdGFycmVkUmVwb3NSZXNwLmRhdGEgfHwgW11cclxuICAgIH1cclxufVxyXG5cclxuIl19 */\\n/*@ sourceURL=D:\\\\\\\\\\u7F16\\u7A0B\\\\\\\\\\u9879\\u76EE\\\\\\\\next\\u9879\\u76EE\\\\\\\\next-github\\\\\\\\pages\\\\\\\\index.js */\"));\n\n  if (!user || !user.id) {\n    return __jsx(BeforeLogin, null);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-1042228906\" + \" \" + \"root\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1042228906\" + \" \" + \"user-info\"\n  }, __jsx(\"img\", {\n    src: user.avatar_url,\n    alt: \"user avatar\",\n    className: \"jsx-1042228906\" + \" \" + \"user-avatar\"\n  }), __jsx(\"p\", {\n    className: \"jsx-1042228906\" + \" \" + \"user-name\"\n  }, user.login)), __jsx(_Tabs, {\n    activeKey: activeTabKey,\n    onChange: handleTabChange,\n    animated: false,\n    size: \"large\"\n  }, __jsx(TabPane, {\n    key: \"repos\",\n    tab: \"Repositories\"\n  }, userRepos.map(repo => __jsx(Repo, {\n    key: repo.id,\n    repo: repo\n  }))), __jsx(TabPane, {\n    key: \"stars\",\n    tab: \"Stars\"\n  }, userStarredRepos.map(repo => __jsx(Repo, {\n    key: repo.id,\n    repo: repo\n  }))))), __jsx(_JSXStyle, {\n    id: \"1042228906\"\n  }, \".root.jsx-1042228906{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;padding:20px 0;}.user-info.jsx-1042228906{width:200px;margin-right:40px;}.user-name.jsx-1042228906{font-size:20px;font-weight:300;margin-top:10px;}.user-avatar.jsx-1042228906{width:100%;border-radius:4px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFznvJbnqItcXOmhueebrlxcbmV4dOmhueebrlxcbmV4dC1naXRodWJcXHBhZ2VzXFxpbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrRmUsQUFHbUIsQUFLRCxBQUlHLEFBS0osV0FDTyxDQVRBLEdBSUYsY0FNakIsQ0FUQSxDQUlpQixnQkFDakIsMkJBWHdCLDZHQUNSLGVBQ2hCIiwiZmlsZSI6IkQ6XFznvJbnqItcXOmhueebrlxcbmV4dOmhueebrlxcbmV4dC1naXRodWJcXHBhZ2VzXFxpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVNlbGVjdG9yIH0gZnJvbSAncmVhY3QtcmVkdXgnXHJcbmltcG9ydCB7IEJ1dHRvbiwgVGFicywgUmVzdWx0LCBJY29uIH0gZnJvbSAnYW50ZCdcclxuaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnXHJcbmltcG9ydCBSZXBvIGZyb20gJy4uL2NvbXBvbmVudHMvUmVwbydcclxuaW1wb3J0IExSVSBmcm9tICdscnUtY2FjaGUnXHJcbmltcG9ydCAgUm91dGVyLCB7IHVzZVJvdXRlciB9IGZyb20gJ25leHQvcm91dGVyJ1xyXG5pbXBvcnQgeyBjYWNoZUFycmF5IH0gZnJvbSAnLi4vbGliL3JlcG8tYmFzaWMtY2FjaGUnXHJcblxyXG5jb25zdCB7IFRhYlBhbmUgfSA9IFRhYnM7XHJcbmNvbnN0IGNhY2hlID0gbmV3IExSVSh7XHJcbiAgICBtYXhBZ2U6IDEwMDAgKiA2MCAqIDMwIC8vMzBtaW5cclxufSlcclxuY29uc3QgaXNTZXJ2ZXIgPSB0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSW5kZXgoeyB1c2VyUmVwb3MgPSBbXSwgdXNlclN0YXJyZWRSZXBvcyA9IFtdIH0pIHtcclxuICAgIGNvbnN0IHVzZXIgPSB1c2VTZWxlY3RvcihzdGF0ZSA9PiBzdGF0ZS51c2VyKTtcclxuICAgIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xyXG4gICAgY29uc3QgYWN0aXZlVGFiS2V5ID0gcm91dGVyLnF1ZXJ5LmtleSB8fCAncmVwb3MnO1xyXG5cclxuICAgIGNvbnN0IGhhbmRsZVRhYkNoYW5nZSA9IChhY3RpdmVUYWJLZXkpID0+IHtcclxuICAgICAgICBSb3V0ZXIucHVzaChgLz9rZXk9JHthY3RpdmVUYWJLZXl9YClcclxuICAgIH1cclxuICAgIFxyXG4gICAgLy/lnKhJbmRleOmhtemdouS4jemikee5geivt+axgnJlcG/kv6Hmga9cclxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgaWYgKCFpc1NlcnZlcikgeyBcclxuICAgICAgICAgICAgdXNlclJlcG9zICYmIGNhY2hlLnNldCgndXNlclJlcG9zJywgdXNlclJlcG9zKVxyXG4gICAgICAgICAgICB1c2VyU3RhcnJlZFJlcG9zICYmICBjYWNoZS5zZXQoJ3VzZXJTdGFycmVkUmVwb3MnLCB1c2VyU3RhcnJlZFJlcG9zKVxyXG4gICAgICAgIH1cclxuICAgIH0sIFt1c2VyUmVwb3MsIHVzZXJTdGFycmVkUmVwb3NdKVxyXG5cclxuICAgIC8v6Lez6L2s5YiwL3NlYXJjaOmhtemdouS4jeeUqOmHjeaWsOivt+axgnJlcG/kv6Hmga9cclxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgaWYgKCFpc1NlcnZlcikge1xyXG4gICAgICAgICAgICBjYWNoZUFycmF5KHVzZXJSZXBvcylcclxuICAgICAgICAgICAgY2FjaGVBcnJheSh1c2VyU3RhcnJlZFJlcG9zKVxyXG4gICAgICAgIH1cclxuICAgIH0pXHJcblxyXG5cdGNvbnN0IEJlZm9yZUxvZ2luID0gKCkgPT4gKFxyXG5cdFx0PD5cclxuICAgICAgICAgICAgPFJlc3VsdFxyXG4gICAgICAgICAgICAgICAgaWNvbj17PEljb24gdHlwZT1cImdpdGh1YlwiIC8+fVxyXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJDbGljayB0aGUgYnV0dG9uIHRvIGxvZ2luIGludG8geW91ciBHaXRodWIgYWNjb3VudCBcIlxyXG4gICAgICAgICAgICAgICAgZXh0cmE9ezxCdXR0b24gdHlwZT1cInByaW1hcnlcIj5Mb2cgaW48L0J1dHRvbj59XHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAgICAgICAgIC5hbnQtcmVzdWx0LWluZm8gLmFudC1yZXN1bHQtaWNvbiA+IC5hbnRpY29uIHtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzAwMTUyOTtcclxuICAgICAgICAgICAgICAgIH0gICAgXHJcbiAgICAgICAgICAgICAgICAuYW50aWNvbiAuYW50aWNvbi1naXRodWIge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjMDAxNTI5O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBgfTwvc3R5bGU+XHJcblx0XHQ8Lz5cclxuXHQpXHJcblx0XHJcblx0aWYgKCF1c2VyIHx8ICF1c2VyLmlkKSB7XHJcblx0XHRyZXR1cm4gPEJlZm9yZUxvZ2luIC8+XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gKFxyXG5cdFx0PD5cclxuXHRcdFx0PGRpdiBjbGFzc05hbWU9XCJyb290XCI+XHJcblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJ1c2VyLWluZm9cIj5cclxuXHRcdFx0XHRcdDxpbWcgc3JjPXt1c2VyLmF2YXRhcl91cmx9IGFsdD1cInVzZXIgYXZhdGFyXCIgY2xhc3NOYW1lPVwidXNlci1hdmF0YXJcIi8+XHJcblx0XHRcdFx0XHQ8cCBjbGFzc05hbWU9XCJ1c2VyLW5hbWVcIj57dXNlci5sb2dpbn08L3A+XHJcblx0XHRcdFx0PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8VGFicyBcclxuICAgICAgICAgICAgICAgICAgICBhY3RpdmVLZXk9e2FjdGl2ZVRhYktleX0gXHJcbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZVRhYkNoYW5nZX0gXHJcbiAgICAgICAgICAgICAgICAgICAgYW5pbWF0ZWQ9e2ZhbHNlfVxyXG4gICAgICAgICAgICAgICAgICAgIHNpemU9XCJsYXJnZVwiXHJcbiAgICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICAgICAgPFRhYlBhbmUga2V5PVwicmVwb3NcIiB0YWI9XCJSZXBvc2l0b3JpZXNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAge3VzZXJSZXBvcy5tYXAocmVwbyA9PiA8UmVwbyBrZXk9e3JlcG8uaWR9IHJlcG89e3JlcG99IC8+KX1cclxuICAgICAgICAgICAgICAgICAgICA8L1RhYlBhbmU+XHJcbiAgICAgICAgICAgICAgICAgICAgPFRhYlBhbmUga2V5PVwic3RhcnNcIiB0YWI9XCJTdGFyc1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7dXNlclN0YXJyZWRSZXBvcy5tYXAocmVwbyA9PiA8UmVwbyBrZXk9e3JlcG8uaWR9IHJlcG89e3JlcG99IC8+KX1cclxuICAgICAgICAgICAgICAgICAgICA8L1RhYlBhbmU+XHJcbiAgICAgICAgICAgICAgICA8L1RhYnM+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8c3R5bGUganN4PntgXHJcblx0XHRcdFx0LnJvb3Qge1xyXG5cdFx0XHRcdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdFx0XHRcdGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG5cdFx0XHRcdFx0cGFkZGluZzogMjBweCAwO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHQudXNlci1pbmZvIHtcclxuXHRcdFx0XHRcdHdpZHRoOiAyMDBweDtcclxuXHRcdFx0XHRcdG1hcmdpbi1yaWdodDogNDBweDtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0LnVzZXItbmFtZSB7XHJcblx0XHRcdFx0XHRmb250LXNpemU6IDIwcHg7XHJcblx0XHRcdFx0XHRmb250LXdlaWdodDogMzAwO1xyXG5cdFx0XHRcdFx0bWFyZ2luLXRvcDogMTBweDtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0LnVzZXItYXZhdGFyIHtcclxuXHRcdFx0XHRcdHdpZHRoOiAxMDAlO1xyXG5cdFx0XHRcdFx0Ym9yZGVyLXJhZGl1czogNHB4O1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0YH08L3N0eWxlPlxyXG5cdFx0PC8+XHJcblx0KVxyXG59XHJcblxyXG5jb25zdCBhcGkgPSByZXF1aXJlKCcuLi9saWIvYXBpJylcclxuXHJcbi8v6LCD55So77yaIOacjeWKoeerr+a4suafk2luZGV45pe2IC/lrqLmiLfnq6/lr7zoiKrliLBpbmRleOaXtlxyXG5JbmRleC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyAoeyByZXEsIHJlcywgcmVkdXhTdG9yZSB9KSA9PiB7XHJcbiAgICBjb25zdCB1c2VyID0gcmVkdXhTdG9yZS5nZXRTdGF0ZSgpLnVzZXI7XHJcbiAgICBpZiAoIXVzZXIgfHwgIXVzZXIuaWQgKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdXNlclJlcG9zOiBudWxsLFxyXG4gICAgICAgICAgICB1c2VyU3RhcnJlZFJlcG9zOiBudWxsXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYgKCFpc1NlcnZlcikgeyAvL+acjeWKoeerr+eOr+Wig+S4jeS9v+eUqOe8k+WtmFxyXG4gICAgICAgIGNvbnN0IHVzZXJSZXBvcyA9IGNhY2hlLmdldCgndXNlclJlcG9zJyk7XHJcbiAgICAgICAgY29uc3QgdXNlclN0YXJyZWRSZXBvcyA9IGNhY2hlLmdldCgndXNlclN0YXJyZWRSZXBvcycpXHJcbiAgICAgICAgaWYgKHVzZXJSZXBvcyAmJiB1c2VyU3RhcnJlZFJlcG9zKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICB1c2VyUmVwb3MsXHJcbiAgICAgICAgICAgICAgICB1c2VyU3RhcnJlZFJlcG9zICAgIFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHVzZXJSZXBvc1Jlc3AgPSBhd2FpdCBhcGkucmVxdWVzdChcclxuICAgICAgICB7IHVybDogJy91c2VyL3JlcG9zJyB9LCBcclxuICAgICAgICByZXEsIFxyXG4gICAgICAgIHJlc1xyXG4gICAgKTtcclxuICAgIGNvbnN0IHVzZXJTdGFycmVkUmVwb3NSZXNwID0gYXdhaXQgYXBpLnJlcXVlc3QoXHJcbiAgICAgICAgeyB1cmw6ICcvdXNlci9zdGFycmVkJ30sXHJcbiAgICAgICAgcmVxLFxyXG4gICAgICAgIHJlc1xyXG4gICAgKTtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgdXNlclJlcG9zOiB1c2VyUmVwb3NSZXNwLmRhdGEgfHwgW10sXHJcbiAgICAgICAgdXNlclN0YXJyZWRSZXBvczogdXNlclN0YXJyZWRSZXBvc1Jlc3AuZGF0YSB8fCBbXVxyXG4gICAgfVxyXG59XHJcblxyXG4iXX0= */\\n/*@ sourceURL=D:\\\\\\\\\\u7F16\\u7A0B\\\\\\\\\\u9879\\u76EE\\\\\\\\next\\u9879\\u76EE\\\\\\\\next-github\\\\\\\\pages\\\\\\\\index.js */\"));\n}\n\nconst api = require('../lib/api'); //调用： 服务端渲染index时 /客户端导航到index时\n\n\nIndex.getInitialProps = async ({\n  req,\n  res,\n  reduxStore\n}) => {\n  const user = reduxStore.getState().user;\n\n  if (!user || !user.id) {\n    return {\n      userRepos: null,\n      userStarredRepos: null\n    };\n  }\n\n  if (!isServer) {\n    //服务端环境不使用缓存\n    const userRepos = cache.get('userRepos');\n    const userStarredRepos = cache.get('userStarredRepos');\n\n    if (userRepos && userStarredRepos) {\n      return {\n        userRepos,\n        userStarredRepos\n      };\n    }\n  }\n\n  const userReposResp = await api.request({\n    url: '/user/repos'\n  }, req, res);\n  const userStarredReposResp = await api.request({\n    url: '/user/starred'\n  }, req, res);\n  return {\n    userRepos: userReposResp.data || [],\n    userStarredRepos: userStarredReposResp.data || []\n  };\n};","map":{"version":3,"sources":["D:/编程/项目/next项目/next-github/pages/index.js"],"names":["useSelector","useEffect","Repo","LRU","Router","useRouter","cacheArray","TabPane","cache","maxAge","isServer","Index","userRepos","userStarredRepos","user","state","router","activeTabKey","query","key","handleTabChange","push","set","BeforeLogin","id","avatar_url","login","map","repo","api","require","getInitialProps","req","res","reduxStore","getState","get","userReposResp","request","url","userStarredReposResp","data"],"mappings":"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","sourcesContent":["import { useSelector } from 'react-redux'\r\nimport { Button, Tabs, Result, Icon } from 'antd'\r\nimport { useEffect } from 'react'\r\nimport Repo from '../components/Repo'\r\nimport LRU from 'lru-cache'\r\nimport  Router, { useRouter } from 'next/router'\r\nimport { cacheArray } from '../lib/repo-basic-cache'\r\n\r\nconst { TabPane } = Tabs;\r\nconst cache = new LRU({\r\n    maxAge: 1000 * 60 * 30 //30min\r\n})\r\nconst isServer = typeof window === 'undefined'\r\n\r\nexport default function Index({ userRepos = [], userStarredRepos = [] }) {\r\n    const user = useSelector(state => state.user);\r\n    const router = useRouter();\r\n    const activeTabKey = router.query.key || 'repos';\r\n\r\n    const handleTabChange = (activeTabKey) => {\r\n        Router.push(`/?key=${activeTabKey}`)\r\n    }\r\n    \r\n    //在Index页面不频繁请求repo信息\r\n    useEffect(() => {\r\n        if (!isServer) { \r\n            userRepos && cache.set('userRepos', userRepos)\r\n            userStarredRepos &&  cache.set('userStarredRepos', userStarredRepos)\r\n        }\r\n    }, [userRepos, userStarredRepos])\r\n\r\n    //跳转到/search页面不用重新请求repo信息\r\n    useEffect(() => {\r\n        if (!isServer) {\r\n            cacheArray(userRepos)\r\n            cacheArray(userStarredRepos)\r\n        }\r\n    })\r\n\r\n\tconst BeforeLogin = () => (\r\n\t\t<>\r\n            <Result\r\n                icon={<Icon type=\"github\" />}\r\n                title=\"Click the button to login into your Github account \"\r\n                extra={<Button type=\"primary\">Log in</Button>}\r\n            />\r\n            <style jsx>{`\r\n                .ant-result-info .ant-result-icon > .anticon {\r\n                    color: #001529;\r\n                }    \r\n                .anticon .anticon-github {\r\n                    color: #001529;\r\n                }\r\n            `}</style>\r\n\t\t</>\r\n\t)\r\n\t\r\n\tif (!user || !user.id) {\r\n\t\treturn <BeforeLogin />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"root\">\r\n\t\t\t\t<div className=\"user-info\">\r\n\t\t\t\t\t<img src={user.avatar_url} alt=\"user avatar\" className=\"user-avatar\"/>\r\n\t\t\t\t\t<p className=\"user-name\">{user.login}</p>\r\n\t\t\t\t</div>\r\n                <Tabs \r\n                    activeKey={activeTabKey} \r\n                    onChange={handleTabChange} \r\n                    animated={false}\r\n                    size=\"large\"\r\n                >\r\n                    <TabPane key=\"repos\" tab=\"Repositories\">\r\n                        {userRepos.map(repo => <Repo key={repo.id} repo={repo} />)}\r\n                    </TabPane>\r\n                    <TabPane key=\"stars\" tab=\"Stars\">\r\n                        {userStarredRepos.map(repo => <Repo key={repo.id} repo={repo} />)}\r\n                    </TabPane>\r\n                </Tabs>\r\n\t\t\t</div>\r\n\t\t\t<style jsx>{`\r\n\t\t\t\t.root {\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\talign-items: flex-start;\r\n\t\t\t\t\tpadding: 20px 0;\r\n\t\t\t\t}\r\n\t\t\t\t.user-info {\r\n\t\t\t\t\twidth: 200px;\r\n\t\t\t\t\tmargin-right: 40px;\r\n\t\t\t\t}\r\n\t\t\t\t.user-name {\r\n\t\t\t\t\tfont-size: 20px;\r\n\t\t\t\t\tfont-weight: 300;\r\n\t\t\t\t\tmargin-top: 10px;\r\n\t\t\t\t}\r\n\t\t\t\t.user-avatar {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tborder-radius: 4px;\r\n\t\t\t\t}\r\n\t\t\t`}</style>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst api = require('../lib/api')\r\n\r\n//调用： 服务端渲染index时 /客户端导航到index时\r\nIndex.getInitialProps = async ({ req, res, reduxStore }) => {\r\n    const user = reduxStore.getState().user;\r\n    if (!user || !user.id ) {\r\n        return {\r\n            userRepos: null,\r\n            userStarredRepos: null\r\n        }\r\n    }\r\n    if (!isServer) { //服务端环境不使用缓存\r\n        const userRepos = cache.get('userRepos');\r\n        const userStarredRepos = cache.get('userStarredRepos')\r\n        if (userRepos && userStarredRepos) {\r\n            return {\r\n                userRepos,\r\n                userStarredRepos    \r\n            }\r\n        }\r\n    }\r\n\r\n    const userReposResp = await api.request(\r\n        { url: '/user/repos' }, \r\n        req, \r\n        res\r\n    );\r\n    const userStarredReposResp = await api.request(\r\n        { url: '/user/starred'},\r\n        req,\r\n        res\r\n    );\r\n    return {\r\n        userRepos: userReposResp.data || [],\r\n        userStarredRepos: userStarredReposResp.data || []\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}