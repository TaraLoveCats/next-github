{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u7F16\\u7A0B\\\\\\u9879\\u76EE\\\\next\\u9879\\u76EE\\\\next-github\\\\components\\\\Container.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { cloneElement } from 'react';\nvar style = {\n  width: '100%',\n  maxWidth: 1200,\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  paddingLeft: 20,\n  paddingRight: 20\n};\nexport default (function (_ref) {\n  var children = _ref.children,\n      _ref$comp = _ref.comp,\n      Comp = _ref$comp === void 0 ? \"div\" : _ref$comp;\n  return __jsx(Comp, {\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, children);\n}); // export default ({ children, renderer=<div /> }) => {\n//     //扩展renderer节点的props\n//     const newElement = cloneElement(renderer, {\n//         style: {...style, ...renderer.props.style},\n//         children\n//     })\n//     console.log(newElement)\n//     return newElement\n// }","map":{"version":3,"sources":["D:/编程/项目/next项目/next-github/components/Container.jsx"],"names":["cloneElement","style","width","maxWidth","marginLeft","marginRight","paddingLeft","paddingRight","children","comp","Comp"],"mappings":";;;AAAA,SAASA,YAAT,QAA6B,OAA7B;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,KAAK,EAAE,MADG;AAEVC,EAAAA,QAAQ,EAAE,IAFA;AAGVC,EAAAA,UAAU,EAAE,MAHF;AAIVC,EAAAA,WAAW,EAAE,MAJH;AAKVC,EAAAA,WAAW,EAAE,EALH;AAMVC,EAAAA,YAAY,EAAE;AANJ,CAAd;AASA,gBAAe,gBAAsC;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;AAAA,uBAAzBC,IAAyB;AAAA,MAAnBC,IAAmB,0BAAZ,KAAY;AACjD,SAAO,MAAC,IAAD;AAAM,IAAA,KAAK,EAAET,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBO,QAArB,CAAP;AACH,CAFD,E,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { cloneElement } from 'react'\r\n\r\nconst style = {\r\n    width: '100%',\r\n    maxWidth: 1200,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n}\r\n\r\nexport default ({ children, comp: Comp = \"div\" }) => {\r\n    return <Comp style={style}>{children}</Comp>\r\n}\r\n\r\n// export default ({ children, renderer=<div /> }) => {\r\n//     //扩展renderer节点的props\r\n//     const newElement = cloneElement(renderer, {\r\n//         style: {...style, ...renderer.props.style},\r\n//         children\r\n//     })\r\n//     console.log(newElement)\r\n//     return newElement\r\n// }"]},"metadata":{},"sourceType":"module"}