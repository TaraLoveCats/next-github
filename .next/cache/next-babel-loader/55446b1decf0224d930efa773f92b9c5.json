{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport withRepoBasic from '../../components/with-repo-basic';\nimport api from '../../lib/api';\nimport 'github-markdown-css';\nimport Markdown from '../../components/Markdown';\nimport LRU from 'lru-cache';\nconst cache = new LRU({\n  maxAge: 1000 * 60 * 60\n});\n\nfunction Detail({\n  readme\n}) {\n  return __jsx(Markdown, {\n    content: readme.content,\n    isBase64: true\n  });\n}\n\nDetail.getInitialProps = async ({\n  query,\n  req,\n  res\n}) => {\n  const {\n    owner,\n    name\n  } = query;\n  const fullName = `${owner}/${name}`;\n\n  if (cache.get(fullName)) {\n    return {\n      readme: cache.get(fullName)\n    };\n  }\n\n  const readmeResp = await api.request({\n    url: `/repos/${owner}/${name}/readme`\n  }, req, res);\n  cache.set(fullName, readmeResp.data);\n  return {\n    readme: readmeResp.data\n  };\n};\n\nexport default withRepoBasic(Detail, 'index');","map":{"version":3,"sources":["D:/编程/项目/next项目/next-github/pages/detail/index.js"],"names":["withRepoBasic","api","Markdown","LRU","cache","maxAge","Detail","readme","content","getInitialProps","query","req","res","owner","name","fullName","get","readmeResp","request","url","set","data"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,kCAA1B;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAO,qBAAP;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AAEA,MAAMC,KAAK,GAAG,IAAID,GAAJ,CAAQ;AAClBE,EAAAA,MAAM,EAAE,OAAO,EAAP,GAAY;AADF,CAAR,CAAd;;AAGA,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA4B;AACxB,SAAO,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEA,MAAM,CAACC,OAA1B;AAAmC,IAAA,QAAQ,EAAE;AAA7C,IAAP;AACH;;AAEDF,MAAM,CAACG,eAAP,GAAyB,OAAO;AAAEC,EAAAA,KAAF;AAASC,EAAAA,GAAT;AAAcC,EAAAA;AAAd,CAAP,KAA+B;AACpD,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAkBJ,KAAxB;AACA,QAAMK,QAAQ,GAAI,GAAEF,KAAM,IAAGC,IAAK,EAAlC;;AACA,MAAIV,KAAK,CAACY,GAAN,CAAUD,QAAV,CAAJ,EAAyB;AACrB,WAAO;AACHR,MAAAA,MAAM,EAAEH,KAAK,CAACY,GAAN,CAAUD,QAAV;AADL,KAAP;AAGH;;AAED,QAAME,UAAU,GAAG,MAAMhB,GAAG,CAACiB,OAAJ,CAAY;AACjCC,IAAAA,GAAG,EAAG,UAASN,KAAM,IAAGC,IAAK;AADI,GAAZ,EAEtBH,GAFsB,EAEjBC,GAFiB,CAAzB;AAGAR,EAAAA,KAAK,CAACgB,GAAN,CAAUL,QAAV,EAAoBE,UAAU,CAACI,IAA/B;AAEA,SAAO;AACHd,IAAAA,MAAM,EAAEU,UAAU,CAACI;AADhB,GAAP;AAGH,CAjBD;;AAmBA,eAAerB,aAAa,CAACM,MAAD,EAAS,OAAT,CAA5B","sourcesContent":["import withRepoBasic from '../../components/with-repo-basic'\r\nimport api from '../../lib/api'\r\nimport 'github-markdown-css'\r\nimport Markdown from '../../components/Markdown'\r\nimport LRU from 'lru-cache'\r\n\r\nconst cache = new LRU({\r\n    maxAge: 1000 * 60 * 60\r\n})\r\nfunction Detail({ readme }) {\r\n    return <Markdown content={readme.content} isBase64={true} />\r\n}\r\n\r\nDetail.getInitialProps = async ({ query, req, res }) => {\r\n    const { owner, name } = query;\r\n    const fullName = `${owner}/${name}`;\r\n    if (cache.get(fullName)) {\r\n        return {\r\n            readme: cache.get(fullName)\r\n        }\r\n    }\r\n\r\n    const readmeResp = await api.request({\r\n        url: `/repos/${owner}/${name}/readme`\r\n    }, req, res);\r\n    cache.set(fullName, readmeResp.data);\r\n\r\n    return {\r\n        readme: readmeResp.data,\r\n    }\r\n}\r\n\r\nexport default withRepoBasic(Detail, 'index')"]},"metadata":{},"sourceType":"module"}