{"ast":null,"code":"import _Row from \"antd/lib/row\";\nimport _Pagination from \"antd/lib/pagination\";\nimport _Statistic from \"antd/lib/statistic\";\nimport _Col from \"antd/lib/col\";\nimport _List from \"antd/lib/list\";\nimport _Icon from \"antd/lib/icon\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport Router, { useRouter } from 'next/router';\nimport { memo, isValidElement, useEffect } from 'react';\nimport Link from 'next/link';\nimport Repo from '../components/Repo';\nimport data from '../testData';\nimport { cacheArray } from '../lib/repo-basic-cache';\n\nconst api = require('../lib/api');\n\nconst LANGUAGES = ['JavaScript', 'TypeScript', 'HTML', 'CSS', 'Java', 'Rust', 'Python', 'C#', 'Swift', 'C++', 'C'];\nconst SORT_TYPES = [{\n  name: 'Best Match'\n}, {\n  name: 'Most Stars',\n  value: 'stars',\n  order: 'desc'\n}, {\n  name: 'Fewest Stars',\n  value: 'stars',\n  order: 'asc'\n}, {\n  name: 'Most Forks',\n  value: 'forks',\n  order: 'desc'\n}, {\n  name: 'Fewest Forks',\n  value: 'forks',\n  order: 'asc'\n}];\nconst per_page = 10;\nconst selectedItemStyle = {\n  borderLeft: '2px solid #e36209',\n  fontWeight: 100\n};\nconst initRepos = {\n  total_count: 0,\n  items: []\n};\nconst isServer = true;\n\nfunction noop() {}\n\nconst FilterLink = memo(({\n  name,\n  q,\n  lang,\n  sort,\n  order,\n  page\n}) => {\n  let queryString = `?q=${encodeURIComponent(q)}`;\n  lang && (queryString += `&lang=${encodeURIComponent(lang)}`);\n  sort && (queryString += `&sort=${encodeURIComponent(sort)}&order=${encodeURIComponent(order || 'desc')}`);\n  page && (queryString += `&page=${encodeURIComponent(page)}`);\n  queryString += `&per_page=${encodeURIComponent(per_page)}`;\n  return __jsx(Link, {\n    href: `/search${queryString}`\n  }, isValidElement(name) ? name : __jsx(\"a\", null, name));\n});\nexport default function Search({\n  repos = initRepos,\n  colors\n}) {\n  const router = useRouter();\n  const querys = Object.assign({}, router.query);\n  console.log(querys);\n  Object.keys(querys).forEach(key => {\n    querys[key] = decodeURIComponent(querys[key]);\n  });\n  console.log(querys);\n  const {\n    q,\n    sort,\n    order,\n    lang,\n    page\n  } = querys;\n  useEffect(() => {\n    if (!isServer) {\n      cacheArray(repos.items);\n    }\n  });\n\n  const resetLanguage = () => {\n    const queryObj = {};\n    q && (queryObj['q'] = q);\n    sort && (queryObj['sort'] = sort);\n    order && (queryObj['order'] = order);\n    per_page && (queryObj['per_page'] = per_page);\n    Router.push({\n      pathname: '/search',\n      query: queryObj\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-2076330023\" + \" \" + \"root\"\n  }, __jsx(_Row, {\n    gutter: 20\n  }, __jsx(_Col, {\n    span: 6\n  }, __jsx(_List, {\n    bordered: true,\n    header: __jsx(\"span\", {\n      className: \"jsx-2076330023\" + \" \" + \"list-header\"\n    }, \"Languages\"),\n    style: {\n      marginBottom: 20\n    },\n    dataSource: LANGUAGES,\n    renderItem: item => {\n      const selected = item === lang;\n      return __jsx(_List.Item, {\n        style: selected ? selectedItemStyle : null,\n        actions: selected ? [__jsx(_Icon, {\n          type: \"close-circle\",\n          theme: \"filled\",\n          onClick: resetLanguage\n        })] : null\n      }, selected ? __jsx(\"span\", {\n        className: \"jsx-2076330023\"\n      }, item) : __jsx(FilterLink, _extends({}, querys, {\n        lang: item,\n        name: item,\n        page: null\n      })));\n    }\n  }), __jsx(_List, {\n    bordered: true,\n    header: __jsx(\"span\", {\n      className: \"jsx-2076330023\" + \" \" + \"list-header\"\n    }, \"Sort By\"),\n    dataSource: SORT_TYPES,\n    renderItem: item => {\n      let selected = false;\n\n      if (item.name === 'Best Match' && !sort) {\n        selected = true;\n      } else if (item.value === sort && item.order === order) {\n        selected = true;\n      }\n\n      return __jsx(_List.Item, {\n        style: selected ? selectedItemStyle : null\n      }, selected ? __jsx(\"span\", {\n        className: \"jsx-2076330023\"\n      }, item.name) : __jsx(FilterLink, _extends({}, querys, {\n        name: item.name,\n        sort: item.value,\n        order: item.order,\n        page: null\n      })));\n    }\n  })), __jsx(_Col, {\n    span: 18\n  }, __jsx(\"h3\", {\n    className: \"jsx-2076330023\" + \" \" + \"repos-title\"\n  }, __jsx(_Statistic, {\n    value: repos.total_count\n  }), __jsx(\"span\", {\n    className: \"jsx-2076330023\"\n  }, \"\\xA0repository results\")), repos.items.map(repo => __jsx(Repo, {\n    repo: repo,\n    key: repo.id,\n    colors: colors\n  })), __jsx(\"div\", {\n    className: \"jsx-2076330023\" + \" \" + \"pagination\"\n  }, __jsx(_Pagination, {\n    pageSize: per_page,\n    current: +page || 1,\n    total: 1000 //github限制返回1000条\n    ,\n    onChange: noop,\n    itemRender: (page, type, ol) => {\n      const p = type === 'page' ? page : type === 'prev' ? page - 1 : page + 1;\n      const name = type === 'page' ? page : ol;\n      return __jsx(FilterLink, _extends({}, querys, {\n        page: p,\n        name: name\n      }));\n    }\n  })))), __jsx(_JSXStyle, {\n    id: \"2076330023\"\n  }, \".root.jsx-2076330023{padding:30px 0;}.repos-title.jsx-2076330023{border-bottom:1px solid #ddd;font-size:24px;line-height:1.5;padding-bottom:20px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;}.list-header.jsx-2076330023{font-weight:700;font-size:16px;}.list-item.jsx-2076330023{position:relative;}.close-circle.jsx-2076330023{position:absolute;right:20px;top:20px;}.pagination.jsx-2076330023{padding:20px;text-align:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=D:\\\\\\\\\\u7F16\\u7A0B\\\\\\\\\\u9879\\u76EE\\\\\\\\next\\u9879\\u76EE\\\\\\\\next-github\\\\\\\\pages\\\\\\\\search.js */\"));\n}\n\nSearch.getInitialProps = async ({\n  query,\n  asPath,\n  req,\n  res\n}) => {\n  console.log('Search getInitialProps called');\n  console.log(query);\n  const {\n    q,\n    lang,\n    sort,\n    order,\n    page,\n    per_page\n  } = query;\n\n  if (!query.q) {\n    return {\n      repos: initRepos\n    };\n  } // console.log(asPath)\n  // const queryArr = asPath.split('?')[1].split('&');\n  // console.log(queryArr)\n  // const queryObj = queryArr.reduce((obj, entry) => {\n  //     const entryArr = entry.split('=');\n  //     obj[entryArr[0]] = encodeURIComponent(entryArr[1]); //C++ -> C%2B%2B\n  //     return obj; \n  // }, {});\n  // console.log(queryObj)\n  // const { q, lang, sort, order, page, per_page} = queryObj;\n  // ?q=react+language:javascript&sort=stars&order=desc&page=2\n\n\n  let queryString = `?q=${q}`;\n  lang && (queryString += `+language:${lang}`);\n  sort && (queryString += `&sort=${sort}&order=${order || 'desc'}`);\n  page && (queryString += `&page=${page}`);\n  queryString += `&per_page=${per_page}`;\n  const result = await api.request({\n    url: `/search/repositories${queryString}`\n  }, req, res);\n  return {\n    repos: result.data || data.react_repos\n  };\n};","map":{"version":3,"sources":["D:/编程/项目/next项目/next-github/pages/search.js"],"names":["Router","useRouter","memo","isValidElement","useEffect","Link","Repo","data","cacheArray","api","require","LANGUAGES","SORT_TYPES","name","value","order","per_page","selectedItemStyle","borderLeft","fontWeight","initRepos","total_count","items","isServer","noop","FilterLink","q","lang","sort","page","queryString","encodeURIComponent","Search","repos","colors","router","querys","query","console","log","Object","keys","forEach","key","decodeURIComponent","resetLanguage","queryObj","push","pathname","marginBottom","item","selected","map","repo","id","type","ol","p","getInitialProps","asPath","req","res","result","request","url","react_repos"],"mappings":"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","sourcesContent":["import Router, { useRouter } from 'next/router'\r\nimport { memo, isValidElement, useEffect } from 'react'\r\nimport { Row, Col, List, Pagination, Statistic, Icon } from 'antd'\r\nimport Link from 'next/link'\r\nimport Repo from '../components/Repo'\r\nimport data from '../testData'\r\nimport { cacheArray } from '../lib/repo-basic-cache'\r\nconst api = require('../lib/api')\r\n\r\nconst LANGUAGES = ['JavaScript', 'TypeScript', 'HTML', 'CSS', 'Java', 'Rust', 'Python', 'C#', 'Swift', 'C++', 'C'];\r\nconst SORT_TYPES = [\r\n    {\r\n        name: 'Best Match',\r\n    },  \r\n    {\r\n        name: 'Most Stars',\r\n        value: 'stars',\r\n        order: 'desc',\r\n    },\r\n    {\r\n        name: 'Fewest Stars',\r\n        value: 'stars',\r\n        order: 'asc',\r\n    },\r\n    {\r\n        name: 'Most Forks',\r\n        value: 'forks',\r\n        order: 'desc',\r\n    },\r\n    {\r\n        name: 'Fewest Forks',\r\n        value: 'forks',\r\n        order: 'asc',\r\n    },\r\n];\r\nconst per_page = 10;\r\nconst selectedItemStyle = {\r\n    borderLeft: '2px solid #e36209',\r\n    fontWeight: 100,\r\n}\r\nconst initRepos = {\r\n    total_count: 0,\r\n    items: []\r\n};\r\nconst isServer = typeof window === 'undefined';\r\nfunction noop() { }\r\n\r\nconst FilterLink = memo(({ name, q, lang, sort, order, page }) => {\r\n    let queryString = `?q=${encodeURIComponent(q)}`;\r\n    lang && (queryString += `&lang=${encodeURIComponent(lang)}`);\r\n    sort && (queryString += `&sort=${encodeURIComponent(sort)}&order=${encodeURIComponent(order || 'desc')}`);\r\n    page && (queryString += `&page=${encodeURIComponent(page)}`);\r\n    queryString += `&per_page=${encodeURIComponent(per_page)}`;\r\n    \r\n    return (\r\n        <Link href={`/search${queryString}`}> \r\n            {isValidElement(name) ? name : <a>{name}</a>}\r\n        </Link>\r\n    )\r\n});\r\n\r\nexport default function Search({ repos = initRepos, colors }) {\r\n    const router = useRouter();\r\n    const { ...querys } = router.query;\r\n    console.log(querys)\r\n    Object.keys(querys).forEach(key => {\r\n        querys[key] = decodeURIComponent(querys[key]);\r\n    })\r\n    console.log(querys)\r\n    const { q, sort, order, lang, page } = querys;\r\n\r\n    useEffect(() => {\r\n        if (!isServer) {\r\n            cacheArray(repos.items)\r\n        }\r\n    })\r\n\r\n    const resetLanguage = () => {\r\n        const queryObj = {};\r\n        q && (queryObj['q'] = q);\r\n        sort && (queryObj['sort'] = sort);\r\n        order && (queryObj['order'] = order);\r\n        per_page && (queryObj['per_page'] = per_page);\r\n\r\n        Router.push({\r\n            pathname: '/search',\r\n            query: queryObj\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"root\">\r\n            <Row gutter={20}>\r\n                <Col span={6}>\r\n                    <List\r\n                        bordered\r\n                        header={<span className=\"list-header\">Languages</span>}\r\n                        style={{ marginBottom: 20 }}\r\n                        dataSource={LANGUAGES}\r\n                        renderItem={item => {\r\n                            const selected = item === lang;\r\n                            return (                                \r\n                                <List.Item \r\n                                    style={selected ? selectedItemStyle : null}\r\n                                    actions={selected ? \r\n                                        [<Icon \r\n                                            type=\"close-circle\" \r\n                                            theme=\"filled\" \r\n                                            onClick={resetLanguage}\r\n                                        />] \r\n                                        : null\r\n                                    }\r\n                                >\r\n                                    {selected ?\r\n                                        <span>{item}</span>\r\n                                        :\r\n                                        <FilterLink\r\n                                            {...querys}\r\n                                            lang={item}\r\n                                            name={item}\r\n                                            page={null}\r\n                                        />\r\n                                    }\r\n                                </List.Item>\r\n                            )\r\n                        }}\r\n                    />\r\n\r\n                    <List\r\n                        bordered\r\n                        header={<span className=\"list-header\">Sort By</span>}\r\n                        dataSource={SORT_TYPES}\r\n                        renderItem={item => {\r\n                            let selected = false;\r\n                            if (item.name === 'Best Match' && !sort) {\r\n                                selected = true;\r\n                            } else if (item.value === sort && item.order === order) {\r\n                                selected = true;\r\n                            }\r\n                            return (\r\n                                <List.Item style={selected ? selectedItemStyle : null}>\r\n                                    {selected ? <span>{item.name}</span> :\r\n                                        <FilterLink\r\n                                            {...querys}\r\n                                            name={item.name}\r\n                                            sort={item.value}\r\n                                            order={item.order}\r\n                                            page={null}\r\n                                        />\r\n                                    }\r\n                                </List.Item>\r\n                            )\r\n                        }}\r\n                    />\r\n                </Col>\r\n                <Col span={18}>\r\n                    <h3 className=\"repos-title\">\r\n                        <Statistic value={repos.total_count} />\r\n                        <span>&nbsp;repository results</span>\r\n                    </h3>\r\n                    {repos.items.map(repo => (\r\n                        <Repo repo={repo} key={repo.id} colors={colors} />\r\n                    ))}\r\n                    <div className=\"pagination\">\r\n                        <Pagination\r\n                            pageSize={per_page}\r\n                            current={+page || 1}\r\n                            total={1000} //github限制返回1000条\r\n                            onChange={noop}\r\n                            itemRender={(page, type, ol) => {\r\n                                const p = type === 'page' ? page : type === 'prev' ? page - 1 : page + 1;\r\n                                const name = type === 'page' ? page : ol;\r\n                                return (\r\n                                    <FilterLink\r\n                                        {...querys}\r\n                                        page={p}\r\n                                        name={name}\r\n                                    />\r\n                                )\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <style jsx>{`\r\n                .root {\r\n                    padding: 30px 0;\r\n                }\r\n                .repos-title {\r\n                    border-bottom: 1px solid #ddd;\r\n                    font-size: 24px;\r\n                    line-height: 1.5;\r\n                    padding-bottom: 20px;\r\n                    display: flex;\r\n                    justify-content: flex-start;\r\n                }\r\n                .list-header {\r\n                    font-weight: 700;\r\n                    font-size: 16px;\r\n                }\r\n                .list-item {\r\n                    position: relative;\r\n                }\r\n                .close-circle {\r\n                    position: absolute;\r\n                    right: 20px;\r\n                    top: 20px;\r\n                }\r\n                .pagination {\r\n                    padding: 20px;\r\n                    text-align: center;\r\n                }\r\n            `}</style>\r\n        </div>\r\n    )\r\n}\r\n\r\nSearch.getInitialProps = async ({ query, asPath, req, res }) => {\r\n    console.log('Search getInitialProps called');\r\n    console.log(query)\r\n    const { q, lang, sort, order, page, per_page} = query;\r\n\r\n    if (!query.q) {\r\n        return {\r\n            repos: initRepos\r\n        }\r\n    }\r\n\r\n    // console.log(asPath)\r\n    \r\n    // const queryArr = asPath.split('?')[1].split('&');\r\n    // console.log(queryArr)\r\n    // const queryObj = queryArr.reduce((obj, entry) => {\r\n    //     const entryArr = entry.split('=');\r\n    //     obj[entryArr[0]] = encodeURIComponent(entryArr[1]); //C++ -> C%2B%2B\r\n    //     return obj; \r\n    // }, {});\r\n    // console.log(queryObj)\r\n    // const { q, lang, sort, order, page, per_page} = queryObj;\r\n    // ?q=react+language:javascript&sort=stars&order=desc&page=2\r\n    let queryString = `?q=${q}`;\r\n    lang && (queryString += `+language:${lang}`);\r\n    sort && (queryString += `&sort=${sort}&order=${order || 'desc'}`);\r\n    page && (queryString += `&page=${page}`);\r\n    queryString += `&per_page=${per_page}`;\r\n    \r\n    const result = await api.request({ \r\n        url: `/search/repositories${queryString}` \r\n    }, req, res);\r\n\r\n    return {\r\n        repos: result.data || data.react_repos\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}