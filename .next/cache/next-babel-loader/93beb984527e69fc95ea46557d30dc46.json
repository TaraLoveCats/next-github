{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Spin from \"antd/lib/spin\";\nimport _Avatar from \"antd/lib/avatar\";\nimport _Icon from \"antd/lib/icon\";\nimport _Button from \"antd/lib/button\";\nimport _Select from \"antd/lib/select\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport withRepoBasic from '../../components/with-repo-basic';\nimport api from '../../lib/api';\nimport { useState, useCallback, useEffect } from 'react';\nimport Markdown from '../../components/Markdown';\nimport moment from 'moment';\nimport SearchUser from '../../components/SearchUser';\nimport LRU from 'lru-cache';\nvar Option = _Select.Option;\nvar cache = new LRU({\n  maxAge: 1000 * 60 * 60 * 24 //24h\n\n});\nvar isServer = false;\n\nfunction makeQueryStr(creator, state, labels) {\n  var creatorStr = creator ? \"creator=\".concat(creator) : '';\n  var stateStr = state ? \"state=\".concat(state) : '';\n  var labelStr = '';\n\n  if (labels && labels.length > 0) {\n    labelStr = \"labels=\".concat(labels.join(','));\n  }\n\n  var arr = [];\n  creatorStr && arr.push(creatorStr);\n  stateStr && arr.push(stateStr);\n  labelStr && arr.push(labelStr);\n  return \"?\".concat(arr.join('&'));\n}\n\nfunction IssueDetail(_ref) {\n  var issue = _ref.issue;\n  return __jsx(\"div\", {\n    className: \"jsx-4022606703\" + \" \" + \"root\"\n  }, __jsx(Markdown, {\n    content: issue.body\n  }), __jsx(\"div\", {\n    className: \"jsx-4022606703\" + \" \" + \"actions\"\n  }, __jsx(_Button, {\n    href: issue.html_url,\n    target: \"_blank\"\n  }, \"open discussion page\")), __jsx(_JSXStyle, {\n    id: \"4022606703\"\n  }, \".root.jsx-4022606703{background:#fbfbea;padding:20px;}.actions.jsx-4022606703{text-align:right;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=D:\\\\\\\\\\u7F16\\u7A0B\\\\\\\\\\u9879\\u76EE\\\\\\\\next\\u9879\\u76EE\\\\\\\\next-github\\\\\\\\pages\\\\\\\\detail\\\\\\\\issues.js */\"));\n}\n\nfunction Label(_ref2) {\n  var label = _ref2.label;\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    style: {\n      background: \"#\".concat(label.color)\n    },\n    className: \"jsx-408108560\" + \" \" + \"label\"\n  }, label.name), __jsx(_JSXStyle, {\n    id: \"408108560\"\n  }, \".label.jsx-408108560{display:inline-block;line-height:15px;margin-left:10px;padding:0 5px;border-radius:2px;font-size:12px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=D:\\\\\\\\\\u7F16\\u7A0B\\\\\\\\\\u9879\\u76EE\\\\\\\\next\\u9879\\u76EE\\\\\\\\next-github\\\\\\\\pages\\\\\\\\detail\\\\\\\\issues.js */\"));\n}\n\nfunction IssueItem(_ref3) {\n  var issue = _ref3.issue;\n\n  var _useState = useState(false),\n      showDetail = _useState[0],\n      setShowDetail = _useState[1];\n\n  var toggleShowDetail = useCallback(function () {\n    setShowDetail(function (pre) {\n      return !pre;\n    });\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-2625186061\" + \" \" + \"issue\"\n  }, issue.state === 'open' ? __jsx(_Icon, {\n    type: \"exclamation-circle\",\n    style: {\n      color: '##28a745'\n    }\n  }) : __jsx(_Icon, {\n    type: \"check-circle\",\n    style: {\n      color: '#cb2431'\n    }\n  }), __jsx(\"div\", {\n    className: \"jsx-2625186061\" + \" \" + \"avatar\"\n  }, __jsx(_Avatar, {\n    src: issue.user.avatar_url,\n    shape: \"square\",\n    size: 50\n  })), __jsx(\"div\", {\n    className: \"jsx-2625186061\" + \" \" + \"main-info\"\n  }, __jsx(\"h6\", {\n    className: \"jsx-2625186061\"\n  }, __jsx(\"span\", {\n    className: \"jsx-2625186061\"\n  }, issue.title), issue.labels.map(function (label) {\n    return __jsx(Label, {\n      label: label,\n      key: label.id\n    });\n  })), __jsx(\"p\", {\n    className: \"jsx-2625186061\" + \" \" + \"sub-info\"\n  }, __jsx(\"span\", {\n    className: \"jsx-2625186061\"\n  }, \"#\", issue.number, \" opened on \", moment(issue.created_at).format(\"LL\"), \" by \", issue.user.login)), __jsx(_Button, {\n    type: \"primary\",\n    size: \"small\",\n    style: {\n      position: 'absolute',\n      right: 10,\n      top: 10\n    },\n    onClick: toggleShowDetail\n  }, showDetail ? 'hide' : 'detail')), __jsx(_JSXStyle, {\n    id: \"2625186061\"\n  }, \".issue.jsx-2625186061{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;position:relative;padding:10px;}.issue.jsx-2625186061:hover{background:#fafafa;}.issue.jsx-2625186061+.issue.jsx-2625186061{border-top:1px solid #ddd;}.main-info.jsx-2625186061>h6.jsx-2625186061{max-width:600px;font-size:16px;padding-right:40px;}.avatar.jsx-2625186061{margin-right:20px;}.sub-info.jsx-2625186061{margin-bottom:0;font-size:12px;}.sub-info.jsx-2625186061>span.jsx-2625186061+span.jsx-2625186061{display:inline-block;margin-left:20px;font-size:12px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=D:\\\\\\\\\\u7F16\\u7A0B\\\\\\\\\\u9879\\u76EE\\\\\\\\next\\u9879\\u76EE\\\\\\\\next-github\\\\\\\\pages\\\\\\\\detail\\\\\\\\issues.js */\")), showDetail ? __jsx(IssueDetail, {\n    issue: issue\n  }) : null);\n}\n\nfunction Issues(_ref4) {\n  var initIssues = _ref4.initIssues,\n      labels = _ref4.labels,\n      owner = _ref4.owner,\n      name = _ref4.name;\n\n  var _useState2 = useState(),\n      creator = _useState2[0],\n      setCreator = _useState2[1];\n\n  var _useState3 = useState(),\n      state = _useState3[0],\n      setState = _useState3[1];\n\n  var _useState4 = useState(),\n      label = _useState4[0],\n      setLabel = _useState4[1];\n\n  var _useState5 = useState(initIssues),\n      issues = _useState5[0],\n      setIssues = _useState5[1];\n\n  var _useState6 = useState(false),\n      fetching = _useState6[0],\n      setFetching = _useState6[1];\n\n  useEffect(function () {\n    if (!isServer) {\n      cache.set(\"\".concat(owner, \"/\").concat(name), labels);\n    }\n  }, [owner, name, labels]);\n  var handleCreatorChange = useCallback(function (value) {\n    setCreator(value);\n  }, []);\n  var handleStateChange = useCallback(function (value) {\n    setState(value);\n  }, []);\n  var handleLabelChange = useCallback(function (value) {\n    setLabel(value);\n  }, []);\n  var handleSearch = useCallback(function () {\n    setFetching(true);\n    api.request({\n      url: \"/repos/\".concat(owner, \"/\").concat(name, \"/issues\").concat(makeQueryStr(creator, state, label))\n    }).then(function (resp) {\n      setIssues(resp.data);\n      setFetching(false);\n    });\n  }, [owner, name, creator, state, label]);\n  return __jsx(\"div\", {\n    className: \"jsx-3822302857\" + \" \" + \"root\"\n  }, __jsx(\"div\", {\n    className: \"jsx-3822302857\" + \" \" + \"search\"\n  }, __jsx(SearchUser, {\n    value: creator,\n    onChange: handleCreatorChange\n  }), __jsx(_Select, {\n    placeholder: \"state\",\n    value: state,\n    onChange: handleStateChange,\n    style: {\n      width: 150,\n      marginLeft: 10\n    }\n  }, __jsx(Option, {\n    value: \"all\"\n  }, \"all\"), __jsx(Option, {\n    value: \"open\"\n  }, \"open\"), __jsx(Option, {\n    value: \"closed\"\n  }, \"closed\")), __jsx(_Select, {\n    mode: \"multiple\",\n    placeholder: \"label\",\n    value: label,\n    onChange: handleLabelChange,\n    style: {\n      width: 150,\n      marginLeft: 10,\n      flexGrow: 1\n    }\n  }, labels.map(function (label) {\n    return __jsx(Option, {\n      value: label.name,\n      key: label.id\n    }, label.name);\n  })), __jsx(_Button, {\n    type: \"primary\",\n    onClick: handleSearch,\n    disabled: fetching,\n    style: {\n      marginLeft: 10\n    }\n  }, \"search\")), __jsx(\"div\", {\n    className: \"jsx-3822302857\" + \" \" + \"issues\"\n  }, __jsx(_Spin, {\n    spinning: fetching\n  }, issues.map(function (issue) {\n    return __jsx(IssueItem, {\n      key: issue.id,\n      issue: issue\n    });\n  }))), __jsx(_JSXStyle, {\n    id: \"3822302857\"\n  }, \".search.jsx-3822302857{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.issues.jsx-3822302857{border:1px solid #eee;border-radius:5px;margin:20px 0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=D:\\\\\\\\\\u7F16\\u7A0B\\\\\\\\\\u9879\\u76EE\\\\\\\\next\\u9879\\u76EE\\\\\\\\next-github\\\\\\\\pages\\\\\\\\detail\\\\\\\\issues.js */\"));\n}\n\nIssues.getInitialProps = function _callee(_ref5) {\n  var query, req, res, owner, name, issuesResp, fullName, labels, labelsResp;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref5.query, req = _ref5.req, res = _ref5.res;\n          owner = query.owner, name = query.name;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(api.request({\n            url: \"/repos/\".concat(owner, \"/\").concat(name, \"/issues\")\n          }, req, res));\n\n        case 4:\n          issuesResp = _context.sent;\n          fullName = \"\".concat(owner, \"/\").concat(name);\n          labels = [];\n\n          if (!cache.get(fullName)) {\n            _context.next = 11;\n            break;\n          }\n\n          labels = cache.get(fullName);\n          _context.next = 15;\n          break;\n\n        case 11:\n          _context.next = 13;\n          return _regeneratorRuntime.awrap(api.request({\n            url: \"/repos/\".concat(owner, \"/\").concat(name, \"/labels\")\n          }, req, res));\n\n        case 13:\n          labelsResp = _context.sent;\n          labels = labelsResp.data;\n\n        case 15:\n          return _context.abrupt(\"return\", {\n            initIssues: issuesResp.data,\n            labels: labels,\n            owner: owner,\n            name: name\n          });\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withRepoBasic(Issues);","map":{"version":3,"sources":["D:/编程/项目/next项目/next-github/pages/detail/issues.js"],"names":["withRepoBasic","api","useState","useCallback","useEffect","Markdown","moment","SearchUser","LRU","Option","cache","maxAge","isServer","makeQueryStr","creator","state","labels","creatorStr","stateStr","labelStr","length","join","arr","push","IssueDetail","issue","body","html_url","Label","label","background","color","name","IssueItem","showDetail","setShowDetail","toggleShowDetail","pre","user","avatar_url","title","map","id","number","created_at","format","login","position","right","top","Issues","initIssues","owner","setCreator","setState","setLabel","issues","setIssues","fetching","setFetching","set","handleCreatorChange","value","handleStateChange","handleLabelChange","handleSearch","request","url","then","resp","data","width","marginLeft","flexGrow","getInitialProps","query","req","res","issuesResp","fullName","get","labelsResp"],"mappings":"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","sourcesContent":["import withRepoBasic from '../../components/with-repo-basic'\r\nimport api from '../../lib/api'\r\nimport { Avatar, Button, Select, Spin, Icon } from 'antd'\r\nimport { useState, useCallback, useEffect } from 'react'\r\nimport Markdown from '../../components/Markdown'\r\nimport moment from 'moment'\r\nimport SearchUser from '../../components/SearchUser'\r\nimport LRU from 'lru-cache'\r\n\r\nconst { Option } = Select;\r\nconst cache = new LRU({\r\n    maxAge: 1000 * 60 * 60 * 24 //24h\r\n});\r\nconst isServer = typeof window === 'undefined'\r\n\r\nfunction makeQueryStr(creator, state, labels) {\r\n    let creatorStr = creator ? `creator=${creator}` : '';\r\n    let stateStr = state ? `state=${state}` : '';\r\n    let labelStr = '';\r\n    if (labels && labels.length > 0) {\r\n        labelStr = `labels=${labels.join(',')}`\r\n    }\r\n\r\n    const arr = [];\r\n\r\n    creatorStr && arr.push(creatorStr)\r\n    stateStr && arr.push(stateStr)\r\n    labelStr && arr.push(labelStr)\r\n\r\n    return `?${arr.join('&')}`\r\n}\r\n\r\nfunction IssueDetail({ issue }) {\r\n    return (\r\n        <div className=\"root\">\r\n            <Markdown content={issue.body} />\r\n            <div className=\"actions\">\r\n                <Button href={issue.html_url} target=\"_blank\">\r\n                    open discussion page\r\n                </Button>\r\n            </div>\r\n            <style jsx>{`\r\n                .root {\r\n                    background: #fbfbea;\r\n                    padding: 20px;\r\n                }\r\n                .actions {\r\n                    text-align: right;\r\n                }\r\n            `}</style>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction Label({ label }) {\r\n    return (\r\n        <>\r\n            <span className=\"label\" style={{ background: `#${label.color}` }}>\r\n                {label.name}\r\n            </span>\r\n            <style jsx>{`\r\n                .label {\r\n                    display: inline-block;\r\n                    line-height: 15px;\r\n                    margin-left: 10px;\r\n                    padding: 0 5px;\r\n                    border-radius: 2px;\r\n                    font-size: 12px;\r\n                }\r\n            `}</style>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction IssueItem({ issue }) {\r\n    const [showDetail, setShowDetail] = useState(false);\r\n\r\n    const toggleShowDetail = useCallback(() => {\r\n        setShowDetail(pre => !pre)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"issue\">\r\n                {issue.state === 'open' ? \r\n                    <Icon type=\"exclamation-circle\" style={{ color: '##28a745'}}/> :\r\n                    <Icon type=\"check-circle\" style={{color: '#cb2431'}}/>\r\n                }\r\n                <div className=\"avatar\">\r\n                    <Avatar\r\n                        src={issue.user.avatar_url}\r\n                        shape=\"square\"\r\n                        size={50}\r\n                    />\r\n                </div>\r\n                <div className=\"main-info\">\r\n                    <h6>\r\n                        <span>{issue.title}</span>\r\n                        {issue.labels.map(label => (\r\n                            <Label label={label} key={label.id} />\r\n                        ))}\r\n                    </h6>\r\n                    <p className=\"sub-info\">\r\n                        <span>\r\n                           #{issue.number} opened on {moment(issue.created_at).format(\"LL\")} by {issue.user.login}\r\n                        </span>\r\n                    </p>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        size=\"small\"\r\n                        style={{ position: 'absolute', right: 10, top: 10 }}\r\n                        onClick={toggleShowDetail}\r\n                    >\r\n                        {showDetail ? 'hide' : 'detail'}\r\n                    </Button>\r\n                </div>\r\n                <style jsx>{`\r\n                .issue {\r\n                    display: flex;\r\n                    position: relative;\r\n                    padding: 10px;\r\n                }    \r\n                .issue:hover {\r\n                    background: #fafafa;\r\n                }\r\n                .issue + .issue {\r\n                    border-top: 1px solid #ddd;\r\n                }\r\n                .main-info > h6 {\r\n                    max-width: 600px;\r\n                    font-size: 16px;\r\n                    padding-right: 40px;\r\n                }\r\n                .avatar {\r\n                    margin-right: 20px;\r\n                }\r\n                .sub-info {\r\n                    margin-bottom: 0;\r\n                    font-size: 12px;\r\n                }\r\n                .sub-info > span + span {\r\n                    display: inline-block;\r\n                    margin-left: 20px;\r\n                    font-size: 12px;\r\n                }\r\n            `}</style>\r\n            </div>\r\n            {showDetail ? <IssueDetail issue={issue} /> : null}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nfunction Issues({ initIssues, labels, owner, name }) {\r\n    const [creator, setCreator] = useState();\r\n    const [state, setState] = useState();\r\n    const [label, setLabel] = useState();\r\n    const [issues, setIssues] = useState(initIssues);\r\n    const [fetching, setFetching] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!isServer) {\r\n            cache.set(`${owner}/${name}`, labels)\r\n        }\r\n    }, [owner, name, labels])\r\n\r\n    const handleCreatorChange = useCallback((value) => {\r\n        setCreator(value)\r\n    }, [])\r\n    const handleStateChange = useCallback((value) => {\r\n        setState(value)\r\n    }, [])\r\n    const handleLabelChange = useCallback((value) => {\r\n        setLabel(value)\r\n    }, [])\r\n    const handleSearch = useCallback(() => {\r\n        setFetching(true);\r\n        api.request({\r\n            url: `/repos/${owner}/${name}/issues${makeQueryStr(creator, state, label)}`\r\n        })\r\n        .then(resp => {\r\n            setIssues(resp.data);\r\n            setFetching(false);\r\n        })\r\n    }, [owner, name, creator, state, label])\r\n\r\n    return (\r\n        <div className=\"root\">\r\n            <div className=\"search\">\r\n                <SearchUser\r\n                    value={creator}\r\n                    onChange={handleCreatorChange}\r\n                />\r\n                <Select\r\n                    placeholder=\"state\"\r\n                    value={state}\r\n                    onChange={handleStateChange}\r\n                    style={{ width: 150, marginLeft: 10 }}\r\n                >\r\n                    <Option value=\"all\">all</Option>\r\n                    <Option value=\"open\">open</Option>\r\n                    <Option value=\"closed\">closed</Option>\r\n                </Select>\r\n                <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"label\"\r\n                    value={label}\r\n                    onChange={handleLabelChange}\r\n                    style={{ width: 150, marginLeft: 10, flexGrow: 1 }}\r\n                >\r\n                    {\r\n                        labels.map(label => (\r\n                            <Option value={label.name} key={label.id}>{label.name}</Option>\r\n                        ))\r\n                    }\r\n                </Select>\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={handleSearch}\r\n                    disabled={fetching}\r\n                    style={{ marginLeft: 10 }}\r\n                >\r\n                    search\r\n                </Button>\r\n            </div>\r\n            <div className=\"issues\">\r\n                <Spin spinning={fetching}>\r\n                    {issues.map(issue => <IssueItem key={issue.id} issue={issue} />)}\r\n                </Spin>\r\n            </div>\r\n            <style jsx>{`\r\n                .search {\r\n                    display: flex;\r\n                }\r\n                .issues {\r\n                    border: 1px solid #eee;\r\n                    border-radius: 5px;\r\n                    margin: 20px 0;\r\n                }    \r\n            `}</style>\r\n        </div>\r\n    )\r\n}\r\n\r\nIssues.getInitialProps = async ({ query, req, res }) => {\r\n    const { owner, name } = query;\r\n\r\n    const issuesResp = await api.request({\r\n        url: `/repos/${owner}/${name}/issues`\r\n    }, req, res);\r\n\r\n    const fullName = `${owner}/${name}`;\r\n    let labels = [];\r\n    if (cache.get(fullName)) {\r\n        labels = cache.get(fullName);\r\n    } else {\r\n        const labelsResp = await api.request({\r\n            url: `/repos/${owner}/${name}/labels`\r\n        }, req, res);\r\n        labels = labelsResp.data;\r\n    }\r\n\r\n    return {\r\n        initIssues: issuesResp.data,\r\n        labels,\r\n        owner,\r\n        name,\r\n    }\r\n}\r\n\r\nexport default withRepoBasic(Issues)"]},"metadata":{},"sourceType":"module"}