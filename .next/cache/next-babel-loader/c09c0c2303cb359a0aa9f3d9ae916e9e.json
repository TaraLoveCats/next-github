{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Result from \"antd/lib/result\";\nimport _Button from \"antd/lib/button\";\nimport _Icon from \"antd/lib/icon\";\nimport _Tabs from \"antd/lib/tabs\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport Repo from '../components/Repo';\nimport config from '../config';\nimport LRU from 'lru-cache';\nimport Router, { useRouter } from 'next/router';\nimport { cacheArray } from '../lib/repo-basic-cache';\nvar OAUTH_URL = config.OAUTH_URL;\nvar TabPane = _Tabs.TabPane;\nvar cache = new LRU({\n  maxAge: 1000 * 60 * 30 //30min\n\n});\nvar isServer = false;\nexport default function Index(_ref) {\n  var _ref$userRepos = _ref.userRepos,\n      userRepos = _ref$userRepos === void 0 ? [] : _ref$userRepos,\n      _ref$userStarredRepos = _ref.userStarredRepos,\n      userStarredRepos = _ref$userStarredRepos === void 0 ? [] : _ref$userStarredRepos;\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  var router = useRouter();\n  var activeTabKey = router.query.key || 'repos';\n\n  var handleTabChange = function handleTabChange(activeTabKey) {\n    Router.push(\"/?key=\".concat(activeTabKey));\n  }; //在Index页面不频繁请求repo信息\n\n\n  useEffect(function () {\n    if (!isServer) {\n      userRepos && cache.set('userRepos', userRepos);\n      userStarredRepos && cache.set('userStarredRepos', userStarredRepos);\n    }\n  }, [userRepos, userStarredRepos]); //跳转到/search页面不用重新请求repo信息\n\n  useEffect(function () {\n    if (!isServer) {\n      cacheArray(userRepos);\n      cacheArray(userStarredRepos);\n    }\n  });\n\n  var BeforeLogin = function BeforeLogin() {\n    return __jsx(React.Fragment, null, __jsx(_Result, {\n      icon: __jsx(_Icon, {\n        type: \"github\"\n      }),\n      title: \"Click the button to login into your Github account \",\n      extra: __jsx(_Button, {\n        type: \"primary\"\n      }, \"Log in\")\n    }));\n  };\n\n  if (!user || !user.id) {\n    return __jsx(BeforeLogin, null);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-1042228906\" + \" \" + \"root\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1042228906\" + \" \" + \"user-info\"\n  }, __jsx(\"img\", {\n    src: user.avatar_url,\n    alt: \"user avatar\",\n    className: \"jsx-1042228906\" + \" \" + \"user-avatar\"\n  }), __jsx(\"p\", {\n    className: \"jsx-1042228906\" + \" \" + \"user-name\"\n  }, user.login)), __jsx(_Tabs, {\n    activeKey: activeTabKey,\n    onChange: handleTabChange,\n    animated: false,\n    size: \"large\"\n  }, __jsx(TabPane, {\n    key: \"repos\",\n    tab: \"Repositories\"\n  }, userRepos.map(function (repo) {\n    return __jsx(Repo, {\n      key: repo.id,\n      repo: repo\n    });\n  })), __jsx(TabPane, {\n    key: \"stars\",\n    tab: \"Stars\"\n  }, userStarredRepos.map(function (repo) {\n    return __jsx(Repo, {\n      key: repo.id,\n      repo: repo\n    });\n  })))), __jsx(_JSXStyle, {\n    id: \"1042228906\"\n  }, \".root.jsx-1042228906{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;padding:20px 0;}.user-info.jsx-1042228906{width:200px;margin-right:40px;}.user-name.jsx-1042228906{font-size:20px;font-weight:300;margin-top:10px;}.user-avatar.jsx-1042228906{width:100%;border-radius:4px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFznvJbnqItcXOmhueebrlxcbmV4dOmhueebrlxcbmV4dC1naXRodWJcXHBhZ2VzXFxpbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0RWUsQUFHbUIsQUFLRCxBQUlHLEFBS0osV0FDTyxDQVRBLEdBSUYsY0FNakIsQ0FUQSxDQUlpQixnQkFDakIsMkJBWHdCLDZHQUNSLGVBQ2hCIiwiZmlsZSI6IkQ6XFznvJbnqItcXOmhueebrlxcbmV4dOmhueebrlxcbmV4dC1naXRodWJcXHBhZ2VzXFxpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVNlbGVjdG9yIH0gZnJvbSAncmVhY3QtcmVkdXgnXHJcbmltcG9ydCB7IEJ1dHRvbiwgVGFicywgUmVzdWx0LCBJY29uIH0gZnJvbSAnYW50ZCdcclxuaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnXHJcbmltcG9ydCBSZXBvIGZyb20gJy4uL2NvbXBvbmVudHMvUmVwbydcclxuaW1wb3J0IGNvbmZpZyBmcm9tICcuLi9jb25maWcnXHJcbmltcG9ydCBMUlUgZnJvbSAnbHJ1LWNhY2hlJ1xyXG5pbXBvcnQgIFJvdXRlciwgeyB1c2VSb3V0ZXIgfSBmcm9tICduZXh0L3JvdXRlcidcclxuaW1wb3J0IHsgY2FjaGVBcnJheSB9IGZyb20gJy4uL2xpYi9yZXBvLWJhc2ljLWNhY2hlJ1xyXG5cclxuY29uc3QgeyBPQVVUSF9VUkwgfSA9IGNvbmZpZztcclxuY29uc3QgeyBUYWJQYW5lIH0gPSBUYWJzO1xyXG5jb25zdCBjYWNoZSA9IG5ldyBMUlUoe1xyXG4gICAgbWF4QWdlOiAxMDAwICogNjAgKiAzMCAvLzMwbWluXHJcbn0pXHJcbmNvbnN0IGlzU2VydmVyID0gdHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCdcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEluZGV4KHsgdXNlclJlcG9zID0gW10sIHVzZXJTdGFycmVkUmVwb3MgPSBbXSB9KSB7XHJcbiAgICBjb25zdCB1c2VyID0gdXNlU2VsZWN0b3Ioc3RhdGUgPT4gc3RhdGUudXNlcik7XHJcbiAgICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcclxuICAgIGNvbnN0IGFjdGl2ZVRhYktleSA9IHJvdXRlci5xdWVyeS5rZXkgfHwgJ3JlcG9zJztcclxuXHJcbiAgICBjb25zdCBoYW5kbGVUYWJDaGFuZ2UgPSAoYWN0aXZlVGFiS2V5KSA9PiB7XHJcbiAgICAgICAgUm91dGVyLnB1c2goYC8/a2V5PSR7YWN0aXZlVGFiS2V5fWApXHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8v5ZyoSW5kZXjpobXpnaLkuI3popHnuYHor7fmsYJyZXBv5L+h5oGvXHJcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgICAgIGlmICghaXNTZXJ2ZXIpIHsgXHJcbiAgICAgICAgICAgIHVzZXJSZXBvcyAmJiBjYWNoZS5zZXQoJ3VzZXJSZXBvcycsIHVzZXJSZXBvcylcclxuICAgICAgICAgICAgdXNlclN0YXJyZWRSZXBvcyAmJiAgY2FjaGUuc2V0KCd1c2VyU3RhcnJlZFJlcG9zJywgdXNlclN0YXJyZWRSZXBvcylcclxuICAgICAgICB9XHJcbiAgICB9LCBbdXNlclJlcG9zLCB1c2VyU3RhcnJlZFJlcG9zXSlcclxuXHJcbiAgICAvL+i3s+i9rOWIsC9zZWFyY2jpobXpnaLkuI3nlKjph43mlrDor7fmsYJyZXBv5L+h5oGvXHJcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgICAgIGlmICghaXNTZXJ2ZXIpIHtcclxuICAgICAgICAgICAgY2FjaGVBcnJheSh1c2VyUmVwb3MpXHJcbiAgICAgICAgICAgIGNhY2hlQXJyYXkodXNlclN0YXJyZWRSZXBvcylcclxuICAgICAgICB9XHJcbiAgICB9KVxyXG5cclxuXHRjb25zdCBCZWZvcmVMb2dpbiA9ICgpID0+IChcclxuXHRcdDw+XHJcbiAgICAgICAgICAgIDxSZXN1bHRcclxuICAgICAgICAgICAgICAgIGljb249ezxJY29uIHR5cGU9XCJnaXRodWJcIiAvPn1cclxuICAgICAgICAgICAgICAgIHRpdGxlPVwiQ2xpY2sgdGhlIGJ1dHRvbiB0byBsb2dpbiBpbnRvIHlvdXIgR2l0aHViIGFjY291bnQgXCJcclxuICAgICAgICAgICAgICAgIGV4dHJhPXs8QnV0dG9uIHR5cGU9XCJwcmltYXJ5XCI+TG9nIGluPC9CdXR0b24+fVxyXG4gICAgICAgICAgICAvPlxyXG5cdFx0PC8+XHJcblx0KVxyXG5cdFxyXG5cdGlmICghdXNlciB8fCAhdXNlci5pZCkge1xyXG5cdFx0cmV0dXJuIDxCZWZvcmVMb2dpbiAvPlxyXG5cdH1cclxuXHJcblx0cmV0dXJuIChcclxuXHRcdDw+XHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lPVwicm9vdFwiPlxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwidXNlci1pbmZvXCI+XHJcblx0XHRcdFx0XHQ8aW1nIHNyYz17dXNlci5hdmF0YXJfdXJsfSBhbHQ9XCJ1c2VyIGF2YXRhclwiIGNsYXNzTmFtZT1cInVzZXItYXZhdGFyXCIvPlxyXG5cdFx0XHRcdFx0PHAgY2xhc3NOYW1lPVwidXNlci1uYW1lXCI+e3VzZXIubG9naW59PC9wPlxyXG5cdFx0XHRcdDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPFRhYnMgXHJcbiAgICAgICAgICAgICAgICAgICAgYWN0aXZlS2V5PXthY3RpdmVUYWJLZXl9IFxyXG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVUYWJDaGFuZ2V9IFxyXG4gICAgICAgICAgICAgICAgICAgIGFuaW1hdGVkPXtmYWxzZX1cclxuICAgICAgICAgICAgICAgICAgICBzaXplPVwibGFyZ2VcIlxyXG4gICAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgICAgIDxUYWJQYW5lIGtleT1cInJlcG9zXCIgdGFiPVwiUmVwb3NpdG9yaWVzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHt1c2VyUmVwb3MubWFwKHJlcG8gPT4gPFJlcG8ga2V5PXtyZXBvLmlkfSByZXBvPXtyZXBvfSAvPil9XHJcbiAgICAgICAgICAgICAgICAgICAgPC9UYWJQYW5lPlxyXG4gICAgICAgICAgICAgICAgICAgIDxUYWJQYW5lIGtleT1cInN0YXJzXCIgdGFiPVwiU3RhcnNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAge3VzZXJTdGFycmVkUmVwb3MubWFwKHJlcG8gPT4gPFJlcG8ga2V5PXtyZXBvLmlkfSByZXBvPXtyZXBvfSAvPil9XHJcbiAgICAgICAgICAgICAgICAgICAgPC9UYWJQYW5lPlxyXG4gICAgICAgICAgICAgICAgPC9UYWJzPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdFx0PHN0eWxlIGpzeD57YFxyXG5cdFx0XHRcdC5yb290IHtcclxuXHRcdFx0XHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRcdFx0XHRhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuXHRcdFx0XHRcdHBhZGRpbmc6IDIwcHggMDtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0LnVzZXItaW5mbyB7XHJcblx0XHRcdFx0XHR3aWR0aDogMjAwcHg7XHJcblx0XHRcdFx0XHRtYXJnaW4tcmlnaHQ6IDQwcHg7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdC51c2VyLW5hbWUge1xyXG5cdFx0XHRcdFx0Zm9udC1zaXplOiAyMHB4O1xyXG5cdFx0XHRcdFx0Zm9udC13ZWlnaHQ6IDMwMDtcclxuXHRcdFx0XHRcdG1hcmdpbi10b3A6IDEwcHg7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdC51c2VyLWF2YXRhciB7XHJcblx0XHRcdFx0XHR3aWR0aDogMTAwJTtcclxuXHRcdFx0XHRcdGJvcmRlci1yYWRpdXM6IDRweDtcclxuXHRcdFx0XHR9XHJcblx0XHRcdGB9PC9zdHlsZT5cclxuXHRcdDwvPlxyXG5cdClcclxufVxyXG5cclxuY29uc3QgYXBpID0gcmVxdWlyZSgnLi4vbGliL2FwaScpXHJcbi8v6LCD55So77yaIOacjeWKoeerr+a4suafk2luZGV45pe2IC/lrqLmiLfnq6/lr7zoiKrliLBpbmRleOaXtlxyXG4vL+a1j+iniOWZqOeOr+Wig++8miBheGlvcy5nZXQoJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC94eHgnKVxyXG4vL25vZGXnjq/looPvvJogYXhpb3MuZ2V0KCdodHRwOi8vbG9jYWxob3N0OjgwL3h4eCcpXHJcbkluZGV4LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jICh7IHJlcSwgcmVzLCByZWR1eFN0b3JlIH0pID0+IHtcclxuICAgIGNvbnN0IHVzZXIgPSByZWR1eFN0b3JlLmdldFN0YXRlKCkudXNlcjtcclxuICAgIGlmICghdXNlciB8fCAhdXNlci5pZCApIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICB1c2VyUmVwb3M6IG51bGwsXHJcbiAgICAgICAgICAgIHVzZXJTdGFycmVkUmVwb3M6IG51bGxcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBpZiAoIWlzU2VydmVyKSB7IC8v5pyN5Yqh56uv546v5aKD5LiN5L2/55So57yT5a2YXHJcbiAgICAgICAgY29uc3QgdXNlclJlcG9zID0gY2FjaGUuZ2V0KCd1c2VyUmVwb3MnKTtcclxuICAgICAgICBjb25zdCB1c2VyU3RhcnJlZFJlcG9zID0gY2FjaGUuZ2V0KCd1c2VyU3RhcnJlZFJlcG9zJylcclxuICAgICAgICBpZiAodXNlclJlcG9zICYmIHVzZXJTdGFycmVkUmVwb3MpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIHVzZXJSZXBvcyxcclxuICAgICAgICAgICAgICAgIHVzZXJTdGFycmVkUmVwb3MgICAgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgdXNlclJlcG9zUmVzcCA9IGF3YWl0IGFwaS5yZXF1ZXN0KFxyXG4gICAgICAgIHsgdXJsOiAnL3VzZXIvcmVwb3MnIH0sIFxyXG4gICAgICAgIHJlcSwgXHJcbiAgICAgICAgcmVzXHJcbiAgICApO1xyXG4gICAgY29uc3QgdXNlclN0YXJyZWRSZXBvc1Jlc3AgPSBhd2FpdCBhcGkucmVxdWVzdChcclxuICAgICAgICB7IHVybDogJy91c2VyL3N0YXJyZWQnfSxcclxuICAgICAgICByZXEsXHJcbiAgICAgICAgcmVzXHJcbiAgICApO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICB1c2VyUmVwb3M6IHVzZXJSZXBvc1Jlc3AuZGF0YSB8fCBbXSxcclxuICAgICAgICB1c2VyU3RhcnJlZFJlcG9zOiB1c2VyU3RhcnJlZFJlcG9zUmVzcC5kYXRhIHx8IFtdXHJcbiAgICB9XHJcbn1cclxuXHJcbiJdfQ== */\\n/*@ sourceURL=D:\\\\\\\\\\u7F16\\u7A0B\\\\\\\\\\u9879\\u76EE\\\\\\\\next\\u9879\\u76EE\\\\\\\\next-github\\\\\\\\pages\\\\\\\\index.js */\"));\n}\n\nvar api = require('../lib/api'); //调用： 服务端渲染index时 /客户端导航到index时\n//浏览器环境： axios.get('http://localhost:3000/xxx')\n//node环境： axios.get('http://localhost:80/xxx')\n\n\nIndex.getInitialProps = function _callee(_ref2) {\n  var req, res, reduxStore, user, userRepos, userStarredRepos, userReposResp, userStarredReposResp;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = _ref2.req, res = _ref2.res, reduxStore = _ref2.reduxStore;\n          user = reduxStore.getState().user;\n\n          if (!(!user || !user.id)) {\n            _context.next = 4;\n            break;\n          }\n\n          return _context.abrupt(\"return\", {\n            userRepos: null,\n            userStarredRepos: null\n          });\n\n        case 4:\n          if (isServer) {\n            _context.next = 9;\n            break;\n          }\n\n          //服务端环境不使用缓存\n          userRepos = cache.get('userRepos');\n          userStarredRepos = cache.get('userStarredRepos');\n\n          if (!(userRepos && userStarredRepos)) {\n            _context.next = 9;\n            break;\n          }\n\n          return _context.abrupt(\"return\", {\n            userRepos: userRepos,\n            userStarredRepos: userStarredRepos\n          });\n\n        case 9:\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(api.request({\n            url: '/user/repos'\n          }, req, res));\n\n        case 11:\n          userReposResp = _context.sent;\n          _context.next = 14;\n          return _regeneratorRuntime.awrap(api.request({\n            url: '/user/starred'\n          }, req, res));\n\n        case 14:\n          userStarredReposResp = _context.sent;\n          return _context.abrupt(\"return\", {\n            userRepos: userReposResp.data || [],\n            userStarredRepos: userStarredReposResp.data || []\n          });\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["D:/编程/项目/next项目/next-github/pages/index.js"],"names":["useSelector","useEffect","Repo","config","LRU","Router","useRouter","cacheArray","OAUTH_URL","TabPane","cache","maxAge","isServer","Index","userRepos","userStarredRepos","user","state","router","activeTabKey","query","key","handleTabChange","push","set","BeforeLogin","id","avatar_url","login","map","repo","api","require","getInitialProps","req","res","reduxStore","getState","get","request","url","userReposResp","userStarredReposResp","data"],"mappings":"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","sourcesContent":["import { useSelector } from 'react-redux'\r\nimport { Button, Tabs, Result, Icon } from 'antd'\r\nimport { useEffect } from 'react'\r\nimport Repo from '../components/Repo'\r\nimport config from '../config'\r\nimport LRU from 'lru-cache'\r\nimport  Router, { useRouter } from 'next/router'\r\nimport { cacheArray } from '../lib/repo-basic-cache'\r\n\r\nconst { OAUTH_URL } = config;\r\nconst { TabPane } = Tabs;\r\nconst cache = new LRU({\r\n    maxAge: 1000 * 60 * 30 //30min\r\n})\r\nconst isServer = typeof window === 'undefined'\r\n\r\nexport default function Index({ userRepos = [], userStarredRepos = [] }) {\r\n    const user = useSelector(state => state.user);\r\n    const router = useRouter();\r\n    const activeTabKey = router.query.key || 'repos';\r\n\r\n    const handleTabChange = (activeTabKey) => {\r\n        Router.push(`/?key=${activeTabKey}`)\r\n    }\r\n    \r\n    //在Index页面不频繁请求repo信息\r\n    useEffect(() => {\r\n        if (!isServer) { \r\n            userRepos && cache.set('userRepos', userRepos)\r\n            userStarredRepos &&  cache.set('userStarredRepos', userStarredRepos)\r\n        }\r\n    }, [userRepos, userStarredRepos])\r\n\r\n    //跳转到/search页面不用重新请求repo信息\r\n    useEffect(() => {\r\n        if (!isServer) {\r\n            cacheArray(userRepos)\r\n            cacheArray(userStarredRepos)\r\n        }\r\n    })\r\n\r\n\tconst BeforeLogin = () => (\r\n\t\t<>\r\n            <Result\r\n                icon={<Icon type=\"github\" />}\r\n                title=\"Click the button to login into your Github account \"\r\n                extra={<Button type=\"primary\">Log in</Button>}\r\n            />\r\n\t\t</>\r\n\t)\r\n\t\r\n\tif (!user || !user.id) {\r\n\t\treturn <BeforeLogin />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"root\">\r\n\t\t\t\t<div className=\"user-info\">\r\n\t\t\t\t\t<img src={user.avatar_url} alt=\"user avatar\" className=\"user-avatar\"/>\r\n\t\t\t\t\t<p className=\"user-name\">{user.login}</p>\r\n\t\t\t\t</div>\r\n                <Tabs \r\n                    activeKey={activeTabKey} \r\n                    onChange={handleTabChange} \r\n                    animated={false}\r\n                    size=\"large\"\r\n                >\r\n                    <TabPane key=\"repos\" tab=\"Repositories\">\r\n                        {userRepos.map(repo => <Repo key={repo.id} repo={repo} />)}\r\n                    </TabPane>\r\n                    <TabPane key=\"stars\" tab=\"Stars\">\r\n                        {userStarredRepos.map(repo => <Repo key={repo.id} repo={repo} />)}\r\n                    </TabPane>\r\n                </Tabs>\r\n\t\t\t</div>\r\n\t\t\t<style jsx>{`\r\n\t\t\t\t.root {\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\talign-items: flex-start;\r\n\t\t\t\t\tpadding: 20px 0;\r\n\t\t\t\t}\r\n\t\t\t\t.user-info {\r\n\t\t\t\t\twidth: 200px;\r\n\t\t\t\t\tmargin-right: 40px;\r\n\t\t\t\t}\r\n\t\t\t\t.user-name {\r\n\t\t\t\t\tfont-size: 20px;\r\n\t\t\t\t\tfont-weight: 300;\r\n\t\t\t\t\tmargin-top: 10px;\r\n\t\t\t\t}\r\n\t\t\t\t.user-avatar {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tborder-radius: 4px;\r\n\t\t\t\t}\r\n\t\t\t`}</style>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst api = require('../lib/api')\r\n//调用： 服务端渲染index时 /客户端导航到index时\r\n//浏览器环境： axios.get('http://localhost:3000/xxx')\r\n//node环境： axios.get('http://localhost:80/xxx')\r\nIndex.getInitialProps = async ({ req, res, reduxStore }) => {\r\n    const user = reduxStore.getState().user;\r\n    if (!user || !user.id ) {\r\n        return {\r\n            userRepos: null,\r\n            userStarredRepos: null\r\n        }\r\n    }\r\n    if (!isServer) { //服务端环境不使用缓存\r\n        const userRepos = cache.get('userRepos');\r\n        const userStarredRepos = cache.get('userStarredRepos')\r\n        if (userRepos && userStarredRepos) {\r\n            return {\r\n                userRepos,\r\n                userStarredRepos    \r\n            }\r\n        }\r\n    }\r\n\r\n    const userReposResp = await api.request(\r\n        { url: '/user/repos' }, \r\n        req, \r\n        res\r\n    );\r\n    const userStarredReposResp = await api.request(\r\n        { url: '/user/starred'},\r\n        req,\r\n        res\r\n    );\r\n    return {\r\n        userRepos: userReposResp.data || [],\r\n        userStarredRepos: userStarredReposResp.data || []\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}