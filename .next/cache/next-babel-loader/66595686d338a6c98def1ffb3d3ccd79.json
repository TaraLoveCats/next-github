{"ast":null,"code":"import _Search from \"antd/lib/search\";\nimport _Spin from \"antd/lib/spin\";\nimport _Select from \"antd/lib/select\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useCallback, useRef } from 'react';\nimport api from '../lib/api';\nimport debounce from 'lodash/debounce';\nvar Option = _Select.Option;\nexport default function SearchUser(_ref) {\n  var onChange = _ref.onChange,\n      value = _ref.value;\n  // {current: 0}\n  var lastFetchIdRef = useRef(0);\n\n  var _useState = useState(false),\n      fetching = _useState[0],\n      setFetching = _useState[1];\n\n  var _useState2 = useState([]),\n      options = _useState2[0],\n      setOptions = _useState2[1];\n\n  var handleChange = function handleChange(value) {\n    setOptions({});\n    setFetching(false);\n    onChange(value);\n  };\n\n  var fetchUser = useCallback(debounce(function (value) {\n    lastFetchIdRef.current += 1;\n    var fetchId = lastFetchIdRef.current;\n    setFetching(true);\n    setOptions([]);\n    api.request({\n      url: \"/search/users?q=\".concat(value)\n    }).then(function (resp) {\n      console.log('user:', resp);\n\n      if (fetchId !== lastFetchIdRef.current) {\n        return;\n      }\n\n      var data = resp.data.items.map(function (user) {\n        return {\n          text: user.login,\n          value: user.login\n        };\n      });\n      setFetching(false);\n      setOptions(data);\n    });\n  }, 500), []); //输入0.5秒后再请求\n\n  return __jsx(_Search, {\n    value: value,\n    showSearch: true,\n    notFoundContent: fetching ? __jsx(_Spin, {\n      size: small\n    }) : __jsx(\"span\", null, \"Not Found\"),\n    filterOption: false,\n    placeholder: \"search user...\",\n    allowClear: true,\n    onSearch: fetchUser,\n    onChange: handleChange,\n    style: {\n      width: 200\n    }\n  }, options.map(function (op) {\n    return __jsx(Option, {\n      value: op.value,\n      key: op.value\n    }, op.text);\n  }));\n}","map":{"version":3,"sources":["D:/编程/项目/next项目/next-github/components/SearchUser.jsx"],"names":["useState","useCallback","useRef","api","debounce","Option","SearchUser","onChange","value","lastFetchIdRef","fetching","setFetching","options","setOptions","handleChange","fetchUser","current","fetchId","request","url","then","resp","console","log","data","items","map","user","text","login","small","width","op"],"mappings":";;;;;AACA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,MAAhC,QAA8C,OAA9C;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,QAAP,MAAqB,iBAArB;IAEQC,M,WAAAA,M;AAER,eAAe,SAASC,UAAT,OAAyC;AAAA,MAAnBC,QAAmB,QAAnBA,QAAmB;AAAA,MAATC,KAAS,QAATA,KAAS;AACpD;AACA,MAAMC,cAAc,GAAGP,MAAM,CAAC,CAAD,CAA7B;;AAFoD,kBAGpBF,QAAQ,CAAC,KAAD,CAHY;AAAA,MAG7CU,QAH6C;AAAA,MAGnCC,WAHmC;;AAAA,mBAItBX,QAAQ,CAAC,EAAD,CAJc;AAAA,MAI7CY,OAJ6C;AAAA,MAIpCC,UAJoC;;AAMpD,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACN,KAAD,EAAW;AAC5BK,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAJ,IAAAA,QAAQ,CAACC,KAAD,CAAR;AACH,GAJD;;AAMA,MAAMO,SAAS,GAAGd,WAAW,CAACG,QAAQ,CAAC,UAAAI,KAAK,EAAI;AAC5CC,IAAAA,cAAc,CAACO,OAAf,IAA0B,CAA1B;AACA,QAAMC,OAAO,GAAGR,cAAc,CAACO,OAA/B;AACAL,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AAEAV,IAAAA,GAAG,CAACe,OAAJ,CAAY;AACRC,MAAAA,GAAG,4BAAqBX,KAArB;AADK,KAAZ,EAGCY,IAHD,CAGM,UAAAC,IAAI,EAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,IAArB;;AACA,UAAIJ,OAAO,KAAKR,cAAc,CAACO,OAA/B,EAAwC;AACpC;AACH;;AACD,UAAMQ,IAAI,GAAGH,IAAI,CAACG,IAAL,CAAUC,KAAV,CAAgBC,GAAhB,CAAoB,UAAAC,IAAI;AAAA,eAAK;AACtCC,UAAAA,IAAI,EAAED,IAAI,CAACE,KAD2B;AAEtCrB,UAAAA,KAAK,EAAEmB,IAAI,CAACE;AAF0B,SAAL;AAAA,OAAxB,CAAb;AAIAlB,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,MAAAA,UAAU,CAACW,IAAD,CAAV;AACH,KAdD;AAeH,GArBqC,EAqBnC,GArBmC,CAAT,EAqBpB,EArBoB,CAA7B,CAZoD,CAiCtC;;AAEd,SACI;AACI,IAAA,KAAK,EAAEhB,KADX;AAEI,IAAA,UAAU,EAAE,IAFhB;AAGI,IAAA,eAAe,EAAEE,QAAQ,GAAG;AAAM,MAAA,IAAI,EAAEoB;AAAZ,MAAH,GAA2B,gCAHxD;AAII,IAAA,YAAY,EAAE,KAJlB;AAKI,IAAA,WAAW,EAAC,gBALhB;AAMI,IAAA,UAAU,EAAE,IANhB;AAOI,IAAA,QAAQ,EAAEf,SAPd;AAQI,IAAA,QAAQ,EAAED,YARd;AASI,IAAA,KAAK,EAAE;AAAEiB,MAAAA,KAAK,EAAE;AAAT;AATX,KAYQnB,OAAO,CAACc,GAAR,CAAY,UAAAM,EAAE;AAAA,WACV,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,EAAE,CAACxB,KAAlB;AAAyB,MAAA,GAAG,EAAEwB,EAAE,CAACxB;AAAjC,OACKwB,EAAE,CAACJ,IADR,CADU;AAAA,GAAd,CAZR,CADJ;AAqBH","sourcesContent":["import { Select, Spin, Search } from 'antd'\r\nimport { useState, useCallback, useRef } from 'react';\r\nimport api from '../lib/api'\r\nimport debounce from 'lodash/debounce'\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function SearchUser({ onChange, value }) {\r\n    // {current: 0}\r\n    const lastFetchIdRef = useRef(0);\r\n    const [fetching, setFetching] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n\r\n    const handleChange = (value) => {\r\n        setOptions({});\r\n        setFetching(false);\r\n        onChange(value);\r\n    }\r\n\r\n    const fetchUser = useCallback(debounce(value => {\r\n        lastFetchIdRef.current += 1;\r\n        const fetchId = lastFetchIdRef.current;\r\n        setFetching(true);\r\n        setOptions([]);\r\n\r\n        api.request({\r\n            url: `/search/users?q=${value}`\r\n        })\r\n        .then(resp => {\r\n            console.log('user:', resp)\r\n            if (fetchId !== lastFetchIdRef.current) {\r\n                return;\r\n            }\r\n            const data = resp.data.items.map(user => ({\r\n                text: user.login,\r\n                value: user.login\r\n            }))\r\n            setFetching(false);\r\n            setOptions(data);\r\n        })\r\n    }, 500), []); //输入0.5秒后再请求\r\n\r\n    return (\r\n        <Search \r\n            value={value}\r\n            showSearch={true}\r\n            notFoundContent={fetching ? <Spin size={small} /> : <span>Not Found</span>}\r\n            filterOption={false}\r\n            placeholder=\"search user...\"\r\n            allowClear={true}\r\n            onSearch={fetchUser}\r\n            onChange={handleChange}\r\n            style={{ width: 200 }}\r\n        >\r\n            {\r\n                options.map(op => (\r\n                    <Option value={op.value} key={op.value}>\r\n                        {op.text}\r\n                    </Option>\r\n                ))\r\n            }\r\n        </Search>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}