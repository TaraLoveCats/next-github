{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Row from \"antd/lib/row\";\nimport _Pagination from \"antd/lib/pagination\";\nimport _Statistic from \"antd/lib/statistic\";\nimport _Col from \"antd/lib/col\";\nimport _List from \"antd/lib/list\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport { memo, isValidElement, useEffect } from 'react';\nimport Link from 'next/link';\nimport Repo from '../components/Repo';\nimport data from '../testData';\nimport { cacheArray } from '../lib/repo-basic-cache';\n\nvar api = require('../lib/api');\n\nvar LANGUAGES = ['JavaScript', 'TypeScript', 'HTML', 'CSS', 'Java', 'Rust', 'Python'];\nvar SORT_TYPES = [{\n  name: 'Best Match'\n}, {\n  name: 'Most Stars',\n  value: 'stars',\n  order: 'desc'\n}, {\n  name: 'Fewest Stars',\n  value: 'stars',\n  order: 'asc'\n}, {\n  name: 'Most Forks',\n  value: 'forks',\n  order: 'desc'\n}, {\n  name: 'Fewest Forks',\n  value: 'forks',\n  order: 'asc'\n}];\nvar per_page = 10;\nvar selectedItemStyle = {\n  borderLeft: '2px solid #e36209',\n  fontWeight: 100\n};\nvar initRepos = {\n  total_count: 0,\n  items: []\n};\nvar isServer = false;\n\nfunction noop() {}\n\nvar FilterLink = memo(function (_ref) {\n  var name = _ref.name,\n      q = _ref.q,\n      lang = _ref.lang,\n      sort = _ref.sort,\n      order = _ref.order,\n      page = _ref.page;\n  var queryString = \"?q=\".concat(q);\n  lang && (queryString += \"&lang=\".concat(lang));\n  sort && (queryString += \"&sort=\".concat(sort, \"&order=\").concat(order || 'desc'));\n  page && (queryString += \"&page=\".concat(page));\n  queryString += \"&per_page=\".concat(per_page);\n  return __jsx(Link, {\n    href: \"/search\".concat(queryString)\n  }, isValidElement(name) ? name : __jsx(\"a\", null, name));\n});\nexport default function Search(_ref2) {\n  var _ref2$repos = _ref2.repos,\n      repos = _ref2$repos === void 0 ? initRepos : _ref2$repos,\n      colors = _ref2.colors;\n  var router = useRouter();\n\n  var querys = _extends({}, router.query);\n\n  var _router$query = router.query,\n      sort = _router$query.sort,\n      order = _router$query.order,\n      lang = _router$query.lang,\n      page = _router$query.page;\n  useEffect(function () {\n    if (!isServer) {\n      cacheArray(repos.items);\n    }\n  });\n  return __jsx(\"div\", {\n    className: \"jsx-1659618766\" + \" \" + \"root\"\n  }, __jsx(_Row, {\n    gutter: 20\n  }, __jsx(_Col, {\n    span: 6\n  }, __jsx(_List, {\n    bordered: true,\n    header: __jsx(\"span\", {\n      className: \"jsx-1659618766\" + \" \" + \"list-header\"\n    }, \"Languages\"),\n    style: {\n      marginBottom: 20\n    },\n    dataSource: LANGUAGES,\n    renderItem: function renderItem(item) {\n      var selected = item === lang;\n      return __jsx(_List.Item, {\n        style: selected ? selectedItemStyle : null\n      }, selected ? __jsx(\"span\", {\n        className: \"jsx-1659618766\"\n      }, item) : __jsx(FilterLink, _extends({}, querys, {\n        lang: item,\n        name: item\n      })));\n    }\n  }), __jsx(_List, {\n    bordered: true,\n    header: __jsx(\"span\", {\n      className: \"jsx-1659618766\" + \" \" + \"list-header\"\n    }, \"Sort By\"),\n    dataSource: SORT_TYPES,\n    renderItem: function renderItem(item) {\n      var selected = false;\n\n      if (item.name === 'Best Match' && !sort) {\n        selected = true;\n      } else if (item.value === sort && item.order === order) {\n        selected = true;\n      }\n\n      return __jsx(_List.Item, {\n        style: selected ? selectedItemStyle : null\n      }, selected ? __jsx(\"span\", {\n        className: \"jsx-1659618766\"\n      }, item.name) : __jsx(FilterLink, _extends({}, querys, {\n        name: item.name,\n        sort: item.value,\n        order: item.order\n      })));\n    }\n  })), __jsx(_Col, {\n    span: 18\n  }, __jsx(\"h3\", {\n    className: \"jsx-1659618766\" + \" \" + \"repos-title\"\n  }, __jsx(_Statistic, {\n    value: repos.total_count\n  }), __jsx(\"span\", {\n    className: \"jsx-1659618766\"\n  }, \"\\xA0repository results\")), repos.items.map(function (repo) {\n    return __jsx(Repo, {\n      repo: repo,\n      key: repo.id,\n      colors: colors\n    });\n  }), __jsx(\"div\", {\n    className: \"jsx-1659618766\" + \" \" + \"pagination\"\n  }, __jsx(_Pagination, {\n    pageSize: per_page,\n    current: +page || 1,\n    total: 1000 //github限制返回1000条\n    ,\n    onChange: noop,\n    itemRender: function itemRender(page, type, ol) {\n      var p = type === 'page' ? page : type === 'prev' ? page - 1 : page + 1;\n      var name = type === 'page' ? page : ol;\n      return __jsx(FilterLink, _extends({}, querys, {\n        page: p,\n        name: name\n      }));\n    }\n  })))), __jsx(_JSXStyle, {\n    id: \"1659618766\"\n  }, \".root.jsx-1659618766{padding:30px 0;}.repos-title.jsx-1659618766{border-bottom:1px solid #ddd;font-size:24px;line-height:1.5;padding-bottom:20px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;}.list-header.jsx-1659618766{font-weight:700;font-size:16px;}.pagination.jsx-1659618766{padding:20px;text-align:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=D:\\\\\\\\\\u7F16\\u7A0B\\\\\\\\\\u9879\\u76EE\\\\\\\\next\\u9879\\u76EE\\\\\\\\next-github\\\\\\\\pages\\\\\\\\search.js */\"));\n}\n\nSearch.getInitialProps = function _callee(_ref3) {\n  var query, req, res, q, sort, lang, order, page, queryString, result;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref3.query, req = _ref3.req, res = _ref3.res;\n          console.log('Search getInitialProps called');\n          q = query.q, sort = query.sort, lang = query.lang, order = query.order, page = query.page;\n\n          if (q) {\n            _context.next = 5;\n            break;\n          }\n\n          return _context.abrupt(\"return\", {\n            repos: initRepos\n          });\n\n        case 5:\n          // ?q=react+language:javascript&sort=stars&order=desc&page=2\n          queryString = \"?q=\".concat(q);\n          lang && (queryString += \"+language:\".concat(lang));\n          sort && (queryString += \"&sort=\".concat(sort, \"&order=\").concat(order || 'desc'));\n          page && (queryString += \"&page=\".concat(page));\n          queryString += \"&per_page=\".concat(per_page);\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(api.request({\n            url: \"/search/repositories\".concat(queryString)\n          }, req, res));\n\n        case 12:\n          result = _context.sent;\n          return _context.abrupt(\"return\", {\n            repos: result.data || data.react_repos\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["D:/编程/项目/next项目/next-github/pages/search.js"],"names":["useRouter","memo","isValidElement","useEffect","Link","Repo","data","cacheArray","api","require","LANGUAGES","SORT_TYPES","name","value","order","per_page","selectedItemStyle","borderLeft","fontWeight","initRepos","total_count","items","isServer","noop","FilterLink","q","lang","sort","page","queryString","Search","repos","colors","router","querys","query","marginBottom","item","selected","map","repo","id","type","ol","p","getInitialProps","req","res","console","log","request","url","result","react_repos"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\r\nimport { memo, isValidElement, useEffect } from 'react'\r\nimport { Row, Col, List, Pagination, Statistic } from 'antd'\r\nimport Link from 'next/link'\r\nimport Repo from '../components/Repo'\r\nimport data from '../testData'\r\nimport { cacheArray } from '../lib/repo-basic-cache'\r\nconst api = require('../lib/api')\r\n\r\nconst LANGUAGES = ['JavaScript', 'TypeScript', 'HTML', 'CSS', 'Java', 'Rust', 'Python'];\r\nconst SORT_TYPES = [\r\n  {\r\n    name: 'Best Match',\r\n  },\r\n  {\r\n    name: 'Most Stars',\r\n    value: 'stars',\r\n    order: 'desc',\r\n  },\r\n  {\r\n    name: 'Fewest Stars',\r\n    value: 'stars',\r\n    order: 'asc',\r\n  },\r\n  {\r\n    name: 'Most Forks',\r\n    value: 'forks',\r\n    order: 'desc',\r\n  },\r\n  {\r\n    name: 'Fewest Forks',\r\n    value: 'forks',\r\n    order: 'asc',\r\n  },\r\n];\r\nconst per_page = 10;\r\nconst selectedItemStyle = {\r\n    borderLeft: '2px solid #e36209',\r\n    fontWeight: 100,\r\n  }\r\nconst initRepos = {\r\n    total_count: 0,\r\n    items: []\r\n};\r\nconst isServer = typeof window === 'undefined';\r\nfunction noop() {}\r\n\r\nconst FilterLink = memo(({ name, q, lang, sort, order, page }) => {\r\n    let queryString = `?q=${q}`;\r\n    lang && (queryString += `&lang=${lang}`);\r\n    sort && (queryString += `&sort=${sort}&order=${order || 'desc'}`);\r\n    page && (queryString += `&page=${page}`);\r\n    queryString += `&per_page=${per_page}`;\r\n\r\n    return (\r\n        <Link href={`/search${queryString}`}>\r\n            {isValidElement(name) ? name : <a>{name}</a>}\r\n        </Link>\r\n    )\r\n});\r\n\r\nexport default function Search({ repos = initRepos, colors }) {\r\n    const router = useRouter();\r\n    const { ...querys } = router.query;\r\n    const { sort, order, lang, page } = router.query;\r\n\r\n    useEffect(() => {\r\n        if (!isServer) {\r\n            cacheArray(repos.items)\r\n        }\r\n    })\r\n    return (\r\n        <div className=\"root\">\r\n            <Row gutter={20}>\r\n                <Col span={6}>\r\n                    <List \r\n                        bordered\r\n                        header={<span className=\"list-header\">Languages</span>}\r\n                        style={{ marginBottom: 20 }}\r\n                        dataSource={LANGUAGES}\r\n                        renderItem={item => {\r\n                            const selected = item === lang;\r\n                            return  (\r\n                                <List.Item style={selected ? selectedItemStyle : null}>\r\n                                    {selected ? <span>{item}</span> : \r\n                                        <FilterLink \r\n                                            {...querys}\r\n                                            lang={item}\r\n                                            name={item}\r\n                                        />\r\n                                    }\r\n                                </List.Item>\r\n                        )}}\r\n                    />\r\n\r\n                    <List \r\n                        bordered\r\n                        header={<span className=\"list-header\">Sort By</span>}\r\n                        dataSource={SORT_TYPES}\r\n                        renderItem={item => {\r\n                            let selected = false;\r\n                            if (item.name === 'Best Match' && !sort) {\r\n                                selected = true;\r\n                            } else if (item.value === sort && item.order === order) {\r\n                                selected = true;\r\n                            }\r\n                            return (\r\n                                <List.Item style={selected ? selectedItemStyle : null}>\r\n                                    {selected ? <span>{item.name}</span> : \r\n                                        <FilterLink \r\n                                            {...querys}\r\n                                            name={item.name}\r\n                                            sort={item.value}\r\n                                            order={item.order}\r\n                                        />\r\n                                    }\r\n                                </List.Item>\r\n                        )}}\r\n                    />\r\n                </Col>\r\n                <Col span={18}> \r\n                    <h3 className=\"repos-title\">\r\n                        <Statistic value={repos.total_count}/> \r\n                        <span>&nbsp;repository results</span>\r\n                    </h3>\r\n                    {repos.items.map(repo => (\r\n                        <Repo repo={repo} key={repo.id} colors={colors} />\r\n                    ))}\r\n                    <div className=\"pagination\">\r\n                        <Pagination \r\n                            pageSize={per_page}\r\n                            current={+page || 1}\r\n                            total={1000} //github限制返回1000条\r\n                            onChange={noop}\r\n                            itemRender={(page, type, ol) => {\r\n                                const p = type === 'page' ? page : type === 'prev' ?  page - 1 : page + 1;\r\n                                const name = type === 'page' ? page : ol;\r\n                                return (\r\n                                    <FilterLink \r\n                                        {...querys} \r\n                                        page={p} \r\n                                        name={name} \r\n                                    />\r\n                                )\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <style jsx>{`\r\n                .root {\r\n                    padding: 30px 0;\r\n                }\r\n                .repos-title {\r\n                    border-bottom: 1px solid #ddd;\r\n                    font-size: 24px;\r\n                    line-height: 1.5;\r\n                    padding-bottom: 20px;\r\n                    display: flex;\r\n                    justify-content: flex-start;\r\n                }\r\n                .list-header {\r\n                    font-weight: 700;\r\n                    font-size: 16px;\r\n                }\r\n                .pagination {\r\n                    padding: 20px;\r\n                    text-align: center;\r\n                }\r\n            `}</style>\r\n        </div>\r\n    )\r\n}\r\n\r\nSearch.getInitialProps = async ({ query, req, res }) => {\r\n    console.log('Search getInitialProps called');\r\n    const { q, sort, lang, order, page} = query\r\n    if (!q) {\r\n        return {\r\n            repos: initRepos\r\n        }\r\n    }\r\n    // ?q=react+language:javascript&sort=stars&order=desc&page=2\r\n    let queryString = `?q=${q}`;\r\n    lang && (queryString += `+language:${lang}`);\r\n    sort && (queryString += `&sort=${sort}&order=${order || 'desc'}`);\r\n    page && (queryString += `&page=${page}`);\r\n    queryString += `&per_page=${per_page}`;\r\n\r\n    const result = await api.request({\r\n        url: `/search/repositories${queryString}`\r\n    }, req, res)\r\n    \r\n    return {\r\n        repos: result.data || data.react_repos\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}