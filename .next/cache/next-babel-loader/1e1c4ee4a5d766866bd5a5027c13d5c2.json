{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n// import App from 'next/app'\nimport 'antd/dist/antd.css';\nimport Layout from '../components/Layout';\nimport { Provider } from 'react-redux';\nimport withRedux from '../lib/with-redux';\nimport Router from 'next/router';\nimport { useState, useEffect } from 'react';\n\nfunction MyApp({\n  Component,\n  pageProps,\n  reduxStore\n}) {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const startLoading = () => {\n    setLoading(true);\n  };\n\n  const stopLoading = () => {\n    setLoading(false);\n  }; // useEffect(() => {\n  //     Router.events.on('routeChangeStart', startLoading)\n  //     Router.events.on('routeChangeComplete', stopLoading)\n  //     Router.events.on('routeChangeError', stopLoading)\n  //     return () => {\n  //         Router.events.off('routeChangeStart', startLoading)\n  //         Router.events.off('routeChangeComplete', stopLoading)\n  //         Router.events.off('routeChangeError', stopLoading)\n  //     }\n  // }, [])\n\n\n  Router.events.on('routeChangeStart', (...args) => console.log(`routeChangeStart${args}`));\n  Router.events.on('routeChangeComplete', (...args) => console.log(`routeChangeComplete${args}`));\n  Router.events.on('routeChangeError', (...args) => console.log(args));\n  return __jsx(Provider, {\n    store: reduxStore\n  }, __jsx(Layout, null, __jsx(Component, pageProps)));\n} // MyApp.getInitialProps = async (appContext) => {}\n\n\nexport default withRedux(MyApp);","map":{"version":3,"sources":["D:/编程/项目/next项目/next-github/pages/_app.js"],"names":["Layout","Provider","withRedux","Router","useState","useEffect","MyApp","Component","pageProps","reduxStore","loading","setLoading","startLoading","stopLoading","events","on","args","console","log"],"mappings":";;AAAA;AACA,OAAO,oBAAP;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAf,EAAqD;AACjD,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMQ,YAAY,GAAG,MAAM;AACvBD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH,GAFD;;AAGA,QAAME,WAAW,GAAG,MAAM;AACtBF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAFD,CANiD,CAUjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAR,EAAAA,MAAM,CAACW,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,CAAC,GAAGC,IAAJ,KAAaC,OAAO,CAACC,GAAR,CAAa,mBAAkBF,IAAK,EAApC,CAAlD;AACAb,EAAAA,MAAM,CAACW,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwC,CAAC,GAAGC,IAAJ,KAAaC,OAAO,CAACC,GAAR,CAAa,sBAAqBF,IAAK,EAAvC,CAArD;AACAb,EAAAA,MAAM,CAACW,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,CAAC,GAAGC,IAAJ,KAAaC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAlD;AAEA,SACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEP;AAAjB,KACI,MAAC,MAAD,QAEI,MAAC,SAAD,EAAeD,SAAf,CAFJ,CADJ,CADJ;AAQH,C,CAED;;;AAEA,eAAeN,SAAS,CAACI,KAAD,CAAxB","sourcesContent":["// import App from 'next/app'\r\nimport 'antd/dist/antd.css'\r\nimport Layout from '../components/Layout'\r\nimport { Provider } from 'react-redux'  \r\nimport withRedux from '../lib/with-redux'\r\nimport Router from 'next/router'\r\nimport { Spin } from 'antd'\r\nimport { useState, useEffect } from 'react'\r\n\r\nfunction MyApp({ Component, pageProps, reduxStore }) {\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const startLoading = () => {\r\n        setLoading(true)\r\n    }\r\n    const stopLoading = () => {\r\n        setLoading(false)\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     Router.events.on('routeChangeStart', startLoading)\r\n    //     Router.events.on('routeChangeComplete', stopLoading)\r\n    //     Router.events.on('routeChangeError', stopLoading)\r\n    //     return () => {\r\n    //         Router.events.off('routeChangeStart', startLoading)\r\n    //         Router.events.off('routeChangeComplete', stopLoading)\r\n    //         Router.events.off('routeChangeError', stopLoading)\r\n    //     }\r\n    // }, [])\r\n\r\n    Router.events.on('routeChangeStart', (...args) => console.log(`routeChangeStart${args}`))\r\n    Router.events.on('routeChangeComplete', (...args) => console.log(`routeChangeComplete${args}`))\r\n    Router.events.on('routeChangeError', (...args) => console.log(args))\r\n\r\n    return (\r\n        <Provider store={reduxStore}>\r\n            <Layout>\r\n                {/* {loading ? <Spin tip=\"加载中...\" /> : null} */}\r\n                <Component {...pageProps} />\r\n            </Layout>\r\n        </Provider>\r\n    )\r\n}\r\n\r\n// MyApp.getInitialProps = async (appContext) => {}\r\n\r\nexport default withRedux(MyApp)"]},"metadata":{},"sourceType":"module"}