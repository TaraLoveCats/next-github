{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nvar initialState = {\n  count: 0\n};\nvar userInitialState = {\n  username: 'jokcy'\n};\nvar ADD = 'ADD';\n\nfunction counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  // console.log(state, action)\n  switch (action.type) {\n    case ADD:\n      return {\n        count: state.count + (action.num || 1)\n      };\n\n    default:\n      return state;\n  }\n}\n\nvar UPDATE_USERNAME = 'UPDATE_USERNAME';\n\nfunction userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : userInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_USERNAME:\n      return _objectSpread({}, state, {\n        username: action.name\n      });\n\n    default:\n      return state;\n  }\n}\n\nvar allReducers = combineReducers({\n  counter: counterReducer,\n  user: userReducer\n}); // action creatore\n\nexport function add(num) {\n  return {\n    type: ADD,\n    num: num\n  };\n}\n\nfunction addAsync(num) {\n  return function (dispatch) {\n    setTimeout(function () {\n      dispatch(add(num));\n    }, 1000);\n  };\n} //export一个创建store的函数，每次生成的store都是新的\n\n\nexport default function initializeStore(state) {\n  var store = createStore(allReducers, _Object$assign({}, {\n    counter: initialState,\n    user: userInitialState\n  }, state), composeWithDevTools(applyMiddleware(ReduxThunk)));\n  return store;\n}","map":{"version":3,"sources":["D:/编程/项目/next项目/next-github/store/store.js"],"names":["createStore","combineReducers","applyMiddleware","ReduxThunk","composeWithDevTools","initialState","count","userInitialState","username","ADD","counterReducer","state","action","type","num","UPDATE_USERNAME","userReducer","name","allReducers","counter","user","add","addAsync","dispatch","setTimeout","initializeStore","store"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;AAIA,IAAMC,gBAAgB,GAAG;AACvBC,EAAAA,QAAQ,EAAE;AADa,CAAzB;AAIA,IAAMC,GAAG,GAAG,KAAZ;;AACA,SAASC,cAAT,GAAsD;AAAA,MAA9BC,KAA8B,uEAAtBN,YAAsB;AAAA,MAARO,MAAQ;;AACpD;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,GAAL;AACE,aAAO;AAAEH,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,IAAeM,MAAM,CAACE,GAAP,IAAc,CAA7B;AAAT,OAAP;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD;;AAED,IAAMI,eAAe,GAAG,iBAAxB;;AACA,SAASC,WAAT,GAAuD;AAAA,MAAlCL,KAAkC,uEAA1BJ,gBAA0B;AAAA,MAARK,MAAQ;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKE,eAAL;AACE,+BACKJ,KADL;AAEEH,QAAAA,QAAQ,EAAEI,MAAM,CAACK;AAFnB;;AAIF;AACE,aAAON,KAAP;AAPJ;AASD;;AAED,IAAMO,WAAW,GAAGjB,eAAe,CAAC;AAClCkB,EAAAA,OAAO,EAAET,cADyB;AAElCU,EAAAA,IAAI,EAAEJ;AAF4B,CAAD,CAAnC,C,CAKA;;AACA,OAAO,SAASK,GAAT,CAAaP,GAAb,EAAkB;AACvB,SAAO;AACLD,IAAAA,IAAI,EAAEJ,GADD;AAELK,IAAAA,GAAG,EAAHA;AAFK,GAAP;AAID;;AAED,SAASQ,QAAT,CAAkBR,GAAlB,EAAuB;AACrB,SAAO,UAAAS,QAAQ,EAAI;AACjBC,IAAAA,UAAU,CAAC,YAAM;AACfD,MAAAA,QAAQ,CAACF,GAAG,CAACP,GAAD,CAAJ,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJD;AAKD,C,CAED;;;AACA,eAAe,SAASW,eAAT,CAAyBd,KAAzB,EAAgC;AAC7C,MAAMe,KAAK,GAAG1B,WAAW,CACvBkB,WADuB,EAEvB,eACE,EADF,EAEE;AACEC,IAAAA,OAAO,EAAEd,YADX;AAEEe,IAAAA,IAAI,EAAEb;AAFR,GAFF,EAMEI,KANF,CAFuB,EAUvBP,mBAAmB,CAACF,eAAe,CAACC,UAAD,CAAhB,CAVI,CAAzB;AAaA,SAAOuB,KAAP;AACD","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport ReduxThunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nconst initialState = {\r\n  count: 0,\r\n}\r\n\r\nconst userInitialState = {\r\n  username: 'jokcy',\r\n}\r\n\r\nconst ADD = 'ADD'\r\nfunction counterReducer(state = initialState, action) {\r\n  // console.log(state, action)\r\n  switch (action.type) {\r\n    case ADD:\r\n      return { count: state.count + (action.num || 1) }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst UPDATE_USERNAME = 'UPDATE_USERNAME'\r\nfunction userReducer(state = userInitialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_USERNAME:\r\n      return {\r\n        ...state,\r\n        username: action.name,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst allReducers = combineReducers({\r\n  counter: counterReducer,\r\n  user: userReducer,\r\n})\r\n\r\n// action creatore\r\nexport function add(num) {\r\n  return {\r\n    type: ADD,\r\n    num,\r\n  }\r\n}\r\n\r\nfunction addAsync(num) {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(add(num))\r\n    }, 1000)\r\n  }\r\n}\r\n\r\n//export一个创建store的函数，每次生成的store都是新的\r\nexport default function initializeStore(state) {\r\n  const store = createStore(\r\n    allReducers,\r\n    Object.assign(\r\n      {},\r\n      {\r\n        counter: initialState,\r\n        user: userInitialState,\r\n      },\r\n      state,\r\n    ),\r\n    composeWithDevTools(applyMiddleware(ReduxThunk)),\r\n  )\r\n\r\n  return store\r\n}"]},"metadata":{},"sourceType":"module"}