{"ast":null,"code":"import _Spin from \"antd/lib/spin\";\nimport _Avatar from \"antd/lib/avatar\";\nimport _Button from \"antd/lib/button\";\nimport _Select from \"antd/lib/select\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport withRepoBasic from '../../components/with-repo-basic';\nimport api from '../../lib/api';\nimport { useState, useCallback } from 'react';\nimport Markdown from '../../components/Markdown';\nimport moment from 'moment';\nimport SearchUser from '../../components/SearchUser';\nconst {\n  Option\n} = _Select;\n\nfunction makeQueryStr(creator, state, labels) {\n  let creatorStr = creator ? `creator=${creator}` : '';\n  let stateStr = state ? `state=${state}` : '';\n  let labelStr = '';\n\n  if (labels && labels.length > 0) {\n    labelStr = `labels=${labels.join(',')}`;\n  }\n\n  const arr = [];\n  creatorStr && arr.push(creatorStr);\n  stateStr && arr.push(stateStr);\n  labelStr && arr.push(labelStr);\n  return `?${arr.join('&')}`;\n}\n\nfunction IssueDetail({\n  issue\n}) {\n  return __jsx(\"div\", {\n    className: \"jsx-1165504298\" + \" \" + \"root\"\n  }, __jsx(Markdown, {\n    content: issue.body\n  }), __jsx(\"div\", {\n    className: \"jsx-1165504298\" + \" \" + \"actions\"\n  }, __jsx(_Button, {\n    href: issue.html_url,\n    target: \"_blank\"\n  }, \"open issues page\")), __jsx(_JSXStyle, {\n    id: \"1165504298\"\n  }, \".root.jsx-1165504298{background:#fefefe;padding:20px;}.actions.jsx-1165504298{text-align:right;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=D:\\\\\\\\\\u7F16\\u7A0B\\\\\\\\\\u9879\\u76EE\\\\\\\\next\\u9879\\u76EE\\\\\\\\next-github\\\\\\\\pages\\\\\\\\detail\\\\\\\\issues.js */\"));\n}\n\nfunction Label({\n  label\n}) {\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    style: {\n      background: `#${label.color}`\n    },\n    className: \"jsx-408108560\" + \" \" + \"label\"\n  }, label.name), __jsx(_JSXStyle, {\n    id: \"408108560\"\n  }, \".label.jsx-408108560{display:inline-block;line-height:15px;margin-left:10px;padding:0 5px;border-radius:2px;font-size:12px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFznvJbnqItcXOmhueebrlxcbmV4dOmhueebrlxcbmV4dC1naXRodWJcXHBhZ2VzXFxkZXRhaWxcXGlzc3Vlcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3RHdCLEFBRzBDLHFCQUNKLGlCQUNBLGlCQUNILGNBQ0ksa0JBQ0gsZUFDbkIiLCJmaWxlIjoiRDpcXOe8lueoi1xc6aG555uuXFxuZXh06aG555uuXFxuZXh0LWdpdGh1YlxccGFnZXNcXGRldGFpbFxcaXNzdWVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHdpdGhSZXBvQmFzaWMgZnJvbSAnLi4vLi4vY29tcG9uZW50cy93aXRoLXJlcG8tYmFzaWMnXHJcbmltcG9ydCBhcGkgZnJvbSAnLi4vLi4vbGliL2FwaSdcclxuaW1wb3J0IHsgQXZhdGFyLCBCdXR0b24sIFNlbGVjdCwgU3BpbiB9IGZyb20gJ2FudGQnXHJcbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgTWFya2Rvd24gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9NYXJrZG93bidcclxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXHJcbmltcG9ydCBTZWFyY2hVc2VyIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvU2VhcmNoVXNlcidcclxuXHJcbmNvbnN0IHsgT3B0aW9uIH0gPSBTZWxlY3Q7XHJcblxyXG5mdW5jdGlvbiBtYWtlUXVlcnlTdHIoY3JlYXRvciwgc3RhdGUsIGxhYmVscykge1xyXG4gICAgbGV0IGNyZWF0b3JTdHIgPSBjcmVhdG9yID8gYGNyZWF0b3I9JHtjcmVhdG9yfWAgOiAnJztcclxuICAgIGxldCBzdGF0ZVN0ciA9IHN0YXRlID8gYHN0YXRlPSR7c3RhdGV9YCA6ICcnO1xyXG4gICAgbGV0IGxhYmVsU3RyID0gJyc7XHJcbiAgICBpZiAobGFiZWxzICYmIGxhYmVscy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgbGFiZWxTdHIgPSBgbGFiZWxzPSR7bGFiZWxzLmpvaW4oJywnKX1gXHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgYXJyID0gW107XHJcblxyXG4gICAgY3JlYXRvclN0ciAmJiBhcnIucHVzaChjcmVhdG9yU3RyKVxyXG4gICAgc3RhdGVTdHIgJiYgYXJyLnB1c2goc3RhdGVTdHIpXHJcbiAgICBsYWJlbFN0ciAmJiBhcnIucHVzaChsYWJlbFN0cilcclxuXHJcbiAgICByZXR1cm4gYD8ke2Fyci5qb2luKCcmJyl9YFxyXG59XHJcblxyXG5mdW5jdGlvbiBJc3N1ZURldGFpbCh7IGlzc3VlIH0pIHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb290XCI+XHJcbiAgICAgICAgICAgIDxNYXJrZG93biBjb250ZW50PXtpc3N1ZS5ib2R5fSAvPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFjdGlvbnNcIj5cclxuICAgICAgICAgICAgICAgIDxCdXR0b24gaHJlZj17aXNzdWUuaHRtbF91cmx9IHRhcmdldD1cIl9ibGFua1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIG9wZW4gaXNzdWVzIHBhZ2VcclxuICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgICAgICAgICAgLnJvb3Qge1xyXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmZWZlZmU7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMjBweDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC5hY3Rpb25zIHtcclxuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH08L3N0eWxlPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgKVxyXG59XHJcblxyXG5cclxuZnVuY3Rpb24gTGFiZWwoeyBsYWJlbCB9KSB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDw+XHJcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImxhYmVsXCIgc3R5bGU9e3sgYmFja2dyb3VuZDogYCMke2xhYmVsLmNvbG9yfWAgfX0+XHJcbiAgICAgICAgICAgICAgICB7bGFiZWwubmFtZX1cclxuICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgICAgICAgICAubGFiZWwge1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMTVweDtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMTBweDtcclxuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAwIDVweDtcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAycHg7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBgfTwvc3R5bGU+XHJcbiAgICAgICAgPC8+XHJcbiAgICApXHJcbn1cclxuXHJcbmZ1bmN0aW9uIElzc3VlSXRlbSh7IGlzc3VlIH0pIHtcclxuICAgIGNvbnN0IFtzaG93RGV0YWlsLCBzZXRTaG93RGV0YWlsXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuXHJcbiAgICBjb25zdCB0b2dnbGVTaG93RGV0YWlsID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgICAgIHNldFNob3dEZXRhaWwocHJlID0+ICFwcmUpXHJcbiAgICB9LCBbXSlcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDw+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaXNzdWVcIj5cclxuICAgICAgICAgICAgICAgIDxCdXR0b25cclxuICAgICAgICAgICAgICAgICAgICB0eXBlPVwicHJpbWFyeVwiXHJcbiAgICAgICAgICAgICAgICAgICAgc2l6ZT1cInNtYWxsXCJcclxuICAgICAgICAgICAgICAgICAgICBzdHlsZT17eyBwb3NpdGlvbjogJ2Fic29sdXRlJywgcmlnaHQ6IDEwLCB0b3A6IDEwIH19XHJcbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17dG9nZ2xlU2hvd0RldGFpbH1cclxuICAgICAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICAgICAgICB7c2hvd0RldGFpbCA/ICdoaWRlJyA6ICdkaXNwbGF5J31cclxuICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJhdmF0YXJcIj5cclxuICAgICAgICAgICAgICAgICAgICA8QXZhdGFyXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNyYz17aXNzdWUudXNlci5hdmF0YXJfdXJsfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzaGFwZT1cInNxdWFyZVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNpemU9ezUwfVxyXG4gICAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWFpbi1pbmZvXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGg2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj57aXNzdWUudGl0bGV9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7aXNzdWUubGFiZWxzLm1hcChsYWJlbCA9PiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8TGFiZWwgbGFiZWw9e2xhYmVsfSBrZXk9e2xhYmVsLmlkfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICApKX1cclxuICAgICAgICAgICAgICAgICAgICA8L2g2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInN1Yi1pbmZvXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlVwZGF0ZWQgYXQge21vbWVudChpc3N1ZS51cGRhdGVkX2F0KS5mb3JtYXQoXCJMTFwiKX08L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9wPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgICAgICAgICAuaXNzdWUge1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICAgICAgICAgICAgICB9ICAgIFxyXG4gICAgICAgICAgICAgICAgLmlzc3VlOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmFmYWZhO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgLmlzc3VlICsgLmlzc3VlIHtcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgI2RkZDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC5tYWluLWluZm8gPiBoNiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWF4LXdpZHRoOiA2MDBweDtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDogNDBweDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC5hdmF0YXIge1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMjBweDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC5zdWItaW5mbyB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC5zdWItaW5mbyA+IHNwYW4gKyBzcGFuIHtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDIwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBgfTwvc3R5bGU+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICB7c2hvd0RldGFpbCA/IDxJc3N1ZURldGFpbCBpc3N1ZT17aXNzdWV9IC8+IDogbnVsbH1cclxuICAgICAgICA8Lz5cclxuICAgIClcclxufVxyXG5cclxuXHJcbmZ1bmN0aW9uIElzc3Vlcyh7IGluaXRJc3N1ZXMsIGxhYmVscywgb3duZXIsIG5hbWUgfSkge1xyXG4gICAgY29uc3QgW2NyZWF0b3IsIHNldENyZWF0b3JdID0gdXNlU3RhdGUoKTtcclxuICAgIGNvbnN0IFtzdGF0ZSwgc2V0U3RhdGVdID0gdXNlU3RhdGUoKTtcclxuICAgIGNvbnN0IFtsYWJlbCwgc2V0TGFiZWxdID0gdXNlU3RhdGUoKTtcclxuICAgIGNvbnN0IFtpc3N1ZXMsIHNldElzc3Vlc10gPSB1c2VTdGF0ZShpbml0SXNzdWVzKTtcclxuICAgIGNvbnN0IFtmZXRjaGluZywgc2V0RmV0Y2hpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xyXG5cclxuICAgIGNvbnN0IGhhbmRsZUNyZWF0b3JDaGFuZ2UgPSB1c2VDYWxsYmFjaygodmFsdWUpID0+IHtcclxuICAgICAgICBzZXRDcmVhdG9yKHZhbHVlKVxyXG4gICAgfSwgW10pXHJcbiAgICBjb25zdCBoYW5kbGVTdGF0ZUNoYW5nZSA9IHVzZUNhbGxiYWNrKCh2YWx1ZSkgPT4ge1xyXG4gICAgICAgIHNldFN0YXRlKHZhbHVlKVxyXG4gICAgfSwgW10pXHJcbiAgICBjb25zdCBoYW5kbGVMYWJlbENoYW5nZSA9IHVzZUNhbGxiYWNrKCh2YWx1ZSkgPT4ge1xyXG4gICAgICAgIHNldExhYmVsKHZhbHVlKVxyXG4gICAgfSwgW10pXHJcbiAgICBjb25zdCBoYW5kbGVTZWFyY2ggPSB1c2VDYWxsYmFjaygoKSA9PiB7XHJcbiAgICAgICAgc2V0RmV0Y2hpbmcodHJ1ZSk7XHJcbiAgICAgICAgYXBpLnJlcXVlc3Qoe1xyXG4gICAgICAgICAgICB1cmw6IGAvcmVwb3MvJHtvd25lcn0vJHtuYW1lfS9pc3N1ZXMke21ha2VRdWVyeVN0cihjcmVhdG9yLCBzdGF0ZSwgbGFiZWwpfWBcclxuICAgICAgICB9KVxyXG4gICAgICAgICAgICAudGhlbihyZXNwID0+IHtcclxuICAgICAgICAgICAgICAgIHNldElzc3VlcyhyZXNwLmRhdGEpO1xyXG4gICAgICAgICAgICAgICAgc2V0RmV0Y2hpbmcoZmFsc2UpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgfSwgW293bmVyLCBuYW1lLCBjcmVhdG9yLCBzdGF0ZSwgbGFiZWxdKVxyXG5cclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb290XCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2VhcmNoXCI+XHJcbiAgICAgICAgICAgICAgICA8U2VhcmNoVXNlclxyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlPXtjcmVhdG9yfVxyXG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVDcmVhdG9yQ2hhbmdlfVxyXG4gICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgIDxTZWxlY3RcclxuICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cInN0YXRlXCJcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17c3RhdGV9XHJcbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZVN0YXRlQ2hhbmdlfVxyXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7IHdpZHRoOiAxNTAsIG1hcmdpbkxlZnQ6IDEwIH19XHJcbiAgICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICAgICAgPE9wdGlvbiB2YWx1ZT1cImFsbFwiPmFsbDwvT3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxPcHRpb24gdmFsdWU9XCJvcGVuXCI+b3BlbjwvT3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxPcHRpb24gdmFsdWU9XCJjbG9zZWRcIj5jbG9zZWQ8L09wdGlvbj5cclxuICAgICAgICAgICAgICAgIDwvU2VsZWN0PlxyXG4gICAgICAgICAgICAgICAgPFNlbGVjdFxyXG4gICAgICAgICAgICAgICAgICAgIG1vZGU9XCJtdWx0aXBsZVwiXHJcbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJsYWJlbFwiXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU9e2xhYmVsfVxyXG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVMYWJlbENoYW5nZX1cclxuICAgICAgICAgICAgICAgICAgICBzdHlsZT17eyB3aWR0aDogMTUwLCBtYXJnaW5MZWZ0OiAxMCwgZmxleEdyb3c6IDEgfX1cclxuICAgICAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVscy5tYXAobGFiZWwgPT4gKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPE9wdGlvbiB2YWx1ZT17bGFiZWwubmFtZX0ga2V5PXtsYWJlbC5pZH0+e2xhYmVsLm5hbWV9PC9PcHRpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICkpXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgPC9TZWxlY3Q+XHJcbiAgICAgICAgICAgICAgICA8QnV0dG9uXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cInByaW1hcnlcIlxyXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZVNlYXJjaH1cclxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17ZmV0Y2hpbmd9XHJcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3sgbWFyZ2luTGVmdDogMTAgfX1cclxuICAgICAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICAgICAgICBzZWFyY2hcclxuICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpc3N1ZXNcIj5cclxuICAgICAgICAgICAgICAgIDxTcGluIHNwaW5uaW5nPXtmZXRjaGluZ30+XHJcbiAgICAgICAgICAgICAgICAgICAge2lzc3Vlcy5tYXAoaXNzdWUgPT4gPElzc3VlSXRlbSBrZXk9e2lzc3VlLmlkfSBpc3N1ZT17aXNzdWV9IC8+KX1cclxuICAgICAgICAgICAgICAgIDwvU3Bpbj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAgICAgICAgIC5zZWFyY2gge1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAuaXNzdWVzIHtcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZWVlO1xyXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDIwcHggMDtcclxuICAgICAgICAgICAgICAgIH0gICAgXHJcbiAgICAgICAgICAgIGB9PC9zdHlsZT5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIClcclxufVxyXG5cclxuSXNzdWVzLmdldEluaXRpYWxQcm9wcyA9IGFzeW5jICh7IHF1ZXJ5LCByZXEsIHJlcyB9KSA9PiB7XHJcbiAgICBjb25zdCB7IG93bmVyLCBuYW1lIH0gPSBxdWVyeTtcclxuXHJcbiAgICBjb25zdCBpc3N1ZXNSZXNwID0gYXdhaXQgYXBpLnJlcXVlc3Qoe1xyXG4gICAgICAgIHVybDogYC9yZXBvcy8ke293bmVyfS8ke25hbWV9L2lzc3Vlc2BcclxuICAgIH0sIHJlcSwgcmVzKTtcclxuICAgIGNvbnN0IGxhYmVsc1Jlc3AgPSBhd2FpdCBhcGkucmVxdWVzdCh7XHJcbiAgICAgICAgdXJsOiBgL3JlcG9zLyR7b3duZXJ9LyR7bmFtZX0vbGFiZWxzYFxyXG4gICAgfSwgcmVxLCByZXMpO1xyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgaW5pdElzc3VlczogaXNzdWVzUmVzcC5kYXRhLFxyXG4gICAgICAgIGxhYmVsczogbGFiZWxzUmVzcC5kYXRhLFxyXG4gICAgICAgIG93bmVyOiBvd25lcixcclxuICAgICAgICBuYW1lOiBuYW1lXHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHdpdGhSZXBvQmFzaWMoSXNzdWVzKSJdfQ== */\\n/*@ sourceURL=D:\\\\\\\\\\u7F16\\u7A0B\\\\\\\\\\u9879\\u76EE\\\\\\\\next\\u9879\\u76EE\\\\\\\\next-github\\\\\\\\pages\\\\\\\\detail\\\\\\\\issues.js */\"));\n}\n\nfunction IssueItem({\n  issue\n}) {\n  const {\n    0: showDetail,\n    1: setShowDetail\n  } = useState(false);\n  const toggleShowDetail = useCallback(() => {\n    setShowDetail(pre => !pre);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-3738033231\" + \" \" + \"issue\"\n  }, __jsx(_Button, {\n    type: \"primary\",\n    size: \"small\",\n    style: {\n      position: 'absolute',\n      right: 10,\n      top: 10\n    },\n    onClick: toggleShowDetail\n  }, showDetail ? 'hide' : 'display'), __jsx(\"div\", {\n    className: \"jsx-3738033231\" + \" \" + \"avatar\"\n  }, __jsx(_Avatar, {\n    src: issue.user.avatar_url,\n    shape: \"square\",\n    size: 50\n  })), __jsx(\"div\", {\n    className: \"jsx-3738033231\" + \" \" + \"main-info\"\n  }, __jsx(\"h6\", {\n    className: \"jsx-3738033231\"\n  }, __jsx(\"span\", {\n    className: \"jsx-3738033231\"\n  }, issue.title), issue.labels.map(label => __jsx(Label, {\n    label: label,\n    key: label.id\n  }))), __jsx(\"p\", {\n    className: \"jsx-3738033231\" + \" \" + \"sub-info\"\n  }, __jsx(\"span\", {\n    className: \"jsx-3738033231\"\n  }, \"Updated at \", moment(issue.updated_at).format(\"LL\")))), __jsx(_JSXStyle, {\n    id: \"3738033231\"\n  }, \".issue.jsx-3738033231{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;position:relative;padding:10px;}.issue.jsx-3738033231:hover{background:#fafafa;}.issue.jsx-3738033231+.issue.jsx-3738033231{border-top:1px solid #ddd;}.main-info.jsx-3738033231>h6.jsx-3738033231{max-width:600px;font-size:16px;padding-right:40px;}.avatar.jsx-3738033231{margin-right:20px;}.sub-info.jsx-3738033231{margin-bottom:0;}.sub-info.jsx-3738033231>span.jsx-3738033231+span.jsx-3738033231{display:inline-block;margin-left:20px;font-size:12px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=D:\\\\\\\\\\u7F16\\u7A0B\\\\\\\\\\u9879\\u76EE\\\\\\\\next\\u9879\\u76EE\\\\\\\\next-github\\\\\\\\pages\\\\\\\\detail\\\\\\\\issues.js */\")), showDetail ? __jsx(IssueDetail, {\n    issue: issue\n  }) : null);\n}\n\nfunction Issues({\n  initIssues,\n  labels,\n  owner,\n  name\n}) {\n  const {\n    0: creator,\n    1: setCreator\n  } = useState();\n  const {\n    0: state,\n    1: setState\n  } = useState();\n  const {\n    0: label,\n    1: setLabel\n  } = useState();\n  const {\n    0: issues,\n    1: setIssues\n  } = useState(initIssues);\n  const {\n    0: fetching,\n    1: setFetching\n  } = useState(false);\n  const handleCreatorChange = useCallback(value => {\n    setCreator(value);\n  }, []);\n  const handleStateChange = useCallback(value => {\n    setState(value);\n  }, []);\n  const handleLabelChange = useCallback(value => {\n    setLabel(value);\n  }, []);\n  const handleSearch = useCallback(() => {\n    setFetching(true);\n    api.request({\n      url: `/repos/${owner}/${name}/issues${makeQueryStr(creator, state, label)}`\n    }).then(resp => {\n      setIssues(resp.data);\n      setFetching(false);\n    });\n  }, [owner, name, creator, state, label]);\n  return __jsx(\"div\", {\n    className: \"jsx-3822302857\" + \" \" + \"root\"\n  }, __jsx(\"div\", {\n    className: \"jsx-3822302857\" + \" \" + \"search\"\n  }, __jsx(SearchUser, {\n    value: creator,\n    onChange: handleCreatorChange\n  }), __jsx(_Select, {\n    placeholder: \"state\",\n    value: state,\n    onChange: handleStateChange,\n    style: {\n      width: 150,\n      marginLeft: 10\n    }\n  }, __jsx(Option, {\n    value: \"all\"\n  }, \"all\"), __jsx(Option, {\n    value: \"open\"\n  }, \"open\"), __jsx(Option, {\n    value: \"closed\"\n  }, \"closed\")), __jsx(_Select, {\n    mode: \"multiple\",\n    placeholder: \"label\",\n    value: label,\n    onChange: handleLabelChange,\n    style: {\n      width: 150,\n      marginLeft: 10,\n      flexGrow: 1\n    }\n  }, labels.map(label => __jsx(Option, {\n    value: label.name,\n    key: label.id\n  }, label.name))), __jsx(_Button, {\n    type: \"primary\",\n    onClick: handleSearch,\n    disabled: fetching,\n    style: {\n      marginLeft: 10\n    }\n  }, \"search\")), __jsx(\"div\", {\n    className: \"jsx-3822302857\" + \" \" + \"issues\"\n  }, __jsx(_Spin, {\n    spinning: fetching\n  }, issues.map(issue => __jsx(IssueItem, {\n    key: issue.id,\n    issue: issue\n  })))), __jsx(_JSXStyle, {\n    id: \"3822302857\"\n  }, \".search.jsx-3822302857{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.issues.jsx-3822302857{border:1px solid #eee;border-radius:5px;margin:20px 0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=D:\\\\\\\\\\u7F16\\u7A0B\\\\\\\\\\u9879\\u76EE\\\\\\\\next\\u9879\\u76EE\\\\\\\\next-github\\\\\\\\pages\\\\\\\\detail\\\\\\\\issues.js */\"));\n}\n\nIssues.getInitialProps = async ({\n  query,\n  req,\n  res\n}) => {\n  const {\n    owner,\n    name\n  } = query;\n  const issuesResp = await api.request({\n    url: `/repos/${owner}/${name}/issues`\n  }, req, res);\n  const labelsResp = await api.request({\n    url: `/repos/${owner}/${name}/labels`\n  }, req, res);\n  return {\n    initIssues: issuesResp.data,\n    labels: labelsResp.data,\n    owner: owner,\n    name: name\n  };\n};\n\nexport default withRepoBasic(Issues);","map":{"version":3,"sources":["D:/编程/项目/next项目/next-github/pages/detail/issues.js"],"names":["withRepoBasic","api","useState","useCallback","Markdown","moment","SearchUser","Option","makeQueryStr","creator","state","labels","creatorStr","stateStr","labelStr","length","join","arr","push","IssueDetail","issue","body","html_url","Label","label","background","color","name","IssueItem","showDetail","setShowDetail","toggleShowDetail","pre","position","right","top","user","avatar_url","title","map","id","updated_at","format","Issues","initIssues","owner","setCreator","setState","setLabel","issues","setIssues","fetching","setFetching","handleCreatorChange","value","handleStateChange","handleLabelChange","handleSearch","request","url","then","resp","data","width","marginLeft","flexGrow","getInitialProps","query","req","res","issuesResp","labelsResp"],"mappings":"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","sourcesContent":["import withRepoBasic from '../../components/with-repo-basic'\r\nimport api from '../../lib/api'\r\nimport { Avatar, Button, Select, Spin } from 'antd'\r\nimport { useState, useCallback } from 'react'\r\nimport Markdown from '../../components/Markdown'\r\nimport moment from 'moment'\r\nimport SearchUser from '../../components/SearchUser'\r\n\r\nconst { Option } = Select;\r\n\r\nfunction makeQueryStr(creator, state, labels) {\r\n    let creatorStr = creator ? `creator=${creator}` : '';\r\n    let stateStr = state ? `state=${state}` : '';\r\n    let labelStr = '';\r\n    if (labels && labels.length > 0) {\r\n        labelStr = `labels=${labels.join(',')}`\r\n    }\r\n\r\n    const arr = [];\r\n\r\n    creatorStr && arr.push(creatorStr)\r\n    stateStr && arr.push(stateStr)\r\n    labelStr && arr.push(labelStr)\r\n\r\n    return `?${arr.join('&')}`\r\n}\r\n\r\nfunction IssueDetail({ issue }) {\r\n    return (\r\n        <div className=\"root\">\r\n            <Markdown content={issue.body} />\r\n            <div className=\"actions\">\r\n                <Button href={issue.html_url} target=\"_blank\">\r\n                    open issues page\r\n                </Button>\r\n            </div>\r\n            <style jsx>{`\r\n                .root {\r\n                    background: #fefefe;\r\n                    padding: 20px;\r\n                }\r\n                .actions {\r\n                    text-align: right;\r\n                }\r\n            `}</style>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction Label({ label }) {\r\n    return (\r\n        <>\r\n            <span className=\"label\" style={{ background: `#${label.color}` }}>\r\n                {label.name}\r\n            </span>\r\n            <style jsx>{`\r\n                .label {\r\n                    display: inline-block;\r\n                    line-height: 15px;\r\n                    margin-left: 10px;\r\n                    padding: 0 5px;\r\n                    border-radius: 2px;\r\n                    font-size: 12px;\r\n                }\r\n            `}</style>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction IssueItem({ issue }) {\r\n    const [showDetail, setShowDetail] = useState(false);\r\n\r\n    const toggleShowDetail = useCallback(() => {\r\n        setShowDetail(pre => !pre)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"issue\">\r\n                <Button\r\n                    type=\"primary\"\r\n                    size=\"small\"\r\n                    style={{ position: 'absolute', right: 10, top: 10 }}\r\n                    onClick={toggleShowDetail}\r\n                >\r\n                    {showDetail ? 'hide' : 'display'}\r\n                </Button>\r\n                <div className=\"avatar\">\r\n                    <Avatar\r\n                        src={issue.user.avatar_url}\r\n                        shape=\"square\"\r\n                        size={50}\r\n                    />\r\n                </div>\r\n                <div className=\"main-info\">\r\n                    <h6>\r\n                        <span>{issue.title}</span>\r\n                        {issue.labels.map(label => (\r\n                            <Label label={label} key={label.id} />\r\n                        ))}\r\n                    </h6>\r\n                    <p className=\"sub-info\">\r\n                        <span>Updated at {moment(issue.updated_at).format(\"LL\")}</span>\r\n                    </p>\r\n                </div>\r\n                <style jsx>{`\r\n                .issue {\r\n                    display: flex;\r\n                    position: relative;\r\n                    padding: 10px;\r\n                }    \r\n                .issue:hover {\r\n                    background: #fafafa;\r\n                }\r\n                .issue + .issue {\r\n                    border-top: 1px solid #ddd;\r\n                }\r\n                .main-info > h6 {\r\n                    max-width: 600px;\r\n                    font-size: 16px;\r\n                    padding-right: 40px;\r\n                }\r\n                .avatar {\r\n                    margin-right: 20px;\r\n                }\r\n                .sub-info {\r\n                    margin-bottom: 0;\r\n                }\r\n                .sub-info > span + span {\r\n                    display: inline-block;\r\n                    margin-left: 20px;\r\n                    font-size: 12px;\r\n                }\r\n            `}</style>\r\n            </div>\r\n            {showDetail ? <IssueDetail issue={issue} /> : null}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nfunction Issues({ initIssues, labels, owner, name }) {\r\n    const [creator, setCreator] = useState();\r\n    const [state, setState] = useState();\r\n    const [label, setLabel] = useState();\r\n    const [issues, setIssues] = useState(initIssues);\r\n    const [fetching, setFetching] = useState(false);\r\n\r\n    const handleCreatorChange = useCallback((value) => {\r\n        setCreator(value)\r\n    }, [])\r\n    const handleStateChange = useCallback((value) => {\r\n        setState(value)\r\n    }, [])\r\n    const handleLabelChange = useCallback((value) => {\r\n        setLabel(value)\r\n    }, [])\r\n    const handleSearch = useCallback(() => {\r\n        setFetching(true);\r\n        api.request({\r\n            url: `/repos/${owner}/${name}/issues${makeQueryStr(creator, state, label)}`\r\n        })\r\n            .then(resp => {\r\n                setIssues(resp.data);\r\n                setFetching(false);\r\n            })\r\n    }, [owner, name, creator, state, label])\r\n\r\n    return (\r\n        <div className=\"root\">\r\n            <div className=\"search\">\r\n                <SearchUser\r\n                    value={creator}\r\n                    onChange={handleCreatorChange}\r\n                />\r\n                <Select\r\n                    placeholder=\"state\"\r\n                    value={state}\r\n                    onChange={handleStateChange}\r\n                    style={{ width: 150, marginLeft: 10 }}\r\n                >\r\n                    <Option value=\"all\">all</Option>\r\n                    <Option value=\"open\">open</Option>\r\n                    <Option value=\"closed\">closed</Option>\r\n                </Select>\r\n                <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"label\"\r\n                    value={label}\r\n                    onChange={handleLabelChange}\r\n                    style={{ width: 150, marginLeft: 10, flexGrow: 1 }}\r\n                >\r\n                    {\r\n                        labels.map(label => (\r\n                            <Option value={label.name} key={label.id}>{label.name}</Option>\r\n                        ))\r\n                    }\r\n                </Select>\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={handleSearch}\r\n                    disabled={fetching}\r\n                    style={{ marginLeft: 10 }}\r\n                >\r\n                    search\r\n                </Button>\r\n            </div>\r\n            <div className=\"issues\">\r\n                <Spin spinning={fetching}>\r\n                    {issues.map(issue => <IssueItem key={issue.id} issue={issue} />)}\r\n                </Spin>\r\n            </div>\r\n            <style jsx>{`\r\n                .search {\r\n                    display: flex;\r\n                }\r\n                .issues {\r\n                    border: 1px solid #eee;\r\n                    border-radius: 5px;\r\n                    margin: 20px 0;\r\n                }    \r\n            `}</style>\r\n        </div>\r\n    )\r\n}\r\n\r\nIssues.getInitialProps = async ({ query, req, res }) => {\r\n    const { owner, name } = query;\r\n\r\n    const issuesResp = await api.request({\r\n        url: `/repos/${owner}/${name}/issues`\r\n    }, req, res);\r\n    const labelsResp = await api.request({\r\n        url: `/repos/${owner}/${name}/labels`\r\n    }, req, res);\r\n\r\n    return {\r\n        initIssues: issuesResp.data,\r\n        labels: labelsResp.data,\r\n        owner: owner,\r\n        name: name\r\n    }\r\n}\r\n\r\nexport default withRepoBasic(Issues)"]},"metadata":{},"sourceType":"module"}