{"ast":null,"code":"import _Row from \"antd/lib/row\";\nimport _Pagination from \"antd/lib/pagination\";\nimport _Statistic from \"antd/lib/statistic\";\nimport _Col from \"antd/lib/col\";\nimport _List from \"antd/lib/list\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useRouter } from 'next/router';\nimport { memo, isValidElement } from 'react';\nimport Link from 'next/link';\nimport Repo from '../components/Repo';\nimport data from '../testData';\n\nconst api = require('../lib/api');\n\nconst LANGUAGES = ['JavaScript', 'TypeScript', 'HTML', 'CSS', 'Java', 'Rust', 'Python'];\nconst SORT_TYPES = [{\n  name: 'Best Match'\n}, {\n  name: 'Most Stars',\n  value: 'stars',\n  order: 'desc'\n}, {\n  name: 'Fewest Stars',\n  value: 'stars',\n  order: 'asc'\n}, {\n  name: 'Most Forks',\n  value: 'forks',\n  order: 'desc'\n}, {\n  name: 'Fewest Forks',\n  value: 'forks',\n  order: 'asc'\n}];\nconst per_page = 20;\nconst selectedItemStyle = {\n  borderLeft: '2px solid #e36209',\n  fontWeight: 100\n};\nconst initRepos = {\n  total_count: 0,\n  items: []\n};\n\nfunction noop() {}\n\nconst FilterLink = memo(({\n  name,\n  q,\n  lang,\n  sort,\n  order,\n  page\n}) => {\n  let queryString = `?q=${q}`;\n  lang && (queryString += `&lang=${lang}`);\n  sort && (queryString += `&sort=${sort}&order=${order || 'desc'}`);\n  page && (queryString += `&page=${page}`);\n  queryString += `&per_page=${per_page}`;\n  return __jsx(Link, {\n    href: `/search${queryString}`\n  }, isValidElement(name) ? name : __jsx(\"a\", null, name));\n});\nexport default function Search({\n  repos = initRepos\n}) {\n  const router = useRouter();\n  const querys = Object.assign({}, router.query);\n  const {\n    sort,\n    order,\n    lang,\n    page\n  } = router.query;\n  return __jsx(\"div\", {\n    className: \"jsx-2090096643\" + \" \" + \"root\"\n  }, __jsx(_Row, {\n    gutter: 20\n  }, __jsx(_Col, {\n    span: 6\n  }, __jsx(_List, {\n    bordered: true,\n    header: __jsx(\"span\", {\n      className: \"jsx-2090096643\" + \" \" + \"list-header\"\n    }, \"Languages\"),\n    style: {\n      marginBottom: 20\n    },\n    dataSource: LANGUAGES,\n    renderItem: item => {\n      const selected = item === lang;\n      return __jsx(_List.Item, {\n        style: selected ? selectedItemStyle : null\n      }, selected ? __jsx(\"span\", {\n        className: \"jsx-2090096643\"\n      }, item) : __jsx(FilterLink, _extends({}, querys, {\n        lang: item,\n        name: item\n      })));\n    }\n  }), __jsx(_List, {\n    bordered: true,\n    header: __jsx(\"span\", {\n      className: \"jsx-2090096643\" + \" \" + \"list-header\"\n    }, \"Sort By\"),\n    dataSource: SORT_TYPES,\n    renderItem: item => {\n      let selected = false;\n\n      if (item.name === 'Best Match' && !sort) {\n        selected = true;\n      } else if (item.name === sort && item.order === order) {\n        selected = true;\n      }\n\n      return __jsx(_List.Item, {\n        style: selected ? selectedItemStyle : null\n      }, selected ? __jsx(\"span\", {\n        className: \"jsx-2090096643\"\n      }, item.name) : __jsx(FilterLink, _extends({}, querys, {\n        name: item.name,\n        sort: item.value,\n        order: item.order\n      })));\n    }\n  })), __jsx(_Col, {\n    span: 18\n  }, __jsx(\"h3\", {\n    className: \"jsx-2090096643\" + \" \" + \"repos-title\"\n  }, __jsx(_Statistic, {\n    value: repos.total_count\n  }), \" repository results\"), repos.items.map(repo => __jsx(Repo, {\n    repo: repo,\n    key: repo.id\n  })), __jsx(\"div\", {\n    className: \"jsx-2090096643\" + \" \" + \"pagination\"\n  }, __jsx(_Pagination, {\n    pageSize: per_page,\n    current: +page || 1,\n    total: 1000 //github限制返回1000条\n    ,\n    onChange: noop,\n    itemRender: (page, type, ol) => {\n      const p = type === 'page' ? page : type === 'prev' ? page - 1 : page + 1;\n      const name = type === 'page' ? page : ol;\n      return __jsx(FilterLink, _extends({}, querys, {\n        page: p,\n        name: name\n      }));\n    }\n  })))), __jsx(_JSXStyle, {\n    id: \"2090096643\"\n  }, \".root.jsx-2090096643{padding:20px 0;}.repos-title.jsx-2090096643{border-bottom:1px solid #eee;font-size:24px;line-height:50px;}.list-header.jsx-2090096643{font-weight:700;font-size:16px;}.pagination.jsx-2090096643{padding:20px;text-align:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=D:\\\\\\\\\\u7F16\\u7A0B\\\\\\\\\\u9879\\u76EE\\\\\\\\next\\u9879\\u76EE\\\\\\\\next-github\\\\\\\\pages\\\\\\\\search.js */\"));\n}\n\nSearch.getInitialProps = async ({\n  query,\n  req,\n  res\n}) => {\n  console.log('Search getInitialProps called');\n  const {\n    q,\n    sort,\n    lang,\n    order,\n    page\n  } = query;\n\n  if (!q) {\n    return {\n      repos: initRepos\n    };\n  } // ?q=react+language:javascript&sort=stars&order=desc&page=2\n\n\n  let queryString = `?q=${q}`;\n  lang && (queryString += `+language:${lang}`);\n  sort && (queryString += `&sort=${sort}&order=${order || 'desc'}`);\n  page && (queryString += `&page=${page}`);\n  queryString += `&per_page=${per_page}`;\n  const result = await api.request({\n    url: `/search/repositories${queryString}`\n  }, req, res);\n  return {\n    repos: result.data || data.react_repos\n  };\n};","map":{"version":3,"sources":["D:/编程/项目/next项目/next-github/pages/search.js"],"names":["useRouter","memo","isValidElement","Link","Repo","data","api","require","LANGUAGES","SORT_TYPES","name","value","order","per_page","selectedItemStyle","borderLeft","fontWeight","initRepos","total_count","items","noop","FilterLink","q","lang","sort","page","queryString","Search","repos","router","querys","query","marginBottom","item","selected","map","repo","id","type","ol","p","getInitialProps","req","res","console","log","result","request","url","react_repos"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\r\nimport { memo, isValidElement } from 'react'\r\nimport { Row, Col, List, Pagination, Statistic } from 'antd'\r\nimport Link from 'next/link'\r\nimport Repo from '../components/Repo'\r\nimport data from '../testData'\r\nconst api = require('../lib/api')\r\n\r\nconst LANGUAGES = ['JavaScript', 'TypeScript', 'HTML', 'CSS', 'Java', 'Rust', 'Python'];\r\nconst SORT_TYPES = [\r\n  {\r\n    name: 'Best Match',\r\n  },\r\n  {\r\n    name: 'Most Stars',\r\n    value: 'stars',\r\n    order: 'desc',\r\n  },\r\n  {\r\n    name: 'Fewest Stars',\r\n    value: 'stars',\r\n    order: 'asc',\r\n  },\r\n  {\r\n    name: 'Most Forks',\r\n    value: 'forks',\r\n    order: 'desc',\r\n  },\r\n  {\r\n    name: 'Fewest Forks',\r\n    value: 'forks',\r\n    order: 'asc',\r\n  },\r\n];\r\nconst per_page = 20;\r\nconst selectedItemStyle = {\r\n    borderLeft: '2px solid #e36209',\r\n    fontWeight: 100,\r\n  }\r\nconst initRepos = {\r\n    total_count: 0,\r\n    items: []\r\n};\r\nfunction noop() {}\r\n\r\nconst FilterLink = memo(({ name, q, lang, sort, order, page }) => {\r\n    let queryString = `?q=${q}`;\r\n    lang && (queryString += `&lang=${lang}`);\r\n    sort && (queryString += `&sort=${sort}&order=${order || 'desc'}`);\r\n    page && (queryString += `&page=${page}`);\r\n    queryString += `&per_page=${per_page}`;\r\n\r\n    return (\r\n        <Link href={`/search${queryString}`}>\r\n            {isValidElement(name) ? name : <a>{name}</a>}\r\n        </Link>\r\n    )\r\n});\r\n\r\nexport default function Search({ repos = initRepos }) {\r\n    const router = useRouter();\r\n    const { ...querys } = router.query;\r\n    const { sort, order, lang, page } = router.query;\r\n\r\n    return (\r\n        <div className=\"root\">\r\n            <Row gutter={20}>\r\n                <Col span={6}>\r\n                    <List \r\n                        bordered\r\n                        header={<span className=\"list-header\">Languages</span>}\r\n                        style={{ marginBottom: 20 }}\r\n                        dataSource={LANGUAGES}\r\n                        renderItem={item => {\r\n                            const selected = item === lang;\r\n                            return  (\r\n                                <List.Item style={selected ? selectedItemStyle : null}>\r\n                                    {selected ? <span>{item}</span> : \r\n                                        <FilterLink \r\n                                            {...querys}\r\n                                            lang={item}\r\n                                            name={item}\r\n                                        />\r\n                                    }\r\n                                </List.Item>\r\n                        )}}\r\n                    />\r\n\r\n                    <List \r\n                        bordered\r\n                        header={<span className=\"list-header\">Sort By</span>}\r\n                        dataSource={SORT_TYPES}\r\n                        renderItem={item => {\r\n                            let selected = false;\r\n                            if (item.name === 'Best Match' && !sort) {\r\n                                selected = true;\r\n                            } else if (item.name === sort && item.order === order) {\r\n                                selected = true;\r\n                            }\r\n                            return (\r\n                                <List.Item style={selected ? selectedItemStyle : null}>\r\n                                    {selected ? <span>{item.name}</span> : \r\n                                        <FilterLink \r\n                                            {...querys}\r\n                                            name={item.name}\r\n                                            sort={item.value}\r\n                                            order={item.order}\r\n                                        />\r\n                                    }\r\n                                </List.Item>\r\n                        )}}\r\n                    />\r\n                </Col>\r\n                <Col span={18}> \r\n                    <h3 className=\"repos-title\">\r\n                        <Statistic value={repos.total_count}/> repository results\r\n                    </h3>\r\n                    {repos.items.map(repo => (\r\n                        <Repo repo={repo} key={repo.id} />\r\n                    ))}\r\n                    <div className=\"pagination\">\r\n                        <Pagination \r\n                            pageSize={per_page}\r\n                            current={+page || 1}\r\n                            total={1000} //github限制返回1000条\r\n                            onChange={noop}\r\n                            itemRender={(page, type, ol) => {\r\n                                const p = type === 'page' ? page : type === 'prev' ?  page - 1 : page + 1;\r\n                                const name = type === 'page' ? page : ol;\r\n                                return (\r\n                                    <FilterLink \r\n                                        {...querys} \r\n                                        page={p} \r\n                                        name={name} \r\n                                    />\r\n                                )\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <style jsx>{`\r\n                .root {\r\n                    padding: 20px 0;\r\n                }\r\n                .repos-title {\r\n                    border-bottom: 1px solid #eee;\r\n                    font-size: 24px;\r\n                    line-height: 50px;\r\n                }\r\n                .list-header {\r\n                    font-weight: 700;\r\n                    font-size: 16px;\r\n                }\r\n                .pagination {\r\n                    padding: 20px;\r\n                    text-align: center;\r\n                }\r\n            `}</style>\r\n        </div>\r\n    )\r\n}\r\n\r\nSearch.getInitialProps = async ({ query, req, res }) => {\r\n    console.log('Search getInitialProps called')\r\n    const { q, sort, lang, order, page} = query\r\n    if (!q) {\r\n        return {\r\n            repos: initRepos\r\n        }\r\n    }\r\n    // ?q=react+language:javascript&sort=stars&order=desc&page=2\r\n    let queryString = `?q=${q}`;\r\n    lang && (queryString += `+language:${lang}`);\r\n    sort && (queryString += `&sort=${sort}&order=${order || 'desc'}`);\r\n    page && (queryString += `&page=${page}`);\r\n    queryString += `&per_page=${per_page}`;\r\n\r\n    const result = await api.request({\r\n        url: `/search/repositories${queryString}`\r\n    }, req, res)\r\n    \r\n    return {\r\n        repos: result.data || data.react_repos\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}