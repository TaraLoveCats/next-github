{"ast":null,"code":"const axios = require('axios');\n\nconst github_base_url = 'https://api.github.com';\nconst isServer = true; //客户端和服务器端最终调用的方法\n\nasync function requestGithub(method, url, data, headers) {\n  // console.log(method, url, data, headers)\n  try {\n    const result = await axios({\n      method,\n      url: `${github_base_url}${url}`,\n      data,\n      headers\n    });\n\n    if (result.status === 200) {\n      return result;\n    } else {\n      console.log('status not ok');\n      return {\n        data: false,\n        status: result.status\n      };\n    }\n  } catch (err) {\n    console.log('出错了'); // console.error(err)\n\n    return {\n      data: false\n    };\n  }\n}\n\nasync function request({\n  method = 'GET',\n  url,\n  data = {}\n}, req, res) {\n  if (!url) {\n    throw Error('url must be provided');\n  }\n\n  if (isServer) {\n    //是服务端环境直接请求github数据\n    const session = req.session;\n    const githubAuth = session.githubAuth || {};\n    const headers = {};\n    const token = githubAuth && githubAuth.access_token;\n\n    if (token) {\n      headers['Authorization'] = `${githubAuth.token_type} ${token}`;\n    }\n\n    return await requestGithub(method, url, data, headers);\n  } else {\n    //客户端环境使用github api代理（ koa处理server/api ）\n    return await axios({\n      method,\n      url: `/github${url}`,\n      data\n    });\n  }\n}\n\nmodule.exports = {\n  request,\n  requestGithub\n};","map":{"version":3,"sources":["D:/编程/项目/next项目/next-github/lib/api.js"],"names":["axios","require","github_base_url","isServer","requestGithub","method","url","data","headers","result","status","console","log","err","request","req","res","Error","session","githubAuth","token","access_token","token_type","module","exports"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,eAAe,GAAG,wBAAxB;AACA,MAAMC,QAAQ,OAAd,C,CACA;;AACA,eAAeC,aAAf,CAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,EAAgDC,OAAhD,EAAyD;AACrD;AACA,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMT,KAAK,CAAC;AACvBK,MAAAA,MADuB;AAEvBC,MAAAA,GAAG,EAAG,GAAEJ,eAAgB,GAAEI,GAAI,EAFP;AAGvBC,MAAAA,IAHuB;AAIvBC,MAAAA;AAJuB,KAAD,CAA1B;;AAMA,QAAIC,MAAM,CAACC,MAAP,KAAkB,GAAtB,EAA2B;AACvB,aAAOD,MAAP;AACH,KAFD,MAEO;AACHE,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,aAAO;AAAEL,QAAAA,IAAI,EAAE,KAAR;AAAeG,QAAAA,MAAM,EAAED,MAAM,CAACC;AAA9B,OAAP;AACH;AACJ,GAbD,CAaE,OAAOG,GAAP,EAAY;AACVF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EADU,CAEV;;AACA,WAAO;AAAEL,MAAAA,IAAI,EAAE;AAAR,KAAP;AACH;AACJ;;AAED,eAAeO,OAAf,CAAuB;AAAET,EAAAA,MAAM,GAAG,KAAX;AAAkBC,EAAAA,GAAlB;AAAuBC,EAAAA,IAAI,GAAG;AAA9B,CAAvB,EAA0DQ,GAA1D,EAA+DC,GAA/D,EAAoE;AAChE,MAAI,CAACV,GAAL,EAAU;AACN,UAAMW,KAAK,CAAC,sBAAD,CAAX;AACH;;AACD,MAAId,QAAJ,EAAc;AACV;AACA,UAAMe,OAAO,GAAGH,GAAG,CAACG,OAApB;AACA,UAAMC,UAAU,GAAGD,OAAO,CAACC,UAAR,IAAsB,EAAzC;AACA,UAAMX,OAAO,GAAG,EAAhB;AACA,UAAMY,KAAK,GAAGD,UAAU,IAAIA,UAAU,CAACE,YAAvC;;AACA,QAAID,KAAJ,EAAW;AACPZ,MAAAA,OAAO,CAAC,eAAD,CAAP,GAA4B,GAAEW,UAAU,CAACG,UAAW,IAAGF,KAAM,EAA7D;AACH;;AACD,WAAO,MAAMhB,aAAa,CAACC,MAAD,EAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,CAA1B;AAEH,GAXD,MAWO;AACH;AACA,WAAO,MAAMR,KAAK,CAAC;AACfK,MAAAA,MADe;AAEfC,MAAAA,GAAG,EAAG,UAASA,GAAI,EAFJ;AAGfC,MAAAA;AAHe,KAAD,CAAlB;AAKH;AACJ;;AAEDgB,MAAM,CAACC,OAAP,GAAiB;AACbV,EAAAA,OADa;AAEbV,EAAAA;AAFa,CAAjB","sourcesContent":["const axios = require('axios')\r\n\r\nconst github_base_url = 'https://api.github.com'\r\nconst isServer = typeof window === 'undefined'\r\n//客户端和服务器端最终调用的方法\r\nasync function requestGithub(method, url, data, headers) {\r\n    // console.log(method, url, data, headers)\r\n    try {\r\n        const result = await axios({\r\n            method,\r\n            url: `${github_base_url}${url}`,\r\n            data,\r\n            headers\r\n        })\r\n        if (result.status === 200) {\r\n            return result\r\n        } else {\r\n            console.log('status not ok')\r\n            return { data: false, status: result.status }\r\n        }\r\n    } catch (err) {\r\n        console.log('出错了')\r\n        // console.error(err)\r\n        return { data: false }\r\n    }\r\n}\r\n\r\nasync function request({ method = 'GET', url, data = {}}, req, res) {\r\n    if (!url) {\r\n        throw Error('url must be provided')\r\n    }\r\n    if (isServer) {\r\n        //是服务端环境直接请求github数据\r\n        const session = req.session\r\n        const githubAuth = session.githubAuth || {}\r\n        const headers = {}\r\n        const token = githubAuth && githubAuth.access_token\r\n        if (token) {\r\n            headers['Authorization'] = `${githubAuth.token_type} ${token}`\r\n        }\r\n        return await requestGithub(method, url, data, headers)\r\n\r\n    } else {\r\n        //客户端环境使用github api代理（ koa处理server/api ）\r\n        return await axios({\r\n            method,\r\n            url: `/github${url}`,\r\n            data\r\n        })\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    request,\r\n    requestGithub\r\n}"]},"metadata":{},"sourceType":"script"}