{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Row from \"antd/lib/row\";\nimport _Pagination from \"antd/lib/pagination\";\nimport _Col from \"antd/lib/col\";\nimport _List from \"antd/lib/list\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport { memo, isValidElement } from 'react';\nimport Link from 'next/link';\nimport Repo from '../components/Repo';\nimport data from '../testData';\n\nvar api = require('../lib/api');\n\nvar LANGUAGES = ['JavaScript', 'TypeScript', 'HTML', 'CSS', 'Java', 'Rust', 'Python'];\nvar SORT_TYPES = [{\n  name: 'Best Match'\n}, {\n  name: 'Most Stars',\n  value: 'stars',\n  order: 'desc'\n}, {\n  name: 'Fewest Stars',\n  value: 'stars',\n  order: 'asc'\n}, {\n  name: 'Most Forks',\n  value: 'forks',\n  order: 'desc'\n}, {\n  name: 'Fewest Forks',\n  value: 'forks',\n  order: 'asc'\n}];\nvar per_page = 20;\nvar selectedItemStyle = {\n  borderLeft: '2px solid #e36209',\n  fontWeight: 100\n};\nvar initRepos = {\n  total_count: 0,\n  items: []\n};\n\nfunction noop() {}\n\nvar FilterLink = memo(function (_ref) {\n  var name = _ref.name,\n      query = _ref.query,\n      lang = _ref.lang,\n      sort = _ref.sort,\n      order = _ref.order,\n      page = _ref.page;\n  var queryString = \"?query=\".concat(query);\n  lang && (queryString += \"&lang=\".concat(lang));\n  sort && (queryString += \"&sort=\".concat(sort, \"&order=\").concat(order || 'desc'));\n  page && (queryString += \"&page=\".concat(page));\n  queryString += \"&per_page=\".concat(per_page); // console.log(name)\n\n  return __jsx(Link, {\n    href: \"/search\".concat(queryString)\n  }, isValidElement(name) ? name : __jsx(\"a\", null, name));\n});\nexport default function Search(_ref2) {\n  var _ref2$repos = _ref2.repos,\n      repos = _ref2$repos === void 0 ? initRepos : _ref2$repos;\n  var router = useRouter();\n\n  var querys = _extends({}, router.query);\n\n  var _router$query = router.query,\n      sort = _router$query.sort,\n      order = _router$query.order,\n      lang = _router$query.lang,\n      page = _router$query.page;\n  return __jsx(React.Fragment, null, __jsx(_Row, {\n    gutter: 20\n  }, __jsx(_Col, {\n    span: 6\n  }, __jsx(_List, {\n    bordered: true,\n    header: __jsx(\"span\", {\n      className: \"jsx-2828073651\" + \" \" + \"list-header\"\n    }, \"Languages\"),\n    style: {\n      marginBottom: 20\n    },\n    dataSource: LANGUAGES,\n    renderItem: function renderItem(item) {\n      var selected = item === lang;\n      return __jsx(_List.Item, {\n        style: selected ? selectedItemStyle : null\n      }, selected ? __jsx(\"span\", {\n        className: \"jsx-2828073651\"\n      }, item) : __jsx(FilterLink, _extends({}, querys, {\n        lang: lang,\n        name: item\n      })));\n    }\n  }), __jsx(_List, {\n    bordered: true,\n    header: __jsx(\"span\", {\n      className: \"jsx-2828073651\" + \" \" + \"list-header\"\n    }, \"Sort By\"),\n    dataSource: SORT_TYPES,\n    renderItem: function renderItem(item) {\n      var selected;\n\n      if (item.name === 'Best Match' && !sort) {\n        selected = true;\n      } else if (item.name === sort && item.order === order) {\n        selected = true;\n      }\n\n      return __jsx(_List.Item, {\n        style: selected ? selectedItemStyle : null\n      }, selected ? __jsx(\"span\", {\n        className: \"jsx-2828073651\"\n      }, item.name) : __jsx(FilterLink, _extends({}, querys, {\n        name: item.name,\n        sort: item.sort,\n        order: item.order\n      })));\n    }\n  })), __jsx(_Col, {\n    span: 18\n  }, __jsx(\"h3\", {\n    className: \"jsx-2828073651\" + \" \" + \"repos-title\"\n  }, repos.total_count, \" \\u4E2A\\u4ED3\\u5E93\"), repos.items.map(function (repo) {\n    return __jsx(Repo, {\n      repo: repo,\n      key: repo.id\n    });\n  }), __jsx(\"div\", {\n    className: \"jsx-2828073651\" + \" \" + \"pagination\"\n  }, __jsx(_Pagination, {\n    pageSize: 30,\n    current: +page || 1,\n    total: repos.total_count,\n    onChange: noop,\n    itemRender: function itemRender(page, type, ol) {\n      var p = type === 'page' ? page : type === 'prev' ? page - 1 : page + 1;\n      var name = type === 'page' ? page : ol;\n      return __jsx(FilterLink, _extends({}, querys, {\n        page: p,\n        name: name\n      }));\n    }\n  })))), __jsx(_JSXStyle, {\n    id: \"2828073651\"\n  }, \".pagination.jsx-2828073651{padding:20px;text-align:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=D:\\\\\\\\\\u7F16\\u7A0B\\\\\\\\\\u9879\\u76EE\\\\\\\\next\\u9879\\u76EE\\\\\\\\next-github\\\\\\\\pages\\\\\\\\search.js */\"));\n}\n\nSearch.getInitialProps = function _callee(_ref3) {\n  var query, req, res, q, sort, lang, order, page, queryString, result;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref3.query, req = _ref3.req, res = _ref3.res;\n          console.log('Search getInitialProps called');\n          q = query.q, sort = query.sort, lang = query.lang, order = query.order, page = query.page;\n\n          if (q) {\n            _context.next = 5;\n            break;\n          }\n\n          return _context.abrupt(\"return\", {\n            repos: initRepos\n          });\n\n        case 5:\n          // ?q=react+language:javascript&sort=stars&order=desc&page=2\n          queryString = \"?q=\".concat(q);\n          lang && (queryString += \"+language:\".concat(lang));\n          sort && (queryString += \"&sort=\".concat(sort, \"&order=\").concat(order || 'desc'));\n          page && (queryString += \"&page=\".concat(page));\n          queryString += \"&per_page=\".concat(per_page);\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(api.request({\n            url: \"/search/repositories\".concat(queryString)\n          }, req, res));\n\n        case 12:\n          result = _context.sent;\n          console.log(result);\n          return _context.abrupt(\"return\", {\n            repos: result.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["D:/编程/项目/next项目/next-github/pages/search.js"],"names":["useRouter","memo","isValidElement","Link","Repo","data","api","require","LANGUAGES","SORT_TYPES","name","value","order","per_page","selectedItemStyle","borderLeft","fontWeight","initRepos","total_count","items","noop","FilterLink","query","lang","sort","page","queryString","Search","repos","router","querys","marginBottom","item","selected","map","repo","id","type","ol","p","getInitialProps","req","res","console","log","q","request","url","result"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\r\nimport { memo, isValidElement } from 'react'\r\nimport { Row, Col, List, Pagination } from 'antd'\r\nimport Link from 'next/link'\r\nimport Repo from '../components/Repo'\r\nimport data from '../testData'\r\nconst api = require('../lib/api')\r\n\r\nconst LANGUAGES = ['JavaScript', 'TypeScript', 'HTML', 'CSS', 'Java', 'Rust', 'Python'];\r\nconst SORT_TYPES = [\r\n  {\r\n    name: 'Best Match',\r\n  },\r\n  {\r\n    name: 'Most Stars',\r\n    value: 'stars',\r\n    order: 'desc',\r\n  },\r\n  {\r\n    name: 'Fewest Stars',\r\n    value: 'stars',\r\n    order: 'asc',\r\n  },\r\n  {\r\n    name: 'Most Forks',\r\n    value: 'forks',\r\n    order: 'desc',\r\n  },\r\n  {\r\n    name: 'Fewest Forks',\r\n    value: 'forks',\r\n    order: 'asc',\r\n  },\r\n];\r\nconst per_page = 20;\r\nconst selectedItemStyle = {\r\n    borderLeft: '2px solid #e36209',\r\n    fontWeight: 100,\r\n  }\r\nconst initRepos = {\r\n    total_count: 0,\r\n    items: []\r\n};\r\nfunction noop() {}\r\nconst FilterLink = memo(({ name, query, lang, sort, order, page }) => {\r\n    let queryString = `?query=${query}`;\r\n    lang && (queryString += `&lang=${lang}`);\r\n    sort && (queryString += `&sort=${sort}&order=${order || 'desc'}`);\r\n    page && (queryString += `&page=${page}`);\r\n    queryString += `&per_page=${per_page}`;\r\n    // console.log(name)\r\n    return (\r\n        <Link href={`/search${queryString}`}>\r\n            {isValidElement(name) ? name : <a>{name}</a>}\r\n        </Link>\r\n    )\r\n});\r\n\r\nexport default function Search({ repos = initRepos }) {\r\n    const router = useRouter();\r\n    const { ...querys } = router.query;\r\n    const { sort, order, lang, page } = router.query;\r\n\r\n    return (\r\n        <>\r\n            <Row gutter={20}>\r\n                <Col span={6}>\r\n                    <List \r\n                        bordered\r\n                        header={<span className=\"list-header\">Languages</span>}\r\n                        style={{ marginBottom: 20 }}\r\n                        dataSource={LANGUAGES}\r\n                        renderItem={item => {\r\n                            const selected = item === lang;\r\n                            return  (\r\n                                <List.Item style={selected ? selectedItemStyle : null}>\r\n                                    {selected ? <span>{item}</span> : \r\n                                        <FilterLink \r\n                                            {...querys}\r\n                                            lang={lang}\r\n                                            name={item}\r\n                                        />\r\n                                    }\r\n                                </List.Item>\r\n                        )}}\r\n                    />\r\n\r\n                    <List \r\n                        bordered\r\n                        header={<span className=\"list-header\">Sort By</span>}\r\n                        dataSource={SORT_TYPES}\r\n                        renderItem={item => {\r\n                            let selected;\r\n                            if (item.name === 'Best Match' && !sort) {\r\n                                selected = true;\r\n                            } else if (item.name === sort && item.order === order) {\r\n                                selected = true;\r\n                            }\r\n                            return (\r\n                                <List.Item style={selected ? selectedItemStyle : null}>\r\n                                    {selected ? <span>{item.name}</span> : \r\n                                        <FilterLink \r\n                                            {...querys}\r\n                                            name={item.name}\r\n                                            sort={item.sort}\r\n                                            order={item.order}\r\n                                        />\r\n                                    }\r\n                                </List.Item>\r\n                        )}}\r\n                    />\r\n                </Col>\r\n                <Col span={18}> \r\n                    <h3 className=\"repos-title\">{repos.total_count} 个仓库</h3>\r\n                    {repos.items.map(repo => (\r\n                        <Repo repo={repo} key={repo.id} />\r\n                    ))}\r\n                    <div className=\"pagination\">\r\n                        <Pagination \r\n                            pageSize={30}\r\n                            current={+page || 1}\r\n                            total={repos.total_count}\r\n                            onChange={noop}\r\n                            itemRender={(page, type, ol) => {\r\n                                const p = type === 'page' ? page : type === 'prev' ?  page - 1 : page + 1;\r\n                                const name = type === 'page' ? page : ol;\r\n                                return <FilterLink {...querys} page={p} name={name} />\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <style jsx>{`\r\n                .pagination {\r\n                    padding: 20px;\r\n                    text-align: center;\r\n                }\r\n            `}</style>\r\n        </>\r\n    )\r\n}\r\n\r\nSearch.getInitialProps = async ({ query, req, res }) => {\r\n    console.log('Search getInitialProps called')\r\n    const { q, sort, lang, order, page} = query\r\n    if (!q) {\r\n        return {\r\n            repos: initRepos\r\n        }\r\n    }\r\n    // ?q=react+language:javascript&sort=stars&order=desc&page=2\r\n    let queryString = `?q=${q}`;\r\n    lang && (queryString += `+language:${lang}`);\r\n    sort && (queryString += `&sort=${sort}&order=${order || 'desc'}`);\r\n    page && (queryString += `&page=${page}`);\r\n    queryString += `&per_page=${per_page}`;\r\n\r\n    const result = await api.request({\r\n        url: `/search/repositories${queryString}`\r\n    }, req, res)\r\n    console.log(result)\r\n    return {\r\n        repos: result.data\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}