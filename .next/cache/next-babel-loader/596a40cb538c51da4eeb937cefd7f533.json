{"ast":null,"code":"import _Spin from \"antd/lib/spin\";\nimport _Icon from \"antd/lib/icon\";\nimport _Avatar from \"antd/lib/avatar\";\nimport _Button from \"antd/lib/button\";\nimport _Select from \"antd/lib/select\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport withRepoBasic from '../../components/with-repo-basic';\nimport api from '../../lib/api';\nimport { useState, useCallback, useEffect } from 'react';\nimport Markdown from '../../components/Markdown';\nimport moment from 'moment';\nimport SearchUser from '../../components/SearchUser';\nimport LRU from 'lru-cache';\nimport { react_issues } from '../../testData';\nconst {\n  Option\n} = _Select;\nconst cache = new LRU({\n  maxAge: 1000 * 60 * 60 * 24 //24h\n\n});\nconst isServer = true;\n\nfunction makeQueryStr(creator, state, labels) {\n  let creatorStr = creator ? `creator=${creator}` : '';\n  let stateStr = state ? `state=${state}` : '';\n  let labelStr = '';\n\n  if (labels && labels.length > 0) {\n    labelStr = `labels=${labels.join(',')}`;\n  }\n\n  const arr = [];\n  creatorStr && arr.push(creatorStr);\n  stateStr && arr.push(stateStr);\n  labelStr && arr.push(labelStr);\n  return `?${arr.join('&')}`;\n}\n\nfunction IssueDetail({\n  issue\n}) {\n  return __jsx(\"div\", {\n    className: \"jsx-4022606703\" + \" \" + \"root\"\n  }, __jsx(Markdown, {\n    content: issue.body\n  }), __jsx(\"div\", {\n    className: \"jsx-4022606703\" + \" \" + \"actions\"\n  }, __jsx(_Button, {\n    href: issue.html_url,\n    target: \"_blank\"\n  }, \"open discussion page\")), __jsx(_JSXStyle, {\n    id: \"4022606703\"\n  }, \".root.jsx-4022606703{background:#fbfbea;padding:20px;}.actions.jsx-4022606703{text-align:right;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=D:\\\\\\\\\\u7F16\\u7A0B\\\\\\\\\\u9879\\u76EE\\\\\\\\next\\u9879\\u76EE\\\\\\\\next-github\\\\\\\\pages\\\\\\\\detail\\\\\\\\issues.js */\"));\n}\n\nfunction Label({\n  label\n}) {\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    style: {\n      background: `#${label.color}`\n    },\n    className: \"jsx-408108560\" + \" \" + \"label\"\n  }, label.name), __jsx(_JSXStyle, {\n    id: \"408108560\"\n  }, \".label.jsx-408108560{display:inline-block;line-height:15px;margin-left:10px;padding:0 5px;border-radius:2px;font-size:12px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=D:\\\\\\\\\\u7F16\\u7A0B\\\\\\\\\\u9879\\u76EE\\\\\\\\next\\u9879\\u76EE\\\\\\\\next-github\\\\\\\\pages\\\\\\\\detail\\\\\\\\issues.js */\"));\n}\n\nfunction IssueItem({\n  issue\n}) {\n  const {\n    0: showDetail,\n    1: setShowDetail\n  } = useState(false);\n  const toggleShowDetail = useCallback(() => {\n    setShowDetail(pre => !pre);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-4012336324\" + \" \" + \"issue\"\n  }, __jsx(\"div\", {\n    className: \"jsx-4012336324\" + \" \" + \"avatar\"\n  }, __jsx(_Avatar, {\n    src: issue.user.avatar_url,\n    shape: \"square\",\n    size: 50\n  })), __jsx(\"div\", {\n    className: \"jsx-4012336324\" + \" \" + \"main-info\"\n  }, __jsx(\"h6\", {\n    className: \"jsx-4012336324\"\n  }, issue.state === 'open' ? __jsx(_Icon, {\n    type: \"exclamation-circle\",\n    style: {\n      color: '#28a745'\n    }\n  }) : __jsx(_Icon, {\n    type: \"check-circle\",\n    style: {\n      color: '#cb2431'\n    }\n  }), __jsx(\"span\", {\n    className: \"jsx-4012336324\" + \" \" + \"title\"\n  }, issue.title), issue.labels.map(label => __jsx(Label, {\n    label: label,\n    key: label.id\n  }))), __jsx(\"p\", {\n    className: \"jsx-4012336324\" + \" \" + \"sub-info\"\n  }, __jsx(\"span\", {\n    className: \"jsx-4012336324\"\n  }, \"#\", issue.number, \" opened on \", moment(issue.created_at).format(\"LL\"), \" by \", issue.user.login)), __jsx(_Button, {\n    type: \"primary\",\n    size: \"small\",\n    style: {\n      position: 'absolute',\n      right: 10,\n      top: 10\n    },\n    onClick: toggleShowDetail\n  }, showDetail ? 'hide' : 'detail')), __jsx(_JSXStyle, {\n    id: \"4012336324\"\n  }, \".issue.jsx-4012336324{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;position:relative;padding:10px;}.issue.jsx-4012336324:hover{background:#fafafa;}.issue.jsx-4012336324+.issue.jsx-4012336324{border-top:1px solid #ddd;}.main-info.jsx-4012336324>h6.jsx-4012336324{max-width:600px;font-size:16px;padding-right:40px;}.title.jsx-4012336324{margin-left:3px;}.avatar.jsx-4012336324{margin-right:20px;}.sub-info.jsx-4012336324{margin-bottom:0;font-size:12px;}.sub-info.jsx-4012336324>span.jsx-4012336324+span.jsx-4012336324{display:inline-block;margin-left:20px;font-size:12px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=D:\\\\\\\\\\u7F16\\u7A0B\\\\\\\\\\u9879\\u76EE\\\\\\\\next\\u9879\\u76EE\\\\\\\\next-github\\\\\\\\pages\\\\\\\\detail\\\\\\\\issues.js */\")), showDetail ? __jsx(IssueDetail, {\n    issue: issue\n  }) : null);\n}\n\nfunction Issues({\n  initIssues,\n  labels,\n  owner,\n  name\n}) {\n  const {\n    0: creator,\n    1: setCreator\n  } = useState();\n  const {\n    0: state,\n    1: setState\n  } = useState();\n  const {\n    0: label,\n    1: setLabel\n  } = useState();\n  const {\n    0: issues,\n    1: setIssues\n  } = useState(initIssues);\n  const {\n    0: fetching,\n    1: setFetching\n  } = useState(false);\n  useEffect(() => {\n    if (!isServer) {\n      cache.set(`${owner}/${name}`, labels);\n    }\n  }, [owner, name, labels]);\n  const handleCreatorChange = useCallback(value => {\n    setCreator(value);\n  }, []);\n  const handleStateChange = useCallback(value => {\n    setState(value);\n  }, []);\n  const handleLabelChange = useCallback(value => {\n    setLabel(value);\n  }, []);\n  const handleSearch = useCallback(() => {\n    setFetching(true);\n    api.request({\n      url: `/repos/${owner}/${name}/issues${makeQueryStr(creator, state, label)}`\n    }).then(resp => {\n      setIssues(resp.data);\n      setFetching(false);\n    });\n  }, [owner, name, creator, state, label]);\n  return __jsx(\"div\", {\n    className: \"jsx-3822302857\" + \" \" + \"root\"\n  }, __jsx(\"div\", {\n    className: \"jsx-3822302857\" + \" \" + \"search\"\n  }, __jsx(SearchUser, {\n    value: creator,\n    onChange: handleCreatorChange\n  }), __jsx(_Select, {\n    placeholder: \"state\",\n    value: state,\n    onChange: handleStateChange,\n    style: {\n      width: 150,\n      marginLeft: 10\n    }\n  }, __jsx(Option, {\n    value: \"all\"\n  }, \"all\"), __jsx(Option, {\n    value: \"open\"\n  }, \"open\"), __jsx(Option, {\n    value: \"closed\"\n  }, \"closed\")), __jsx(_Select, {\n    mode: \"multiple\",\n    placeholder: \"label\",\n    value: label,\n    onChange: handleLabelChange,\n    style: {\n      width: 150,\n      marginLeft: 10,\n      flexGrow: 1\n    }\n  }, labels.map(label => __jsx(Option, {\n    value: label.name,\n    key: label.id\n  }, label.name))), __jsx(_Button, {\n    type: \"primary\",\n    onClick: handleSearch,\n    disabled: fetching,\n    style: {\n      marginLeft: 10\n    }\n  }, \"search\")), __jsx(\"div\", {\n    className: \"jsx-3822302857\" + \" \" + \"issues\"\n  }, __jsx(_Spin, {\n    spinning: fetching\n  }, issues.map(issue => __jsx(IssueItem, {\n    key: issue.id,\n    issue: issue\n  })))), __jsx(_JSXStyle, {\n    id: \"3822302857\"\n  }, \".search.jsx-3822302857{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.issues.jsx-3822302857{border:1px solid #eee;border-radius:5px;margin:20px 0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=D:\\\\\\\\\\u7F16\\u7A0B\\\\\\\\\\u9879\\u76EE\\\\\\\\next\\u9879\\u76EE\\\\\\\\next-github\\\\\\\\pages\\\\\\\\detail\\\\\\\\issues.js */\"));\n}\n\nIssues.getInitialProps = async ({\n  query,\n  req,\n  res\n}) => {\n  const {\n    owner,\n    name\n  } = query;\n  const issuesResp = await api.request({\n    url: `/repos/${owner}/${name}/issues`\n  }, req, res);\n  const fullName = `${owner}/${name}`;\n  let labels = [];\n\n  if (cache.get(fullName)) {\n    labels = cache.get(fullName);\n  } else {\n    const labelsResp = await api.request({\n      url: `/repos/${owner}/${name}/labels`\n    }, req, res);\n    labels = labelsResp.data;\n  }\n\n  return {\n    initIssues: issuesResp.data || react_issues,\n    labels,\n    owner,\n    name\n  };\n};\n\nexport default withRepoBasic(Issues);","map":{"version":3,"sources":["D:/编程/项目/next项目/next-github/pages/detail/issues.js"],"names":["withRepoBasic","api","useState","useCallback","useEffect","Markdown","moment","SearchUser","LRU","react_issues","Option","cache","maxAge","isServer","makeQueryStr","creator","state","labels","creatorStr","stateStr","labelStr","length","join","arr","push","IssueDetail","issue","body","html_url","Label","label","background","color","name","IssueItem","showDetail","setShowDetail","toggleShowDetail","pre","user","avatar_url","title","map","id","number","created_at","format","login","position","right","top","Issues","initIssues","owner","setCreator","setState","setLabel","issues","setIssues","fetching","setFetching","set","handleCreatorChange","value","handleStateChange","handleLabelChange","handleSearch","request","url","then","resp","data","width","marginLeft","flexGrow","getInitialProps","query","req","res","issuesResp","fullName","get","labelsResp"],"mappings":"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","sourcesContent":["import withRepoBasic from '../../components/with-repo-basic'\r\nimport api from '../../lib/api'\r\nimport { Avatar, Button, Select, Spin, Icon } from 'antd'\r\nimport { useState, useCallback, useEffect } from 'react'\r\nimport Markdown from '../../components/Markdown'\r\nimport moment from 'moment'\r\nimport SearchUser from '../../components/SearchUser'\r\nimport LRU from 'lru-cache'\r\nimport { react_issues } from '../../testData'\r\n\r\nconst { Option } = Select;\r\nconst cache = new LRU({\r\n    maxAge: 1000 * 60 * 60 * 24 //24h\r\n});\r\nconst isServer = typeof window === 'undefined'\r\n\r\nfunction makeQueryStr(creator, state, labels) {\r\n    let creatorStr = creator ? `creator=${creator}` : '';\r\n    let stateStr = state ? `state=${state}` : '';\r\n    let labelStr = '';\r\n    if (labels && labels.length > 0) {\r\n        labelStr = `labels=${labels.join(',')}`\r\n    }\r\n\r\n    const arr = [];\r\n\r\n    creatorStr && arr.push(creatorStr)\r\n    stateStr && arr.push(stateStr)\r\n    labelStr && arr.push(labelStr)\r\n\r\n    return `?${arr.join('&')}`\r\n}\r\n\r\nfunction IssueDetail({ issue }) {\r\n    return (\r\n        <div className=\"root\">\r\n            <Markdown content={issue.body} />\r\n            <div className=\"actions\">\r\n                <Button href={issue.html_url} target=\"_blank\">\r\n                    open discussion page\r\n                </Button>\r\n            </div>\r\n            <style jsx>{`\r\n                .root {\r\n                    background: #fbfbea;\r\n                    padding: 20px;\r\n                }\r\n                .actions {\r\n                    text-align: right;\r\n                }\r\n            `}</style>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction Label({ label }) {\r\n    return (\r\n        <>\r\n            <span className=\"label\" style={{ background: `#${label.color}` }}>\r\n                {label.name}\r\n            </span>\r\n            <style jsx>{`\r\n                .label {\r\n                    display: inline-block;\r\n                    line-height: 15px;\r\n                    margin-left: 10px;\r\n                    padding: 0 5px;\r\n                    border-radius: 2px;\r\n                    font-size: 12px;\r\n                }\r\n            `}</style>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction IssueItem({ issue }) {\r\n    const [showDetail, setShowDetail] = useState(false);\r\n\r\n    const toggleShowDetail = useCallback(() => {\r\n        setShowDetail(pre => !pre)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"issue\">\r\n                <div className=\"avatar\">\r\n                    <Avatar\r\n                        src={issue.user.avatar_url}\r\n                        shape=\"square\"\r\n                        size={50}\r\n                    />\r\n                </div>\r\n                <div className=\"main-info\">\r\n                    <h6>\r\n                        {issue.state === 'open' ? \r\n                            <Icon type=\"exclamation-circle\" style={{ color: '#28a745'}}/> :\r\n                            <Icon type=\"check-circle\" style={{color: '#cb2431'}}/>\r\n                        }\r\n                        <span className=\"title\">{issue.title}</span>\r\n                        {issue.labels.map(label => (\r\n                            <Label label={label} key={label.id} />\r\n                        ))}\r\n                    </h6>\r\n                    <p className=\"sub-info\">\r\n                        <span>\r\n                           #{issue.number} opened on {moment(issue.created_at).format(\"LL\")} by {issue.user.login}\r\n                        </span>\r\n                    </p>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        size=\"small\"\r\n                        style={{ position: 'absolute', right: 10, top: 10 }}\r\n                        onClick={toggleShowDetail}\r\n                    >\r\n                        {showDetail ? 'hide' : 'detail'}\r\n                    </Button>\r\n                </div>\r\n                <style jsx>{`\r\n                    .issue {\r\n                        display: flex;\r\n                        position: relative;\r\n                        padding: 10px;\r\n                    }    \r\n                    .issue:hover {\r\n                        background: #fafafa;\r\n                    }\r\n                    .issue + .issue {\r\n                        border-top: 1px solid #ddd;\r\n                    }\r\n                    .main-info > h6 {\r\n                        max-width: 600px;\r\n                        font-size: 16px;\r\n                        padding-right: 40px;\r\n                    }\r\n                    .title {\r\n                        margin-left: 3px;\r\n                    }\r\n                    .avatar {\r\n                        margin-right: 20px;\r\n                    }\r\n                    .sub-info {\r\n                        margin-bottom: 0;\r\n                        font-size: 12px;\r\n                    }\r\n                    .sub-info > span + span {\r\n                        display: inline-block;\r\n                        margin-left: 20px;\r\n                        font-size: 12px;\r\n                    }\r\n                `}</style>\r\n            </div>\r\n            {showDetail ? <IssueDetail issue={issue} /> : null}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nfunction Issues({ initIssues, labels, owner, name }) {\r\n    const [creator, setCreator] = useState();\r\n    const [state, setState] = useState();\r\n    const [label, setLabel] = useState();\r\n    const [issues, setIssues] = useState(initIssues);\r\n    const [fetching, setFetching] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!isServer) {\r\n            cache.set(`${owner}/${name}`, labels)\r\n        }\r\n    }, [owner, name, labels])\r\n\r\n    const handleCreatorChange = useCallback((value) => {\r\n        setCreator(value)\r\n    }, [])\r\n    const handleStateChange = useCallback((value) => {\r\n        setState(value)\r\n    }, [])\r\n    const handleLabelChange = useCallback((value) => {\r\n        setLabel(value)\r\n    }, [])\r\n    const handleSearch = useCallback(() => {\r\n        setFetching(true);\r\n        api.request({\r\n            url: `/repos/${owner}/${name}/issues${makeQueryStr(creator, state, label)}`\r\n        })\r\n        .then(resp => {\r\n            setIssues(resp.data);\r\n            setFetching(false);\r\n        })\r\n    }, [owner, name, creator, state, label])\r\n\r\n    return (\r\n        <div className=\"root\">\r\n            <div className=\"search\">\r\n                <SearchUser\r\n                    value={creator}\r\n                    onChange={handleCreatorChange}\r\n                />\r\n                <Select\r\n                    placeholder=\"state\"\r\n                    value={state}\r\n                    onChange={handleStateChange}\r\n                    style={{ width: 150, marginLeft: 10 }}\r\n                >\r\n                    <Option value=\"all\">all</Option>\r\n                    <Option value=\"open\">open</Option>\r\n                    <Option value=\"closed\">closed</Option>\r\n                </Select>\r\n                <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"label\"\r\n                    value={label}\r\n                    onChange={handleLabelChange}\r\n                    style={{ width: 150, marginLeft: 10, flexGrow: 1 }}\r\n                >\r\n                    {\r\n                        labels.map(label => (\r\n                            <Option value={label.name} key={label.id}>{label.name}</Option>\r\n                        ))\r\n                    }\r\n                </Select>\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={handleSearch}\r\n                    disabled={fetching}\r\n                    style={{ marginLeft: 10 }}\r\n                >\r\n                    search\r\n                </Button>\r\n            </div>\r\n            <div className=\"issues\">\r\n                <Spin spinning={fetching}>\r\n                    {issues.map(issue => <IssueItem key={issue.id} issue={issue} />)}\r\n                </Spin>\r\n            </div>\r\n            <style jsx>{`\r\n                .search {\r\n                    display: flex;\r\n                }\r\n                .issues {\r\n                    border: 1px solid #eee;\r\n                    border-radius: 5px;\r\n                    margin: 20px 0;\r\n                }    \r\n            `}</style>\r\n        </div>\r\n    )\r\n}\r\n\r\nIssues.getInitialProps = async ({ query, req, res }) => {\r\n    const { owner, name } = query;\r\n\r\n    const issuesResp = await api.request({\r\n        url: `/repos/${owner}/${name}/issues`\r\n    }, req, res);\r\n\r\n    const fullName = `${owner}/${name}`;\r\n    let labels = [];\r\n    if (cache.get(fullName)) {\r\n        labels = cache.get(fullName);\r\n    } else {\r\n        const labelsResp = await api.request({\r\n            url: `/repos/${owner}/${name}/labels`\r\n        }, req, res);\r\n        labels = labelsResp.data;\r\n    }\r\n\r\n    return {\r\n        initIssues: issuesResp.data || react_issues,\r\n        labels,\r\n        owner,\r\n        name,\r\n    }\r\n}\r\n\r\nexport default withRepoBasic(Issues)"]},"metadata":{},"sourceType":"module"}