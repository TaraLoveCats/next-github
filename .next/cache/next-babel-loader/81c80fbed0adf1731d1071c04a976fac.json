{"ast":null,"code":"import _Spin from \"antd/lib/spin\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import App from 'next/app'\nimport 'antd/dist/antd.css';\nimport Layout from '../components/Layout';\nimport { Provider } from 'react-redux';\nimport withRedux from '../lib/with-redux';\nimport Router from 'next/router';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps,\n      reduxStore = _ref.reduxStore;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var startLoading = function startLoading() {\n    setLoading(true);\n  };\n\n  var stopLoading = function stopLoading() {\n    setLoading(false);\n  };\n\n  useEffect(function () {\n    Router.events.on('routeChangeStart', startLoading);\n    Router.events.on('routeChangeComplete', stopLoading);\n    Router.events.on('routeChangeError', stopLoading);\n    return function () {\n      Router.events.off('routeChangeStart', startLoading);\n      Router.events.off('routeChangeComplete', stopLoading);\n      Router.events.off('routeChangeError', stopLoading);\n    };\n  }, []); // useEffect(() => {\n  //     axios.get('/github/search/repositories?/q=react')\n  //     .then(resp => console.log(resp))\n  // }, [])\n\n  return __jsx(Provider, {\n    store: reduxStore\n  }, __jsx(Layout, null, __jsx(_Spin, {\n    tip: \"\\u52A0\\u8F7D\\u4E2D...\",\n    spinning: loading\n  }, __jsx(Component, pageProps))));\n} // MyApp.getInitialProps = async (appContext) => {}\n\n\nexport default withRedux(MyApp);","map":{"version":3,"sources":["D:/编程/项目/next项目/next-github/pages/_app.js"],"names":["Layout","Provider","withRedux","Router","useState","useEffect","axios","MyApp","Component","pageProps","reduxStore","loading","setLoading","startLoading","stopLoading","events","on","off"],"mappings":";;;AAAA;AACA,OAAO,oBAAP;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,KAAT,OAAqD;AAAA,MAApCC,SAAoC,QAApCA,SAAoC;AAAA,MAAzBC,SAAyB,QAAzBA,SAAyB;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAAA,kBACnBN,QAAQ,CAAC,KAAD,CADW;AAAA,MAC1CO,OAD0C;AAAA,MACjCC,UADiC;;AAGjD,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvBD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH,GAFD;;AAGA,MAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAFD;;AAIAP,EAAAA,SAAS,CAAC,YAAM;AACZF,IAAAA,MAAM,CAACY,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCH,YAArC;AACAV,IAAAA,MAAM,CAACY,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCF,WAAxC;AACAX,IAAAA,MAAM,CAACY,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCF,WAArC;AACA,WAAO,YAAM;AACTX,MAAAA,MAAM,CAACY,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCJ,YAAtC;AACAV,MAAAA,MAAM,CAACY,MAAP,CAAcE,GAAd,CAAkB,qBAAlB,EAAyCH,WAAzC;AACAX,MAAAA,MAAM,CAACY,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCH,WAAtC;AACH,KAJD;AAKH,GATQ,EASN,EATM,CAAT,CAViD,CAqBjD;AACA;AACA;AACA;;AAEA,SACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEJ;AAAjB,KACI,MAAC,MAAD,QACI;AAAM,IAAA,GAAG,EAAC,uBAAV;AAAmB,IAAA,QAAQ,EAAEC;AAA7B,KACI,MAAC,SAAD,EAAeF,SAAf,CADJ,CADJ,CADJ,CADJ;AASH,C,CAED;;;AAEA,eAAeP,SAAS,CAACK,KAAD,CAAxB","sourcesContent":["// import App from 'next/app'\r\nimport 'antd/dist/antd.css'\r\nimport Layout from '../components/Layout'\r\nimport { Provider } from 'react-redux'  \r\nimport withRedux from '../lib/with-redux'\r\nimport Router from 'next/router'\r\nimport { Spin } from 'antd'\r\nimport { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction MyApp({ Component, pageProps, reduxStore }) {\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const startLoading = () => {\r\n        setLoading(true)\r\n    }\r\n    const stopLoading = () => {\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        Router.events.on('routeChangeStart', startLoading)\r\n        Router.events.on('routeChangeComplete', stopLoading)\r\n        Router.events.on('routeChangeError', stopLoading)\r\n        return () => {\r\n            Router.events.off('routeChangeStart', startLoading)\r\n            Router.events.off('routeChangeComplete', stopLoading)\r\n            Router.events.off('routeChangeError', stopLoading)\r\n        }\r\n    }, [])\r\n\r\n    // useEffect(() => {\r\n    //     axios.get('/github/search/repositories?/q=react')\r\n    //     .then(resp => console.log(resp))\r\n    // }, [])\r\n\r\n    return (\r\n        <Provider store={reduxStore}>\r\n            <Layout>\r\n                <Spin tip=\"加载中...\" spinning={loading}>\r\n                    <Component {...pageProps} />\r\n                </Spin>\r\n            </Layout>\r\n        </Provider>\r\n    )\r\n}\r\n\r\n// MyApp.getInitialProps = async (appContext) => {}\r\n\r\nexport default withRedux(MyApp)"]},"metadata":{},"sourceType":"module"}